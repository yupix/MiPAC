{
  "openapi": "3.1.0",
  "info": { "version": "2024.10.0-beta.6", "title": "Misskey API" },
  "externalDocs": {
    "description": "Repository",
    "url": "https://github.com/misskey-dev/misskey"
  },
  "servers": [{ "url": "https://nr.akarinext.org/api" }],
  "paths": {
    "/admin/meta": {
      "post": {
        "operationId": "admin___meta",
        "summary": "admin/meta",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:admin:meta*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/meta.ts"
        },
        "tags": ["meta"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "cacheRemoteFiles": { "type": "boolean" },
                    "cacheRemoteSensitiveFiles": { "type": "boolean" },
                    "emailRequiredForSignup": { "type": "boolean" },
                    "enableHcaptcha": { "type": "boolean" },
                    "hcaptchaSiteKey": { "type": ["string", "null"] },
                    "enableMcaptcha": { "type": "boolean" },
                    "mcaptchaSiteKey": { "type": ["string", "null"] },
                    "mcaptchaInstanceUrl": { "type": ["string", "null"] },
                    "enableRecaptcha": { "type": "boolean" },
                    "recaptchaSiteKey": { "type": ["string", "null"] },
                    "enableTurnstile": { "type": "boolean" },
                    "turnstileSiteKey": { "type": ["string", "null"] },
                    "swPublickey": { "type": ["string", "null"] },
                    "mascotImageUrl": {
                      "type": ["string", "null"],
                      "default": "/assets/ai.png"
                    },
                    "bannerUrl": { "type": ["string", "null"] },
                    "serverErrorImageUrl": { "type": ["string", "null"] },
                    "infoImageUrl": { "type": ["string", "null"] },
                    "notFoundImageUrl": { "type": ["string", "null"] },
                    "iconUrl": { "type": ["string", "null"] },
                    "app192IconUrl": { "type": ["string", "null"] },
                    "app512IconUrl": { "type": ["string", "null"] },
                    "enableEmail": { "type": "boolean" },
                    "enableServiceWorker": { "type": "boolean" },
                    "translatorAvailable": { "type": "boolean" },
                    "silencedHosts": {
                      "type": "array",
                      "items": { "type": "string" }
                    },
                    "mediaSilencedHosts": {
                      "type": "array",
                      "items": { "type": "string" }
                    },
                    "pinnedUsers": {
                      "type": "array",
                      "items": { "type": "string" }
                    },
                    "hiddenTags": {
                      "type": "array",
                      "items": { "type": "string" }
                    },
                    "blockedHosts": {
                      "type": "array",
                      "items": { "type": "string" }
                    },
                    "sensitiveWords": {
                      "type": "array",
                      "items": { "type": "string" }
                    },
                    "prohibitedWords": {
                      "type": "array",
                      "items": { "type": "string" }
                    },
                    "bannedEmailDomains": {
                      "type": "array",
                      "items": { "type": "string" }
                    },
                    "preservedUsernames": {
                      "type": "array",
                      "items": { "type": "string" }
                    },
                    "hcaptchaSecretKey": { "type": ["string", "null"] },
                    "mcaptchaSecretKey": { "type": ["string", "null"] },
                    "recaptchaSecretKey": { "type": ["string", "null"] },
                    "turnstileSecretKey": { "type": ["string", "null"] },
                    "sensitiveMediaDetection": { "type": "string" },
                    "sensitiveMediaDetectionSensitivity": { "type": "string" },
                    "setSensitiveFlagAutomatically": { "type": "boolean" },
                    "enableSensitiveMediaDetectionForVideos": {
                      "type": "boolean"
                    },
                    "proxyAccountId": {
                      "type": ["string", "null"],
                      "format": "id"
                    },
                    "email": { "type": ["string", "null"] },
                    "smtpSecure": { "type": "boolean" },
                    "smtpHost": { "type": ["string", "null"] },
                    "smtpPort": { "type": ["number", "null"] },
                    "smtpUser": { "type": ["string", "null"] },
                    "smtpPass": { "type": ["string", "null"] },
                    "swPrivateKey": { "type": ["string", "null"] },
                    "useObjectStorage": { "type": "boolean" },
                    "objectStorageBaseUrl": { "type": ["string", "null"] },
                    "objectStorageBucket": { "type": ["string", "null"] },
                    "objectStoragePrefix": { "type": ["string", "null"] },
                    "objectStorageEndpoint": { "type": ["string", "null"] },
                    "objectStorageRegion": { "type": ["string", "null"] },
                    "objectStoragePort": { "type": ["number", "null"] },
                    "objectStorageAccessKey": { "type": ["string", "null"] },
                    "objectStorageSecretKey": { "type": ["string", "null"] },
                    "objectStorageUseSSL": { "type": "boolean" },
                    "objectStorageUseProxy": { "type": "boolean" },
                    "objectStorageSetPublicRead": { "type": "boolean" },
                    "enableIpLogging": { "type": "boolean" },
                    "enableActiveEmailValidation": { "type": "boolean" },
                    "enableVerifymailApi": { "type": "boolean" },
                    "verifymailAuthKey": { "type": ["string", "null"] },
                    "enableTruemailApi": { "type": "boolean" },
                    "truemailInstance": { "type": ["string", "null"] },
                    "truemailAuthKey": { "type": ["string", "null"] },
                    "enableChartsForRemoteUser": { "type": "boolean" },
                    "enableChartsForFederatedInstances": { "type": "boolean" },
                    "enableServerMachineStats": { "type": "boolean" },
                    "enableIdenticonGeneration": { "type": "boolean" },
                    "manifestJsonOverride": { "type": "string" },
                    "policies": { "type": "object" },
                    "enableFanoutTimeline": { "type": "boolean" },
                    "enableFanoutTimelineDbFallback": { "type": "boolean" },
                    "perLocalUserUserTimelineCacheMax": { "type": "number" },
                    "perRemoteUserUserTimelineCacheMax": { "type": "number" },
                    "perUserHomeTimelineCacheMax": { "type": "number" },
                    "perUserListTimelineCacheMax": { "type": "number" },
                    "enableReactionsBuffering": { "type": "boolean" },
                    "notesPerOneAd": { "type": "number" },
                    "trustedLinkUrlPatterns": {
                      "type": "array",
                      "items": { "type": "string" }
                    },
                    "backgroundImageUrl": { "type": ["string", "null"] },
                    "deeplAuthKey": { "type": ["string", "null"] },
                    "deeplIsPro": { "type": "boolean" },
                    "defaultDarkTheme": { "type": ["string", "null"] },
                    "defaultLightTheme": { "type": ["string", "null"] },
                    "description": { "type": ["string", "null"] },
                    "disableRegistration": { "type": "boolean" },
                    "impressumUrl": { "type": ["string", "null"] },
                    "maintainerEmail": { "type": ["string", "null"] },
                    "maintainerName": { "type": ["string", "null"] },
                    "name": { "type": ["string", "null"] },
                    "shortName": { "type": ["string", "null"] },
                    "objectStorageS3ForcePathStyle": { "type": "boolean" },
                    "privacyPolicyUrl": { "type": ["string", "null"] },
                    "inquiryUrl": { "type": ["string", "null"] },
                    "repositoryUrl": { "type": ["string", "null"] },
                    "summalyProxy": {
                      "type": ["string", "null"],
                      "deprecated": true,
                      "description": "[Deprecated] Use \"urlPreviewSummaryProxyUrl\" instead."
                    },
                    "themeColor": { "type": ["string", "null"] },
                    "tosUrl": { "type": ["string", "null"] },
                    "uri": { "type": "string" },
                    "version": { "type": "string" },
                    "urlPreviewEnabled": { "type": "boolean" },
                    "urlPreviewTimeout": { "type": "number" },
                    "urlPreviewMaximumContentLength": { "type": "number" },
                    "urlPreviewRequireContentLength": { "type": "boolean" },
                    "urlPreviewUserAgent": { "type": ["string", "null"] },
                    "urlPreviewSummaryProxyUrl": { "type": ["string", "null"] },
                    "federation": { "type": "string" },
                    "federationHosts": {
                      "type": "array",
                      "items": { "type": "string" }
                    }
                  },
                  "required": [
                    "cacheRemoteFiles",
                    "cacheRemoteSensitiveFiles",
                    "emailRequiredForSignup",
                    "enableHcaptcha",
                    "hcaptchaSiteKey",
                    "enableMcaptcha",
                    "mcaptchaSiteKey",
                    "mcaptchaInstanceUrl",
                    "enableRecaptcha",
                    "recaptchaSiteKey",
                    "enableTurnstile",
                    "turnstileSiteKey",
                    "swPublickey",
                    "mascotImageUrl",
                    "bannerUrl",
                    "serverErrorImageUrl",
                    "infoImageUrl",
                    "notFoundImageUrl",
                    "iconUrl",
                    "app192IconUrl",
                    "app512IconUrl",
                    "enableEmail",
                    "enableServiceWorker",
                    "translatorAvailable",
                    "mediaSilencedHosts",
                    "pinnedUsers",
                    "hiddenTags",
                    "blockedHosts",
                    "sensitiveWords",
                    "prohibitedWords",
                    "preservedUsernames",
                    "hcaptchaSecretKey",
                    "mcaptchaSecretKey",
                    "recaptchaSecretKey",
                    "turnstileSecretKey",
                    "sensitiveMediaDetection",
                    "sensitiveMediaDetectionSensitivity",
                    "setSensitiveFlagAutomatically",
                    "enableSensitiveMediaDetectionForVideos",
                    "proxyAccountId",
                    "email",
                    "smtpSecure",
                    "smtpHost",
                    "smtpPort",
                    "smtpUser",
                    "smtpPass",
                    "swPrivateKey",
                    "useObjectStorage",
                    "objectStorageBaseUrl",
                    "objectStorageBucket",
                    "objectStoragePrefix",
                    "objectStorageEndpoint",
                    "objectStorageRegion",
                    "objectStoragePort",
                    "objectStorageAccessKey",
                    "objectStorageSecretKey",
                    "objectStorageUseSSL",
                    "objectStorageUseProxy",
                    "objectStorageSetPublicRead",
                    "enableIpLogging",
                    "enableActiveEmailValidation",
                    "enableVerifymailApi",
                    "verifymailAuthKey",
                    "enableTruemailApi",
                    "truemailInstance",
                    "truemailAuthKey",
                    "enableChartsForRemoteUser",
                    "enableChartsForFederatedInstances",
                    "enableServerMachineStats",
                    "enableIdenticonGeneration",
                    "manifestJsonOverride",
                    "policies",
                    "enableFanoutTimeline",
                    "enableFanoutTimelineDbFallback",
                    "perLocalUserUserTimelineCacheMax",
                    "perRemoteUserUserTimelineCacheMax",
                    "perUserHomeTimelineCacheMax",
                    "perUserListTimelineCacheMax",
                    "enableReactionsBuffering",
                    "notesPerOneAd",
                    "trustedLinkUrlPatterns",
                    "backgroundImageUrl",
                    "deeplAuthKey",
                    "deeplIsPro",
                    "defaultDarkTheme",
                    "defaultLightTheme",
                    "description",
                    "disableRegistration",
                    "impressumUrl",
                    "maintainerEmail",
                    "maintainerName",
                    "name",
                    "shortName",
                    "objectStorageS3ForcePathStyle",
                    "privacyPolicyUrl",
                    "inquiryUrl",
                    "repositoryUrl",
                    "summalyProxy",
                    "themeColor",
                    "tosUrl",
                    "uri",
                    "version",
                    "urlPreviewEnabled",
                    "urlPreviewTimeout",
                    "urlPreviewMaximumContentLength",
                    "urlPreviewRequireContentLength",
                    "urlPreviewUserAgent",
                    "urlPreviewSummaryProxyUrl",
                    "federation",
                    "federationHosts"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/abuse-user-reports": {
      "post": {
        "operationId": "admin___abuse-user-reports",
        "summary": "admin/abuse-user-reports",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:admin:abuse-user-reports*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/abuse-user-reports.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "sinceId": { "type": "string", "format": "misskey:id" },
                  "untilId": { "type": "string", "format": "misskey:id" },
                  "state": { "type": ["string", "null"], "default": null },
                  "reporterOrigin": {
                    "type": "string",
                    "enum": ["combined", "local", "remote"],
                    "default": "combined"
                  },
                  "targetUserOrigin": {
                    "type": "string",
                    "enum": ["combined", "local", "remote"],
                    "default": "combined"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "id",
                        "example": "xxxxxxxxxx"
                      },
                      "createdAt": { "type": "string", "format": "date-time" },
                      "comment": { "type": "string" },
                      "resolved": { "type": "boolean", "example": false },
                      "reporterId": { "type": "string", "format": "id" },
                      "targetUserId": { "type": "string", "format": "id" },
                      "assigneeId": {
                        "type": ["string", "null"],
                        "format": "id"
                      },
                      "reporter": {
                        "type": "object",
                        "$ref": "#/components/schemas/UserDetailedNotMe"
                      },
                      "targetUser": {
                        "type": "object",
                        "$ref": "#/components/schemas/UserDetailedNotMe"
                      },
                      "assignee": {
                        "type": ["object", "null"],
                        "allOf": [
                          { "$ref": "#/components/schemas/UserDetailedNotMe" }
                        ]
                      },
                      "forwarded": { "type": "boolean" },
                      "resolvedAs": {
                        "type": ["string", "null"],
                        "enum": ["accept", "reject", null]
                      },
                      "moderationNote": { "type": "string" }
                    },
                    "required": [
                      "id",
                      "createdAt",
                      "comment",
                      "resolved",
                      "reporterId",
                      "targetUserId",
                      "assigneeId",
                      "reporter",
                      "targetUser",
                      "assignee",
                      "forwarded",
                      "resolvedAs",
                      "moderationNote"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/abuse-report/notification-recipient/list": {
      "post": {
        "operationId": "admin___abuse-report___notification-recipient___list",
        "summary": "admin/abuse-report/notification-recipient/list",
        "description": "No description provided.\n\n**Internal Endpoint**: This endpoint is an API for the misskey mainframe and is not intended for use by third parties.\n**Credential required**: *Yes* / **Permission**: *read:admin:abuse-report:notification-recipient*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/abuse-report/notification-recipient/list.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "method": {
                    "type": "array",
                    "items": { "type": "string", "enum": ["email", "webhook"] }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/AbuseReportNotificationRecipient"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/abuse-report/notification-recipient/show": {
      "post": {
        "operationId": "admin___abuse-report___notification-recipient___show",
        "summary": "admin/abuse-report/notification-recipient/show",
        "description": "No description provided.\n\n**Internal Endpoint**: This endpoint is an API for the misskey mainframe and is not intended for use by third parties.\n**Credential required**: *Yes* / **Permission**: *read:admin:abuse-report:notification-recipient*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/abuse-report/notification-recipient/show.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": { "type": "string", "format": "misskey:id" }
                },
                "required": ["id"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/AbuseReportNotificationRecipient"
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_RECIPIENT": {
                    "value": {
                      "error": {
                        "message": "No such recipient.",
                        "code": "NO_SUCH_RECIPIENT",
                        "id": "013de6a8-f757-04cb-4d73-cc2a7e3368e4",
                        "kind": "server",
                        "httpStatusCode": 404
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/abuse-report/notification-recipient/create": {
      "post": {
        "operationId": "admin___abuse-report___notification-recipient___create",
        "summary": "admin/abuse-report/notification-recipient/create",
        "description": "No description provided.\n\n**Internal Endpoint**: This endpoint is an API for the misskey mainframe and is not intended for use by third parties.\n**Credential required**: *Yes* / **Permission**: *write:admin:abuse-report:notification-recipient*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/abuse-report/notification-recipient/create.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "isActive": { "type": "boolean" },
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255
                  },
                  "method": { "type": "string", "enum": ["email", "webhook"] },
                  "userId": { "type": "string", "format": "misskey:id" },
                  "systemWebhookId": {
                    "type": "string",
                    "format": "misskey:id"
                  }
                },
                "required": ["isActive", "name", "method"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/AbuseReportNotificationRecipient"
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CORRELATION_CHECK_EMAIL": {
                    "value": {
                      "error": {
                        "message": "If \"method\" is email, \"userId\" must be set.",
                        "code": "CORRELATION_CHECK_EMAIL",
                        "id": "348bb8ae-575a-6fe9-4327-5811999def8f",
                        "httpStatusCode": 400
                      }
                    }
                  },
                  "CORRELATION_CHECK_WEBHOOK": {
                    "value": {
                      "error": {
                        "message": "If \"method\" is webhook, \"systemWebhookId\" must be set.",
                        "code": "CORRELATION_CHECK_WEBHOOK",
                        "id": "b0c15051-de2d-29ef-260c-9585cddd701a",
                        "httpStatusCode": 400
                      }
                    }
                  },
                  "EMAIL_ADDRESS_NOT_SET": {
                    "value": {
                      "error": {
                        "message": "Email address is not set.",
                        "code": "EMAIL_ADDRESS_NOT_SET",
                        "id": "7cc1d85e-2f58-fc31-b644-3de8d0d3421f",
                        "httpStatusCode": 400
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/abuse-report/notification-recipient/update": {
      "post": {
        "operationId": "admin___abuse-report___notification-recipient___update",
        "summary": "admin/abuse-report/notification-recipient/update",
        "description": "No description provided.\n\n**Internal Endpoint**: This endpoint is an API for the misskey mainframe and is not intended for use by third parties.\n**Credential required**: *Yes* / **Permission**: *write:admin:abuse-report:notification-recipient*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/abuse-report/notification-recipient/update.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": { "type": "string", "format": "misskey:id" },
                  "isActive": { "type": "boolean" },
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255
                  },
                  "method": { "type": "string", "enum": ["email", "webhook"] },
                  "userId": { "type": "string", "format": "misskey:id" },
                  "systemWebhookId": {
                    "type": "string",
                    "format": "misskey:id"
                  }
                },
                "required": ["id", "isActive", "name", "method"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/AbuseReportNotificationRecipient"
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CORRELATION_CHECK_EMAIL": {
                    "value": {
                      "error": {
                        "message": "If \"method\" is email, \"userId\" must be set.",
                        "code": "CORRELATION_CHECK_EMAIL",
                        "id": "348bb8ae-575a-6fe9-4327-5811999def8f",
                        "httpStatusCode": 400
                      }
                    }
                  },
                  "CORRELATION_CHECK_WEBHOOK": {
                    "value": {
                      "error": {
                        "message": "If \"method\" is webhook, \"systemWebhookId\" must be set.",
                        "code": "CORRELATION_CHECK_WEBHOOK",
                        "id": "b0c15051-de2d-29ef-260c-9585cddd701a",
                        "httpStatusCode": 400
                      }
                    }
                  },
                  "EMAIL_ADDRESS_NOT_SET": {
                    "value": {
                      "error": {
                        "message": "Email address is not set.",
                        "code": "EMAIL_ADDRESS_NOT_SET",
                        "id": "7cc1d85e-2f58-fc31-b644-3de8d0d3421f",
                        "httpStatusCode": 400
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/abuse-report/notification-recipient/delete": {
      "post": {
        "operationId": "admin___abuse-report___notification-recipient___delete",
        "summary": "admin/abuse-report/notification-recipient/delete",
        "description": "No description provided.\n\n**Internal Endpoint**: This endpoint is an API for the misskey mainframe and is not intended for use by third parties.\n**Credential required**: *Yes* / **Permission**: *write:admin:abuse-report:notification-recipient*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/abuse-report/notification-recipient/delete.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": { "type": "string", "format": "misskey:id" }
                },
                "required": ["id"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/accounts/create": {
      "post": {
        "operationId": "admin___accounts___create",
        "summary": "admin/accounts/create",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/accounts/create.ts"
        },
        "tags": ["admin"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": { "type": "string", "pattern": "^\\w{1,20}$" },
                  "password": { "type": "string", "minLength": 1 },
                  "setupPassword": { "type": ["string", "null"] }
                },
                "required": ["username", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "token": { "type": "string" } },
                  "required": ["token"],
                  "$ref": "#/components/schemas/MeDetailed"
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "ACCESS_DENIED": {
                    "value": {
                      "error": {
                        "message": "Access denied.",
                        "code": "ACCESS_DENIED",
                        "id": "1fb7cb09-d46a-4fff-b8df-057708cce513"
                      }
                    }
                  },
                  "INCORRECT_INITIAL_PASSWORD": {
                    "value": {
                      "error": {
                        "message": "Initial password is incorrect.",
                        "code": "INCORRECT_INITIAL_PASSWORD",
                        "id": "97147c55-1ae1-4f6f-91d6-e1c3e0e76d62"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/accounts/delete": {
      "post": {
        "operationId": "admin___accounts___delete",
        "summary": "admin/accounts/delete",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:admin:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/accounts/delete.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["userId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/accounts/find-by-email": {
      "post": {
        "operationId": "admin___accounts___find-by-email",
        "summary": "admin/accounts/find-by-email",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:admin:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/accounts/find-by-email.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": { "email": { "type": "string" } },
                "required": ["email"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/UserDetailedNotMe"
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "USER_NOT_FOUND": {
                    "value": {
                      "error": {
                        "message": "No such user who has the email address.",
                        "code": "USER_NOT_FOUND",
                        "id": "cb865949-8af5-4062-a88c-ef55e8786d1d"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/ad/create": {
      "post": {
        "operationId": "admin___ad___create",
        "summary": "admin/ad/create",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:admin:ad*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/ad/create.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "url": { "type": "string", "minLength": 1 },
                  "memo": { "type": "string" },
                  "place": { "type": "string" },
                  "priority": { "type": "string" },
                  "ratio": { "type": "integer" },
                  "expiresAt": { "type": "integer" },
                  "startsAt": { "type": "integer" },
                  "imageUrl": { "type": "string", "minLength": 1 },
                  "dayOfWeek": { "type": "integer" }
                },
                "required": [
                  "url",
                  "memo",
                  "place",
                  "priority",
                  "ratio",
                  "expiresAt",
                  "startsAt",
                  "imageUrl",
                  "dayOfWeek"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Ad"
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/ad/delete": {
      "post": {
        "operationId": "admin___ad___delete",
        "summary": "admin/ad/delete",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:admin:ad*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/ad/delete.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": { "type": "string", "format": "misskey:id" }
                },
                "required": ["id"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_AD": {
                    "value": {
                      "error": {
                        "message": "No such ad.",
                        "code": "NO_SUCH_AD",
                        "id": "ccac9863-3a03-416e-b899-8a64041118b1"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/ad/list": {
      "post": {
        "operationId": "admin___ad___list",
        "summary": "admin/ad/list",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:admin:ad*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/ad/list.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "sinceId": { "type": "string", "format": "misskey:id" },
                  "untilId": { "type": "string", "format": "misskey:id" },
                  "publishing": { "type": ["boolean", "null"], "default": null }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/Ad"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/ad/update": {
      "post": {
        "operationId": "admin___ad___update",
        "summary": "admin/ad/update",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:admin:ad*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/ad/update.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": { "type": "string", "format": "misskey:id" },
                  "memo": { "type": "string" },
                  "url": { "type": "string", "minLength": 1 },
                  "imageUrl": { "type": "string", "minLength": 1 },
                  "place": { "type": "string" },
                  "priority": { "type": "string" },
                  "ratio": { "type": "integer" },
                  "expiresAt": { "type": "integer" },
                  "startsAt": { "type": "integer" },
                  "dayOfWeek": { "type": "integer" }
                },
                "required": ["id"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_AD": {
                    "value": {
                      "error": {
                        "message": "No such ad.",
                        "code": "NO_SUCH_AD",
                        "id": "b7aa1727-1354-47bc-a182-3a9c3973d300"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/announcements/create": {
      "post": {
        "operationId": "admin___announcements___create",
        "summary": "admin/announcements/create",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:admin:announcements*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/announcements/create.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string", "minLength": 1 },
                  "text": { "type": "string", "minLength": 1 },
                  "imageUrl": { "type": ["string", "null"], "minLength": 1 },
                  "icon": {
                    "type": "string",
                    "enum": ["info", "warning", "error", "success"],
                    "default": "info"
                  },
                  "display": {
                    "type": "string",
                    "enum": ["normal", "banner", "dialog"],
                    "default": "normal"
                  },
                  "forExistingUsers": { "type": "boolean", "default": false },
                  "silence": { "type": "boolean", "default": false },
                  "needConfirmationToRead": {
                    "type": "boolean",
                    "default": false
                  },
                  "userId": {
                    "type": ["string", "null"],
                    "format": "misskey:id",
                    "default": null
                  }
                },
                "required": ["title", "text", "imageUrl"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "id",
                      "example": "xxxxxxxxxx"
                    },
                    "createdAt": { "type": "string", "format": "date-time" },
                    "updatedAt": {
                      "type": ["string", "null"],
                      "format": "date-time"
                    },
                    "title": { "type": "string" },
                    "text": { "type": "string" },
                    "imageUrl": { "type": ["string", "null"] }
                  },
                  "required": [
                    "id",
                    "createdAt",
                    "updatedAt",
                    "title",
                    "text",
                    "imageUrl"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/announcements/delete": {
      "post": {
        "operationId": "admin___announcements___delete",
        "summary": "admin/announcements/delete",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:admin:announcements*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/announcements/delete.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": { "type": "string", "format": "misskey:id" }
                },
                "required": ["id"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_ANNOUNCEMENT": {
                    "value": {
                      "error": {
                        "message": "No such announcement.",
                        "code": "NO_SUCH_ANNOUNCEMENT",
                        "id": "ecad8040-a276-4e85-bda9-015a708d291e"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/announcements/list": {
      "post": {
        "operationId": "admin___announcements___list",
        "summary": "admin/announcements/list",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:admin:announcements*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/announcements/list.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "sinceId": { "type": "string", "format": "misskey:id" },
                  "untilId": { "type": "string", "format": "misskey:id" },
                  "userId": {
                    "type": ["string", "null"],
                    "format": "misskey:id"
                  },
                  "status": {
                    "type": "string",
                    "enum": ["all", "active", "archived"],
                    "default": "active"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "id",
                        "example": "xxxxxxxxxx"
                      },
                      "createdAt": { "type": "string", "format": "date-time" },
                      "updatedAt": {
                        "type": ["string", "null"],
                        "format": "date-time"
                      },
                      "text": { "type": "string" },
                      "title": { "type": "string" },
                      "imageUrl": { "type": ["string", "null"] },
                      "reads": { "type": "number" }
                    },
                    "required": [
                      "id",
                      "createdAt",
                      "updatedAt",
                      "text",
                      "title",
                      "imageUrl",
                      "reads"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/announcements/update": {
      "post": {
        "operationId": "admin___announcements___update",
        "summary": "admin/announcements/update",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:admin:announcements*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/announcements/update.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": { "type": "string", "format": "misskey:id" },
                  "title": { "type": "string", "minLength": 1 },
                  "text": { "type": "string", "minLength": 1 },
                  "imageUrl": { "type": ["string", "null"], "minLength": 0 },
                  "icon": {
                    "type": "string",
                    "enum": ["info", "warning", "error", "success"]
                  },
                  "display": {
                    "type": "string",
                    "enum": ["normal", "banner", "dialog"]
                  },
                  "forExistingUsers": { "type": "boolean" },
                  "silence": { "type": "boolean" },
                  "needConfirmationToRead": { "type": "boolean" },
                  "isActive": { "type": "boolean" }
                },
                "required": ["id"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_ANNOUNCEMENT": {
                    "value": {
                      "error": {
                        "message": "No such announcement.",
                        "code": "NO_SUCH_ANNOUNCEMENT",
                        "id": "d3aae5a7-6372-4cb4-b61c-f511ffc2d7cc"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/avatar-decorations/create": {
      "post": {
        "operationId": "admin___avatar-decorations___create",
        "summary": "admin/avatar-decorations/create",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:admin:avatar-decorations*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/avatar-decorations/create.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string", "minLength": 1 },
                  "description": { "type": "string" },
                  "url": { "type": "string", "minLength": 1 },
                  "roleIdsThatCanBeUsedThisDecoration": {
                    "type": "array",
                    "items": { "type": "string" }
                  }
                },
                "required": ["name", "description", "url"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/avatar-decorations/delete": {
      "post": {
        "operationId": "admin___avatar-decorations___delete",
        "summary": "admin/avatar-decorations/delete",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:admin:avatar-decorations*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/avatar-decorations/delete.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": { "type": "string", "format": "misskey:id" }
                },
                "required": ["id"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/avatar-decorations/list": {
      "post": {
        "operationId": "admin___avatar-decorations___list",
        "summary": "admin/avatar-decorations/list",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:admin:avatar-decorations*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/avatar-decorations/list.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "sinceId": { "type": "string", "format": "misskey:id" },
                  "untilId": { "type": "string", "format": "misskey:id" },
                  "userId": {
                    "type": ["string", "null"],
                    "format": "misskey:id"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "id",
                        "example": "xxxxxxxxxx"
                      },
                      "createdAt": { "type": "string", "format": "date-time" },
                      "updatedAt": {
                        "type": ["string", "null"],
                        "format": "date-time"
                      },
                      "name": { "type": "string" },
                      "description": { "type": "string" },
                      "url": { "type": "string" },
                      "roleIdsThatCanBeUsedThisDecoration": {
                        "type": "array",
                        "items": { "type": "string", "format": "id" }
                      }
                    },
                    "required": [
                      "id",
                      "createdAt",
                      "updatedAt",
                      "name",
                      "description",
                      "url",
                      "roleIdsThatCanBeUsedThisDecoration"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/avatar-decorations/update": {
      "post": {
        "operationId": "admin___avatar-decorations___update",
        "summary": "admin/avatar-decorations/update",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:admin:avatar-decorations*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/avatar-decorations/update.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": { "type": "string", "format": "misskey:id" },
                  "name": { "type": "string", "minLength": 1 },
                  "description": { "type": "string" },
                  "url": { "type": "string", "minLength": 1 },
                  "roleIdsThatCanBeUsedThisDecoration": {
                    "type": "array",
                    "items": { "type": "string" }
                  }
                },
                "required": ["id"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/delete-all-files-of-a-user": {
      "post": {
        "operationId": "admin___delete-all-files-of-a-user",
        "summary": "admin/delete-all-files-of-a-user",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:admin:delete-all-files-of-a-user*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/delete-all-files-of-a-user.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["userId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/unset-user-avatar": {
      "post": {
        "operationId": "admin___unset-user-avatar",
        "summary": "admin/unset-user-avatar",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:admin:unset-user-avatar*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/unset-user-avatar.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["userId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/unset-user-banner": {
      "post": {
        "operationId": "admin___unset-user-banner",
        "summary": "admin/unset-user-banner",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:admin:unset-user-banner*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/unset-user-banner.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["userId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/drive/clean-remote-files": {
      "post": {
        "operationId": "admin___drive___clean-remote-files",
        "summary": "admin/drive/clean-remote-files",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:admin:drive*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/drive/clean-remote-files.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/drive/cleanup": {
      "post": {
        "operationId": "admin___drive___cleanup",
        "summary": "admin/drive/cleanup",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:admin:drive*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/drive/cleanup.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/drive/files": {
      "post": {
        "operationId": "admin___drive___files",
        "summary": "admin/drive/files",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:admin:drive*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/drive/files.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "sinceId": { "type": "string", "format": "misskey:id" },
                  "untilId": { "type": "string", "format": "misskey:id" },
                  "userId": {
                    "type": ["string", "null"],
                    "format": "misskey:id"
                  },
                  "type": {
                    "type": ["string", "null"],
                    "pattern": "^[a-zA-Z0-9\\/\\-*]+$"
                  },
                  "origin": {
                    "type": "string",
                    "enum": ["combined", "local", "remote"],
                    "default": "local"
                  },
                  "hostname": {
                    "type": ["string", "null"],
                    "default": null,
                    "description": "The local host is represented with `null`."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/DriveFile"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/drive/show-file": {
      "post": {
        "operationId": "admin___drive___show-file",
        "summary": "admin/drive/show-file",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:admin:drive*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/drive/show-file.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fileId": { "type": "string", "format": "misskey:id" },
                  "url": { "type": "string" }
                },
                "anyOf": [{ "required": ["fileId"] }, { "required": ["url"] }]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "id",
                      "example": "xxxxxxxxxx"
                    },
                    "createdAt": { "type": "string", "format": "date-time" },
                    "userId": {
                      "type": ["string", "null"],
                      "format": "id",
                      "example": "xxxxxxxxxx"
                    },
                    "userHost": {
                      "type": ["string", "null"],
                      "description": "The local host is represented with `null`."
                    },
                    "md5": {
                      "type": "string",
                      "format": "md5",
                      "example": "15eca7fba0480996e2245f5185bf39f2"
                    },
                    "name": { "type": "string", "example": "192.jpg" },
                    "type": { "type": "string", "example": "image/jpeg" },
                    "size": { "type": "number", "example": 51469 },
                    "comment": { "type": ["string", "null"] },
                    "blurhash": { "type": ["string", "null"] },
                    "properties": {
                      "type": "object",
                      "properties": {
                        "width": { "type": "number" },
                        "height": { "type": "number" },
                        "orientation": { "type": "number" },
                        "avgColor": { "type": "string" }
                      }
                    },
                    "storedInternal": {
                      "type": ["boolean", "null"],
                      "example": true
                    },
                    "url": { "type": ["string", "null"], "format": "url" },
                    "thumbnailUrl": {
                      "type": ["string", "null"],
                      "format": "url"
                    },
                    "webpublicUrl": {
                      "type": ["string", "null"],
                      "format": "url"
                    },
                    "accessKey": { "type": ["string", "null"] },
                    "thumbnailAccessKey": { "type": ["string", "null"] },
                    "webpublicAccessKey": { "type": ["string", "null"] },
                    "uri": { "type": ["string", "null"] },
                    "src": { "type": ["string", "null"] },
                    "folderId": {
                      "type": ["string", "null"],
                      "format": "id",
                      "example": "xxxxxxxxxx"
                    },
                    "isSensitive": { "type": "boolean" },
                    "isLink": { "type": "boolean" }
                  },
                  "required": [
                    "id",
                    "createdAt",
                    "userId",
                    "userHost",
                    "md5",
                    "name",
                    "type",
                    "size",
                    "comment",
                    "blurhash",
                    "properties",
                    "storedInternal",
                    "url",
                    "thumbnailUrl",
                    "webpublicUrl",
                    "accessKey",
                    "thumbnailAccessKey",
                    "webpublicAccessKey",
                    "uri",
                    "src",
                    "folderId",
                    "isSensitive",
                    "isLink"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_FILE": {
                    "value": {
                      "error": {
                        "message": "No such file.",
                        "code": "NO_SUCH_FILE",
                        "id": "caf3ca38-c6e5-472e-a30c-b05377dcc240"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/emoji/add-aliases-bulk": {
      "post": {
        "operationId": "admin___emoji___add-aliases-bulk",
        "summary": "admin/emoji/add-aliases-bulk",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:admin:emoji*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/emoji/add-aliases-bulk.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ids": {
                    "type": "array",
                    "items": { "type": "string", "format": "misskey:id" }
                  },
                  "aliases": { "type": "array", "items": { "type": "string" } }
                },
                "required": ["ids", "aliases"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/emoji/add": {
      "post": {
        "operationId": "admin___emoji___add",
        "summary": "admin/emoji/add",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:admin:emoji*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/emoji/add.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string", "pattern": "^[a-zA-Z0-9_]+$" },
                  "fileId": { "type": "string", "format": "misskey:id" },
                  "category": {
                    "type": ["string", "null"],
                    "description": "Use `null` to reset the category."
                  },
                  "aliases": { "type": "array", "items": { "type": "string" } },
                  "license": { "type": ["string", "null"] },
                  "isSensitive": { "type": "boolean" },
                  "localOnly": { "type": "boolean" },
                  "roleIdsThatCanBeUsedThisEmojiAsReaction": {
                    "type": "array",
                    "items": { "type": "string" }
                  }
                },
                "required": ["name", "fileId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/EmojiDetailed"
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_FILE": {
                    "value": {
                      "error": {
                        "message": "No such file.",
                        "code": "NO_SUCH_FILE",
                        "id": "fc46b5a4-6b92-4c33-ac66-b806659bb5cf"
                      }
                    }
                  },
                  "DUPLICATE_NAME": {
                    "value": {
                      "error": {
                        "message": "Duplicate name.",
                        "code": "DUPLICATE_NAME",
                        "id": "f7a3462c-4e6e-4069-8421-b9bd4f4c3975"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/emoji/copy": {
      "post": {
        "operationId": "admin___emoji___copy",
        "summary": "admin/emoji/copy",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:admin:emoji*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/emoji/copy.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "emojiId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["emojiId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "id": { "type": "string", "format": "id" } },
                  "required": ["id"]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_EMOJI": {
                    "value": {
                      "error": {
                        "message": "No such emoji.",
                        "code": "NO_SUCH_EMOJI",
                        "id": "e2785b66-dca3-4087-9cac-b93c541cc425"
                      }
                    }
                  },
                  "DUPLICATE_NAME": {
                    "value": {
                      "error": {
                        "message": "Duplicate name.",
                        "code": "DUPLICATE_NAME",
                        "id": "f7a3462c-4e6e-4069-8421-b9bd4f4c3975"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/emoji/delete-bulk": {
      "post": {
        "operationId": "admin___emoji___delete-bulk",
        "summary": "admin/emoji/delete-bulk",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:admin:emoji*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/emoji/delete-bulk.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ids": {
                    "type": "array",
                    "items": { "type": "string", "format": "misskey:id" }
                  }
                },
                "required": ["ids"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/emoji/delete": {
      "post": {
        "operationId": "admin___emoji___delete",
        "summary": "admin/emoji/delete",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:admin:emoji*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/emoji/delete.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": { "type": "string", "format": "misskey:id" }
                },
                "required": ["id"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_EMOJI": {
                    "value": {
                      "error": {
                        "message": "No such emoji.",
                        "code": "NO_SUCH_EMOJI",
                        "id": "be83669b-773a-44b7-b1f8-e5e5170ac3c2"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/emoji/import-zip": {
      "post": {
        "operationId": "admin___emoji___import-zip",
        "summary": "admin/emoji/import-zip",
        "description": "No description provided.\n\n**Internal Endpoint**: This endpoint is an API for the misskey mainframe and is not intended for use by third parties.\n**Credential required**: *Yes*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/emoji/import-zip.ts"
        },
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fileId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["fileId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/emoji/list-remote": {
      "post": {
        "operationId": "admin___emoji___list-remote",
        "summary": "admin/emoji/list-remote",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:admin:emoji*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/emoji/list-remote.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "query": { "type": ["string", "null"], "default": null },
                  "host": {
                    "type": ["string", "null"],
                    "default": null,
                    "description": "Use `null` to represent the local host."
                  },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "sinceId": { "type": "string", "format": "misskey:id" },
                  "untilId": { "type": "string", "format": "misskey:id" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "string", "format": "id" },
                      "aliases": {
                        "type": "array",
                        "items": { "type": "string" }
                      },
                      "name": { "type": "string" },
                      "category": { "type": ["string", "null"] },
                      "host": {
                        "type": ["string", "null"],
                        "description": "The local host is represented with `null`."
                      },
                      "url": { "type": "string" }
                    },
                    "required": [
                      "id",
                      "aliases",
                      "name",
                      "category",
                      "host",
                      "url"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/emoji/list": {
      "post": {
        "operationId": "admin___emoji___list",
        "summary": "admin/emoji/list",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:admin:emoji*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/emoji/list.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "query": { "type": ["string", "null"], "default": null },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "sinceId": { "type": "string", "format": "misskey:id" },
                  "untilId": { "type": "string", "format": "misskey:id" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "string", "format": "id" },
                      "aliases": {
                        "type": "array",
                        "items": { "type": "string" }
                      },
                      "name": { "type": "string" },
                      "category": { "type": ["string", "null"] },
                      "host": {
                        "type": ["string", "null"],
                        "description": "The local host is represented with `null`. The field exists for compatibility with other API endpoints that return files."
                      },
                      "url": { "type": "string" }
                    },
                    "required": [
                      "id",
                      "aliases",
                      "name",
                      "category",
                      "host",
                      "url"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/emoji/remove-aliases-bulk": {
      "post": {
        "operationId": "admin___emoji___remove-aliases-bulk",
        "summary": "admin/emoji/remove-aliases-bulk",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:admin:emoji*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/emoji/remove-aliases-bulk.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ids": {
                    "type": "array",
                    "items": { "type": "string", "format": "misskey:id" }
                  },
                  "aliases": { "type": "array", "items": { "type": "string" } }
                },
                "required": ["ids", "aliases"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/emoji/set-aliases-bulk": {
      "post": {
        "operationId": "admin___emoji___set-aliases-bulk",
        "summary": "admin/emoji/set-aliases-bulk",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:admin:emoji*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/emoji/set-aliases-bulk.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ids": {
                    "type": "array",
                    "items": { "type": "string", "format": "misskey:id" }
                  },
                  "aliases": { "type": "array", "items": { "type": "string" } }
                },
                "required": ["ids", "aliases"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/emoji/set-category-bulk": {
      "post": {
        "operationId": "admin___emoji___set-category-bulk",
        "summary": "admin/emoji/set-category-bulk",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:admin:emoji*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/emoji/set-category-bulk.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ids": {
                    "type": "array",
                    "items": { "type": "string", "format": "misskey:id" }
                  },
                  "category": {
                    "type": ["string", "null"],
                    "description": "Use `null` to reset the category."
                  }
                },
                "required": ["ids"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/emoji/set-license-bulk": {
      "post": {
        "operationId": "admin___emoji___set-license-bulk",
        "summary": "admin/emoji/set-license-bulk",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:admin:emoji*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/emoji/set-license-bulk.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ids": {
                    "type": "array",
                    "items": { "type": "string", "format": "misskey:id" }
                  },
                  "license": {
                    "type": ["string", "null"],
                    "description": "Use `null` to reset the license."
                  }
                },
                "required": ["ids"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/emoji/update": {
      "post": {
        "operationId": "admin___emoji___update",
        "summary": "admin/emoji/update",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:admin:emoji*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/emoji/update.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": { "type": "string", "format": "misskey:id" },
                  "name": { "type": "string", "pattern": "^[a-zA-Z0-9_]+$" },
                  "fileId": { "type": "string", "format": "misskey:id" },
                  "category": {
                    "type": ["string", "null"],
                    "description": "Use `null` to reset the category."
                  },
                  "aliases": { "type": "array", "items": { "type": "string" } },
                  "license": { "type": ["string", "null"] },
                  "isSensitive": { "type": "boolean" },
                  "localOnly": { "type": "boolean" },
                  "roleIdsThatCanBeUsedThisEmojiAsReaction": {
                    "type": "array",
                    "items": { "type": "string" }
                  }
                },
                "anyOf": [{ "required": ["id"] }, { "required": ["name"] }]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_EMOJI": {
                    "value": {
                      "error": {
                        "message": "No such emoji.",
                        "code": "NO_SUCH_EMOJI",
                        "id": "684dec9d-a8c2-4364-9aa8-456c49cb1dc8"
                      }
                    }
                  },
                  "NO_SUCH_FILE": {
                    "value": {
                      "error": {
                        "message": "No such file.",
                        "code": "NO_SUCH_FILE",
                        "id": "14fb9fd9-0731-4e2f-aeb9-f09e4740333d"
                      }
                    }
                  },
                  "SAME_NAME_EMOJI_EXISTS": {
                    "value": {
                      "error": {
                        "message": "Emoji that have same name already exists.",
                        "code": "SAME_NAME_EMOJI_EXISTS",
                        "id": "7180fe9d-1ee3-bff9-647d-fe9896d2ffb8"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/federation/delete-all-files": {
      "post": {
        "operationId": "admin___federation___delete-all-files",
        "summary": "admin/federation/delete-all-files",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:admin:federation*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/federation/delete-all-files.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": { "host": { "type": "string" } },
                "required": ["host"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/federation/refresh-remote-instance-metadata": {
      "post": {
        "operationId": "admin___federation___refresh-remote-instance-metadata",
        "summary": "admin/federation/refresh-remote-instance-metadata",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:admin:federation*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/federation/refresh-remote-instance-metadata.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": { "host": { "type": "string" } },
                "required": ["host"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/federation/remove-all-following": {
      "post": {
        "operationId": "admin___federation___remove-all-following",
        "summary": "admin/federation/remove-all-following",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:admin:federation*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/federation/remove-all-following.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": { "host": { "type": "string" } },
                "required": ["host"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/federation/update-instance": {
      "post": {
        "operationId": "admin___federation___update-instance",
        "summary": "admin/federation/update-instance",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:admin:federation*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/federation/update-instance.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "host": { "type": "string" },
                  "isSuspended": { "type": "boolean" },
                  "moderationNote": { "type": "string" }
                },
                "required": ["host"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/get-index-stats": {
      "post": {
        "operationId": "admin___get-index-stats",
        "summary": "admin/get-index-stats",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:admin:index-stats*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/get-index-stats.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "tablename": { "type": "string" },
                      "indexname": { "type": "string" }
                    },
                    "required": ["tablename", "indexname"]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/get-table-stats": {
      "post": {
        "operationId": "admin___get-table-stats",
        "summary": "admin/get-table-stats",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:admin:table-stats*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/get-table-stats.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "properties": {
                      "count": { "type": "number" },
                      "size": { "type": "number" }
                    },
                    "required": ["count", "size"]
                  },
                  "example": { "migrations": { "count": 66, "size": 32768 } }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/get-user-ips": {
      "post": {
        "operationId": "admin___get-user-ips",
        "summary": "admin/get-user-ips",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:admin:user-ips*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/get-user-ips.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["userId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "ip": { "type": "string" },
                      "createdAt": { "type": "string", "format": "date-time" }
                    },
                    "required": ["ip", "createdAt"]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/invite/create": {
      "post": {
        "operationId": "admin___invite___create",
        "summary": "admin/invite/create",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:admin:invite-codes*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/invite/create.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "count": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 1
                  },
                  "expiresAt": { "type": ["string", "null"] }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/InviteCode"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_DATE_TIME": {
                    "value": {
                      "error": {
                        "message": "Invalid date-time format",
                        "code": "INVALID_DATE_TIME",
                        "id": "f1380b15-3760-4c6c-a1db-5c3aaf1cbd49"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/invite/list": {
      "post": {
        "operationId": "admin___invite___list",
        "summary": "admin/invite/list",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:admin:invite-codes*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/invite/list.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 30
                  },
                  "offset": { "type": "integer", "default": 0 },
                  "type": {
                    "type": "string",
                    "enum": ["unused", "used", "expired", "all"],
                    "default": "all"
                  },
                  "sort": {
                    "type": "string",
                    "enum": ["+createdAt", "-createdAt", "+usedAt", "-usedAt"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/InviteCode"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/promo/create": {
      "post": {
        "operationId": "admin___promo___create",
        "summary": "admin/promo/create",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:admin:promo*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/promo/create.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "noteId": { "type": "string", "format": "misskey:id" },
                  "expiresAt": { "type": "integer" }
                },
                "required": ["noteId", "expiresAt"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_NOTE": {
                    "value": {
                      "error": {
                        "message": "No such note.",
                        "code": "NO_SUCH_NOTE",
                        "id": "ee449fbe-af2a-453b-9cae-cf2fe7c895fc"
                      }
                    }
                  },
                  "ALREADY_PROMOTED": {
                    "value": {
                      "error": {
                        "message": "The note has already promoted.",
                        "code": "ALREADY_PROMOTED",
                        "id": "ae427aa2-7a41-484f-a18c-2c1104051604"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/queue/clear": {
      "post": {
        "operationId": "admin___queue___clear",
        "summary": "admin/queue/clear",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:admin:queue*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/queue/clear.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/queue/deliver-delayed": {
      "post": {
        "operationId": "admin___queue___deliver-delayed",
        "summary": "admin/queue/deliver-delayed",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:admin:queue*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/queue/deliver-delayed.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "prefixItems": [{ "type": "string" }, { "type": "number" }],
                    "unevaluatedItems": false
                  },
                  "example": [["example.com", 12]]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/queue/inbox-delayed": {
      "post": {
        "operationId": "admin___queue___inbox-delayed",
        "summary": "admin/queue/inbox-delayed",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:admin:queue*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/queue/inbox-delayed.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "prefixItems": [{ "type": "string" }, { "type": "number" }],
                    "unevaluatedItems": false
                  },
                  "example": [["example.com", 12]]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/queue/promote": {
      "post": {
        "operationId": "admin___queue___promote",
        "summary": "admin/queue/promote",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:admin:queue*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/queue/promote.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": { "type": "string", "enum": ["deliver", "inbox"] }
                },
                "required": ["type"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/queue/stats": {
      "post": {
        "operationId": "admin___queue___stats",
        "summary": "admin/queue/stats",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:admin:emoji*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/queue/stats.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "deliver": { "$ref": "#/components/schemas/QueueCount" },
                    "inbox": { "$ref": "#/components/schemas/QueueCount" },
                    "db": { "$ref": "#/components/schemas/QueueCount" },
                    "objectStorage": {
                      "$ref": "#/components/schemas/QueueCount"
                    }
                  },
                  "required": ["deliver", "inbox", "db", "objectStorage"]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/relays/add": {
      "post": {
        "operationId": "admin___relays___add",
        "summary": "admin/relays/add",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:admin:relays*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/relays/add.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": { "inbox": { "type": "string" } },
                "required": ["inbox"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string", "format": "id" },
                    "inbox": { "type": "string", "format": "url" },
                    "status": {
                      "type": "string",
                      "default": "requesting",
                      "enum": ["requesting", "accepted", "rejected"]
                    }
                  },
                  "required": ["id", "inbox", "status"]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_URL": {
                    "value": {
                      "error": {
                        "message": "Invalid URL",
                        "code": "INVALID_URL",
                        "id": "fb8c92d3-d4e5-44e7-b3d4-800d5cef8b2c"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/relays/list": {
      "post": {
        "operationId": "admin___relays___list",
        "summary": "admin/relays/list",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:admin:relays*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/relays/list.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "string", "format": "id" },
                      "inbox": { "type": "string", "format": "url" },
                      "status": {
                        "type": "string",
                        "default": "requesting",
                        "enum": ["requesting", "accepted", "rejected"]
                      }
                    },
                    "required": ["id", "inbox", "status"]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/relays/remove": {
      "post": {
        "operationId": "admin___relays___remove",
        "summary": "admin/relays/remove",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:admin:relays*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/relays/remove.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": { "inbox": { "type": "string" } },
                "required": ["inbox"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/reset-password": {
      "post": {
        "operationId": "admin___reset-password",
        "summary": "admin/reset-password",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:admin:reset-password*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/reset-password.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["userId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "password": {
                      "type": "string",
                      "minLength": 8,
                      "maxLength": 8
                    }
                  },
                  "required": ["password"]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/resolve-abuse-user-report": {
      "post": {
        "operationId": "admin___resolve-abuse-user-report",
        "summary": "admin/resolve-abuse-user-report",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:admin:resolve-abuse-user-report*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/resolve-abuse-user-report.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "reportId": { "type": "string", "format": "misskey:id" },
                  "resolvedAs": {
                    "type": ["string", "null"],
                    "enum": ["accept", "reject", null]
                  }
                },
                "required": ["reportId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_ABUSE_REPORT": {
                    "value": {
                      "error": {
                        "message": "No such abuse report.",
                        "code": "NO_SUCH_ABUSE_REPORT",
                        "id": "ac3794dd-2ce4-d878-e546-73c60c06b398",
                        "kind": "server",
                        "httpStatusCode": 404
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/forward-abuse-user-report": {
      "post": {
        "operationId": "admin___forward-abuse-user-report",
        "summary": "admin/forward-abuse-user-report",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:admin:resolve-abuse-user-report*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/forward-abuse-user-report.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "reportId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["reportId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_ABUSE_REPORT": {
                    "value": {
                      "error": {
                        "message": "No such abuse report.",
                        "code": "NO_SUCH_ABUSE_REPORT",
                        "id": "8763e21b-d9bc-40be-acf6-54c1a6986493",
                        "kind": "server",
                        "httpStatusCode": 404
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/update-abuse-user-report": {
      "post": {
        "operationId": "admin___update-abuse-user-report",
        "summary": "admin/update-abuse-user-report",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:admin:resolve-abuse-user-report*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/update-abuse-user-report.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "reportId": { "type": "string", "format": "misskey:id" },
                  "moderationNote": { "type": "string" }
                },
                "required": ["reportId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_ABUSE_REPORT": {
                    "value": {
                      "error": {
                        "message": "No such abuse report.",
                        "code": "NO_SUCH_ABUSE_REPORT",
                        "id": "15f51cf5-46d1-4b1d-a618-b35bcbed0662",
                        "kind": "server",
                        "httpStatusCode": 404
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/send-email": {
      "post": {
        "operationId": "admin___send-email",
        "summary": "admin/send-email",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:admin:send-email*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/send-email.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "to": { "type": "string" },
                  "subject": { "type": "string" },
                  "text": { "type": "string" }
                },
                "required": ["to", "subject", "text"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/server-info": {
      "post": {
        "operationId": "admin___server-info",
        "summary": "admin/server-info",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:admin:server-info*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/server-info.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "machine": { "type": "string" },
                    "os": { "type": "string", "example": "linux" },
                    "node": { "type": "string" },
                    "psql": { "type": "string" },
                    "cpu": {
                      "type": "object",
                      "properties": {
                        "model": { "type": "string" },
                        "cores": { "type": "number" }
                      },
                      "required": ["model", "cores"]
                    },
                    "mem": {
                      "type": "object",
                      "properties": {
                        "total": { "type": "number", "format": "bytes" }
                      },
                      "required": ["total"]
                    },
                    "fs": {
                      "type": "object",
                      "properties": {
                        "total": { "type": "number", "format": "bytes" },
                        "used": { "type": "number", "format": "bytes" }
                      },
                      "required": ["total", "used"]
                    },
                    "net": {
                      "type": "object",
                      "properties": {
                        "interface": { "type": "string", "example": "eth0" }
                      },
                      "required": ["interface"]
                    }
                  },
                  "required": [
                    "machine",
                    "os",
                    "node",
                    "psql",
                    "cpu",
                    "mem",
                    "fs",
                    "net"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/show-moderation-logs": {
      "post": {
        "operationId": "admin___show-moderation-logs",
        "summary": "admin/show-moderation-logs",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:admin:show-moderation-log*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/show-moderation-logs.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "sinceId": { "type": "string", "format": "misskey:id" },
                  "untilId": { "type": "string", "format": "misskey:id" },
                  "type": { "type": ["string", "null"] },
                  "userId": {
                    "type": ["string", "null"],
                    "format": "misskey:id"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "string", "format": "id" },
                      "createdAt": { "type": "string", "format": "date-time" },
                      "type": { "type": "string" },
                      "info": { "type": "object" },
                      "userId": { "type": "string", "format": "id" },
                      "user": {
                        "type": "object",
                        "$ref": "#/components/schemas/UserDetailedNotMe"
                      }
                    },
                    "required": [
                      "id",
                      "createdAt",
                      "type",
                      "info",
                      "userId",
                      "user"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/show-user": {
      "post": {
        "operationId": "admin___show-user",
        "summary": "admin/show-user",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:admin:show-user*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/show-user.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["userId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "email": { "type": ["string", "null"] },
                    "emailVerified": { "type": "boolean" },
                    "followedMessage": { "type": ["string", "null"] },
                    "autoAcceptFollowed": { "type": "boolean" },
                    "noCrawle": { "type": "boolean" },
                    "preventAiLearning": { "type": "boolean" },
                    "alwaysMarkNsfw": { "type": "boolean" },
                    "autoSensitive": { "type": "boolean" },
                    "carefulBot": { "type": "boolean" },
                    "injectFeaturedNote": { "type": "boolean" },
                    "receiveAnnouncementEmail": { "type": "boolean" },
                    "mutedWords": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          { "type": "string" },
                          { "type": "array", "items": { "type": "string" } }
                        ]
                      }
                    },
                    "mutedInstances": {
                      "type": "array",
                      "items": { "type": "string" }
                    },
                    "notificationRecieveConfig": {
                      "type": "object",
                      "properties": {
                        "note": {
                          "type": "object",
                          "oneOf": [
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "all",
                                    "following",
                                    "follower",
                                    "mutualFollow",
                                    "followingOrFollower",
                                    "never"
                                  ]
                                }
                              },
                              "required": ["type"]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "type": { "type": "string", "enum": ["list"] },
                                "userListId": {
                                  "type": "string",
                                  "format": "misskey:id"
                                }
                              },
                              "required": ["type", "userListId"]
                            }
                          ]
                        },
                        "follow": {
                          "type": "object",
                          "oneOf": [
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "all",
                                    "following",
                                    "follower",
                                    "mutualFollow",
                                    "followingOrFollower",
                                    "never"
                                  ]
                                }
                              },
                              "required": ["type"]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "type": { "type": "string", "enum": ["list"] },
                                "userListId": {
                                  "type": "string",
                                  "format": "misskey:id"
                                }
                              },
                              "required": ["type", "userListId"]
                            }
                          ]
                        },
                        "mention": {
                          "type": "object",
                          "oneOf": [
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "all",
                                    "following",
                                    "follower",
                                    "mutualFollow",
                                    "followingOrFollower",
                                    "never"
                                  ]
                                }
                              },
                              "required": ["type"]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "type": { "type": "string", "enum": ["list"] },
                                "userListId": {
                                  "type": "string",
                                  "format": "misskey:id"
                                }
                              },
                              "required": ["type", "userListId"]
                            }
                          ]
                        },
                        "reply": {
                          "type": "object",
                          "oneOf": [
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "all",
                                    "following",
                                    "follower",
                                    "mutualFollow",
                                    "followingOrFollower",
                                    "never"
                                  ]
                                }
                              },
                              "required": ["type"]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "type": { "type": "string", "enum": ["list"] },
                                "userListId": {
                                  "type": "string",
                                  "format": "misskey:id"
                                }
                              },
                              "required": ["type", "userListId"]
                            }
                          ]
                        },
                        "renote": {
                          "type": "object",
                          "oneOf": [
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "all",
                                    "following",
                                    "follower",
                                    "mutualFollow",
                                    "followingOrFollower",
                                    "never"
                                  ]
                                }
                              },
                              "required": ["type"]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "type": { "type": "string", "enum": ["list"] },
                                "userListId": {
                                  "type": "string",
                                  "format": "misskey:id"
                                }
                              },
                              "required": ["type", "userListId"]
                            }
                          ]
                        },
                        "quote": {
                          "type": "object",
                          "oneOf": [
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "all",
                                    "following",
                                    "follower",
                                    "mutualFollow",
                                    "followingOrFollower",
                                    "never"
                                  ]
                                }
                              },
                              "required": ["type"]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "type": { "type": "string", "enum": ["list"] },
                                "userListId": {
                                  "type": "string",
                                  "format": "misskey:id"
                                }
                              },
                              "required": ["type", "userListId"]
                            }
                          ]
                        },
                        "reaction": {
                          "type": "object",
                          "oneOf": [
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "all",
                                    "following",
                                    "follower",
                                    "mutualFollow",
                                    "followingOrFollower",
                                    "never"
                                  ]
                                }
                              },
                              "required": ["type"]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "type": { "type": "string", "enum": ["list"] },
                                "userListId": {
                                  "type": "string",
                                  "format": "misskey:id"
                                }
                              },
                              "required": ["type", "userListId"]
                            }
                          ]
                        },
                        "pollEnded": {
                          "type": "object",
                          "oneOf": [
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "all",
                                    "following",
                                    "follower",
                                    "mutualFollow",
                                    "followingOrFollower",
                                    "never"
                                  ]
                                }
                              },
                              "required": ["type"]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "type": { "type": "string", "enum": ["list"] },
                                "userListId": {
                                  "type": "string",
                                  "format": "misskey:id"
                                }
                              },
                              "required": ["type", "userListId"]
                            }
                          ]
                        },
                        "receiveFollowRequest": {
                          "type": "object",
                          "oneOf": [
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "all",
                                    "following",
                                    "follower",
                                    "mutualFollow",
                                    "followingOrFollower",
                                    "never"
                                  ]
                                }
                              },
                              "required": ["type"]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "type": { "type": "string", "enum": ["list"] },
                                "userListId": {
                                  "type": "string",
                                  "format": "misskey:id"
                                }
                              },
                              "required": ["type", "userListId"]
                            }
                          ]
                        },
                        "followRequestAccepted": {
                          "type": "object",
                          "oneOf": [
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "all",
                                    "following",
                                    "follower",
                                    "mutualFollow",
                                    "followingOrFollower",
                                    "never"
                                  ]
                                }
                              },
                              "required": ["type"]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "type": { "type": "string", "enum": ["list"] },
                                "userListId": {
                                  "type": "string",
                                  "format": "misskey:id"
                                }
                              },
                              "required": ["type", "userListId"]
                            }
                          ]
                        },
                        "roleAssigned": {
                          "type": "object",
                          "oneOf": [
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "all",
                                    "following",
                                    "follower",
                                    "mutualFollow",
                                    "followingOrFollower",
                                    "never"
                                  ]
                                }
                              },
                              "required": ["type"]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "type": { "type": "string", "enum": ["list"] },
                                "userListId": {
                                  "type": "string",
                                  "format": "misskey:id"
                                }
                              },
                              "required": ["type", "userListId"]
                            }
                          ]
                        },
                        "achievementEarned": {
                          "type": "object",
                          "oneOf": [
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "all",
                                    "following",
                                    "follower",
                                    "mutualFollow",
                                    "followingOrFollower",
                                    "never"
                                  ]
                                }
                              },
                              "required": ["type"]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "type": { "type": "string", "enum": ["list"] },
                                "userListId": {
                                  "type": "string",
                                  "format": "misskey:id"
                                }
                              },
                              "required": ["type", "userListId"]
                            }
                          ]
                        },
                        "app": {
                          "type": "object",
                          "oneOf": [
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "all",
                                    "following",
                                    "follower",
                                    "mutualFollow",
                                    "followingOrFollower",
                                    "never"
                                  ]
                                }
                              },
                              "required": ["type"]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "type": { "type": "string", "enum": ["list"] },
                                "userListId": {
                                  "type": "string",
                                  "format": "misskey:id"
                                }
                              },
                              "required": ["type", "userListId"]
                            }
                          ]
                        },
                        "test": {
                          "type": "object",
                          "oneOf": [
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "all",
                                    "following",
                                    "follower",
                                    "mutualFollow",
                                    "followingOrFollower",
                                    "never"
                                  ]
                                }
                              },
                              "required": ["type"]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "type": { "type": "string", "enum": ["list"] },
                                "userListId": {
                                  "type": "string",
                                  "format": "misskey:id"
                                }
                              },
                              "required": ["type", "userListId"]
                            }
                          ]
                        }
                      }
                    },
                    "isModerator": { "type": "boolean" },
                    "isSilenced": { "type": "boolean" },
                    "isSuspended": { "type": "boolean" },
                    "isHibernated": { "type": "boolean" },
                    "lastActiveDate": { "type": ["string", "null"] },
                    "moderationNote": { "type": "string" },
                    "signins": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Signin" }
                    },
                    "policies": {
                      "type": "object",
                      "$ref": "#/components/schemas/RolePolicies"
                    },
                    "roles": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "$ref": "#/components/schemas/Role"
                      }
                    },
                    "roleAssigns": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "createdAt": { "type": "string" },
                          "expiresAt": { "type": ["string", "null"] },
                          "roleId": { "type": "string" }
                        },
                        "required": ["createdAt", "expiresAt", "roleId"]
                      }
                    }
                  },
                  "required": [
                    "email",
                    "emailVerified",
                    "followedMessage",
                    "autoAcceptFollowed",
                    "noCrawle",
                    "preventAiLearning",
                    "alwaysMarkNsfw",
                    "autoSensitive",
                    "carefulBot",
                    "injectFeaturedNote",
                    "receiveAnnouncementEmail",
                    "mutedWords",
                    "mutedInstances",
                    "notificationRecieveConfig",
                    "isModerator",
                    "isSilenced",
                    "isSuspended",
                    "isHibernated",
                    "lastActiveDate",
                    "moderationNote",
                    "signins",
                    "policies",
                    "roles",
                    "roleAssigns"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/show-users": {
      "post": {
        "operationId": "admin___show-users",
        "summary": "admin/show-users",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:admin:show-user*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/show-users.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "offset": { "type": "integer", "default": 0 },
                  "sort": {
                    "type": "string",
                    "enum": [
                      "+follower",
                      "-follower",
                      "+createdAt",
                      "-createdAt",
                      "+updatedAt",
                      "-updatedAt",
                      "+lastActiveDate",
                      "-lastActiveDate"
                    ]
                  },
                  "state": {
                    "type": "string",
                    "enum": [
                      "all",
                      "alive",
                      "available",
                      "admin",
                      "moderator",
                      "adminOrModerator",
                      "suspended"
                    ],
                    "default": "all"
                  },
                  "origin": {
                    "type": "string",
                    "enum": ["combined", "local", "remote"],
                    "default": "combined"
                  },
                  "username": { "type": ["string", "null"], "default": null },
                  "hostname": {
                    "type": ["string", "null"],
                    "default": null,
                    "description": "The local host is represented with `null`."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/UserDetailed"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/suspend-user": {
      "post": {
        "operationId": "admin___suspend-user",
        "summary": "admin/suspend-user",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:admin:suspend-user*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/suspend-user.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["userId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/unsuspend-user": {
      "post": {
        "operationId": "admin___unsuspend-user",
        "summary": "admin/unsuspend-user",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:admin:unsuspend-user*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/unsuspend-user.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["userId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/update-meta": {
      "post": {
        "operationId": "admin___update-meta",
        "summary": "admin/update-meta",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:admin:meta*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/update-meta.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "disableRegistration": { "type": ["boolean", "null"] },
                  "pinnedUsers": {
                    "type": ["array", "null"],
                    "items": { "type": "string" }
                  },
                  "hiddenTags": {
                    "type": ["array", "null"],
                    "items": { "type": "string" }
                  },
                  "blockedHosts": {
                    "type": ["array", "null"],
                    "items": { "type": "string" }
                  },
                  "sensitiveWords": {
                    "type": ["array", "null"],
                    "items": { "type": "string" }
                  },
                  "prohibitedWords": {
                    "type": ["array", "null"],
                    "items": { "type": "string" }
                  },
                  "themeColor": {
                    "type": ["string", "null"],
                    "pattern": "^#[0-9a-fA-F]{6}$"
                  },
                  "mascotImageUrl": { "type": ["string", "null"] },
                  "bannerUrl": { "type": ["string", "null"] },
                  "serverErrorImageUrl": { "type": ["string", "null"] },
                  "infoImageUrl": { "type": ["string", "null"] },
                  "notFoundImageUrl": { "type": ["string", "null"] },
                  "iconUrl": { "type": ["string", "null"] },
                  "app192IconUrl": { "type": ["string", "null"] },
                  "app512IconUrl": { "type": ["string", "null"] },
                  "backgroundImageUrl": { "type": ["string", "null"] },
                  "logoImageUrl": { "type": ["string", "null"] },
                  "name": { "type": ["string", "null"] },
                  "shortName": { "type": ["string", "null"] },
                  "description": { "type": ["string", "null"] },
                  "defaultLightTheme": { "type": ["string", "null"] },
                  "defaultDarkTheme": { "type": ["string", "null"] },
                  "cacheRemoteFiles": { "type": "boolean" },
                  "cacheRemoteSensitiveFiles": { "type": "boolean" },
                  "emailRequiredForSignup": { "type": "boolean" },
                  "enableHcaptcha": { "type": "boolean" },
                  "hcaptchaSiteKey": { "type": ["string", "null"] },
                  "hcaptchaSecretKey": { "type": ["string", "null"] },
                  "enableMcaptcha": { "type": "boolean" },
                  "mcaptchaSiteKey": { "type": ["string", "null"] },
                  "mcaptchaInstanceUrl": { "type": ["string", "null"] },
                  "mcaptchaSecretKey": { "type": ["string", "null"] },
                  "enableRecaptcha": { "type": "boolean" },
                  "recaptchaSiteKey": { "type": ["string", "null"] },
                  "recaptchaSecretKey": { "type": ["string", "null"] },
                  "enableTurnstile": { "type": "boolean" },
                  "turnstileSiteKey": { "type": ["string", "null"] },
                  "turnstileSecretKey": { "type": ["string", "null"] },
                  "sensitiveMediaDetection": {
                    "type": "string",
                    "enum": ["none", "all", "local", "remote"]
                  },
                  "sensitiveMediaDetectionSensitivity": {
                    "type": "string",
                    "enum": ["medium", "low", "high", "veryLow", "veryHigh"]
                  },
                  "setSensitiveFlagAutomatically": { "type": "boolean" },
                  "enableSensitiveMediaDetectionForVideos": {
                    "type": "boolean"
                  },
                  "proxyAccountId": {
                    "type": ["string", "null"],
                    "format": "misskey:id"
                  },
                  "maintainerName": { "type": ["string", "null"] },
                  "maintainerEmail": { "type": ["string", "null"] },
                  "langs": { "type": "array", "items": { "type": "string" } },
                  "deeplAuthKey": { "type": ["string", "null"] },
                  "deeplIsPro": { "type": "boolean" },
                  "enableEmail": { "type": "boolean" },
                  "email": { "type": ["string", "null"] },
                  "smtpSecure": { "type": "boolean" },
                  "smtpHost": { "type": ["string", "null"] },
                  "smtpPort": { "type": ["integer", "null"] },
                  "smtpUser": { "type": ["string", "null"] },
                  "smtpPass": { "type": ["string", "null"] },
                  "enableServiceWorker": { "type": "boolean" },
                  "swPublicKey": { "type": ["string", "null"] },
                  "swPrivateKey": { "type": ["string", "null"] },
                  "tosUrl": { "type": ["string", "null"] },
                  "repositoryUrl": { "type": ["string", "null"] },
                  "feedbackUrl": { "type": ["string", "null"] },
                  "impressumUrl": { "type": ["string", "null"] },
                  "privacyPolicyUrl": { "type": ["string", "null"] },
                  "inquiryUrl": { "type": ["string", "null"] },
                  "useObjectStorage": { "type": "boolean" },
                  "objectStorageBaseUrl": { "type": ["string", "null"] },
                  "objectStorageBucket": { "type": ["string", "null"] },
                  "objectStoragePrefix": { "type": ["string", "null"] },
                  "objectStorageEndpoint": { "type": ["string", "null"] },
                  "objectStorageRegion": { "type": ["string", "null"] },
                  "objectStoragePort": { "type": ["integer", "null"] },
                  "objectStorageAccessKey": { "type": ["string", "null"] },
                  "objectStorageSecretKey": { "type": ["string", "null"] },
                  "objectStorageUseSSL": { "type": "boolean" },
                  "objectStorageUseProxy": { "type": "boolean" },
                  "objectStorageSetPublicRead": { "type": "boolean" },
                  "objectStorageS3ForcePathStyle": { "type": "boolean" },
                  "enableIpLogging": { "type": "boolean" },
                  "enableActiveEmailValidation": { "type": "boolean" },
                  "enableVerifymailApi": { "type": "boolean" },
                  "verifymailAuthKey": { "type": ["string", "null"] },
                  "enableTruemailApi": { "type": "boolean" },
                  "truemailInstance": { "type": ["string", "null"] },
                  "truemailAuthKey": { "type": ["string", "null"] },
                  "enableChartsForRemoteUser": { "type": "boolean" },
                  "enableChartsForFederatedInstances": { "type": "boolean" },
                  "enableServerMachineStats": { "type": "boolean" },
                  "enableIdenticonGeneration": { "type": "boolean" },
                  "serverRules": {
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "bannedEmailDomains": {
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "preservedUsernames": {
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "manifestJsonOverride": { "type": "string" },
                  "enableFanoutTimeline": { "type": "boolean" },
                  "enableFanoutTimelineDbFallback": { "type": "boolean" },
                  "perLocalUserUserTimelineCacheMax": { "type": "integer" },
                  "perRemoteUserUserTimelineCacheMax": { "type": "integer" },
                  "perUserHomeTimelineCacheMax": { "type": "integer" },
                  "perUserListTimelineCacheMax": { "type": "integer" },
                  "enableReactionsBuffering": { "type": "boolean" },
                  "notesPerOneAd": { "type": "integer" },
                  "silencedHosts": {
                    "type": ["array", "null"],
                    "items": { "type": "string" }
                  },
                  "mediaSilencedHosts": {
                    "type": ["array", "null"],
                    "items": { "type": "string" }
                  },
                  "summalyProxy": {
                    "type": ["string", "null"],
                    "description": "[Deprecated] Use \"urlPreviewSummaryProxyUrl\" instead."
                  },
                  "trustedLinkUrlPatterns": {
                    "type": ["array", "null"],
                    "items": { "type": "string" }
                  },
                  "urlPreviewEnabled": { "type": "boolean" },
                  "urlPreviewTimeout": { "type": "integer" },
                  "urlPreviewMaximumContentLength": { "type": "integer" },
                  "urlPreviewRequireContentLength": { "type": "boolean" },
                  "urlPreviewUserAgent": { "type": ["string", "null"] },
                  "urlPreviewSummaryProxyUrl": { "type": ["string", "null"] },
                  "federation": {
                    "type": "string",
                    "enum": ["all", "none", "specified"]
                  },
                  "federationHosts": {
                    "type": "array",
                    "items": { "type": "string" }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/delete-account": {
      "post": {
        "operationId": "admin___delete-account",
        "summary": "admin/delete-account",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:admin:delete-account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/delete-account.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["userId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/update-user-note": {
      "post": {
        "operationId": "admin___update-user-note",
        "summary": "admin/update-user-note",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:admin:user-note*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/update-user-note.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": { "type": "string", "format": "misskey:id" },
                  "text": { "type": "string" }
                },
                "required": ["userId", "text"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/roles/create": {
      "post": {
        "operationId": "admin___roles___create",
        "summary": "admin/roles/create",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:admin:roles*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/roles/create.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "description": { "type": "string" },
                  "color": { "type": ["string", "null"] },
                  "iconUrl": { "type": ["string", "null"] },
                  "target": {
                    "type": "string",
                    "enum": ["manual", "conditional"]
                  },
                  "condFormula": { "type": "object" },
                  "isPublic": { "type": "boolean" },
                  "isModerator": { "type": "boolean" },
                  "isAdministrator": { "type": "boolean" },
                  "isExplorable": { "type": "boolean", "default": false },
                  "asBadge": { "type": "boolean" },
                  "canEditMembersByModerator": { "type": "boolean" },
                  "displayOrder": { "type": "number" },
                  "policies": { "type": "object" }
                },
                "required": [
                  "name",
                  "description",
                  "color",
                  "iconUrl",
                  "target",
                  "condFormula",
                  "isPublic",
                  "isModerator",
                  "isAdministrator",
                  "asBadge",
                  "canEditMembersByModerator",
                  "displayOrder",
                  "policies"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/roles/delete": {
      "post": {
        "operationId": "admin___roles___delete",
        "summary": "admin/roles/delete",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:admin:roles*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/roles/delete.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "roleId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["roleId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_ROLE": {
                    "value": {
                      "error": {
                        "message": "No such role.",
                        "code": "NO_SUCH_ROLE",
                        "id": "de0d6ecd-8e0a-4253-88ff-74bc89ae3d45"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/roles/list": {
      "post": {
        "operationId": "admin___roles___list",
        "summary": "admin/roles/list",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:admin:roles*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/roles/list.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/Role"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/roles/show": {
      "post": {
        "operationId": "admin___roles___show",
        "summary": "admin/roles/show",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:admin:roles*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/roles/show.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "roleId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["roleId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_ROLE": {
                    "value": {
                      "error": {
                        "message": "No such role.",
                        "code": "NO_SUCH_ROLE",
                        "id": "07dc7d34-c0d8-49b7-96c6-db3ce64ee0b3"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/roles/update": {
      "post": {
        "operationId": "admin___roles___update",
        "summary": "admin/roles/update",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:admin:roles*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/roles/update.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "roleId": { "type": "string", "format": "misskey:id" },
                  "name": { "type": "string" },
                  "description": { "type": "string" },
                  "color": { "type": ["string", "null"] },
                  "iconUrl": { "type": ["string", "null"] },
                  "target": {
                    "type": "string",
                    "enum": ["manual", "conditional"]
                  },
                  "condFormula": { "type": "object" },
                  "isPublic": { "type": "boolean" },
                  "isModerator": { "type": "boolean" },
                  "isAdministrator": { "type": "boolean" },
                  "isExplorable": { "type": "boolean" },
                  "asBadge": { "type": "boolean" },
                  "canEditMembersByModerator": { "type": "boolean" },
                  "displayOrder": { "type": "number" },
                  "policies": { "type": "object" }
                },
                "required": ["roleId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_ROLE": {
                    "value": {
                      "error": {
                        "message": "No such role.",
                        "code": "NO_SUCH_ROLE",
                        "id": "cd23ef55-09ad-428a-ac61-95a45e124b32"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/roles/assign": {
      "post": {
        "operationId": "admin___roles___assign",
        "summary": "admin/roles/assign",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:admin:roles*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/roles/assign.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "roleId": { "type": "string", "format": "misskey:id" },
                  "userId": { "type": "string", "format": "misskey:id" },
                  "expiresAt": { "type": ["integer", "null"] }
                },
                "required": ["roleId", "userId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_ROLE": {
                    "value": {
                      "error": {
                        "message": "No such role.",
                        "code": "NO_SUCH_ROLE",
                        "id": "6503c040-6af4-4ed9-bf07-f2dd16678eab"
                      }
                    }
                  },
                  "NO_SUCH_USER": {
                    "value": {
                      "error": {
                        "message": "No such user.",
                        "code": "NO_SUCH_USER",
                        "id": "558ea170-f653-4700-94d0-5a818371d0df"
                      }
                    }
                  },
                  "ACCESS_DENIED": {
                    "value": {
                      "error": {
                        "message": "Only administrators can edit members of the role.",
                        "code": "ACCESS_DENIED",
                        "id": "25b5bc31-dc79-4ebd-9bd2-c84978fd052c"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/roles/unassign": {
      "post": {
        "operationId": "admin___roles___unassign",
        "summary": "admin/roles/unassign",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:admin:roles*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/roles/unassign.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "roleId": { "type": "string", "format": "misskey:id" },
                  "userId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["roleId", "userId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_ROLE": {
                    "value": {
                      "error": {
                        "message": "No such role.",
                        "code": "NO_SUCH_ROLE",
                        "id": "6e519036-a70d-4c76-b679-bc8fb18194e2"
                      }
                    }
                  },
                  "NO_SUCH_USER": {
                    "value": {
                      "error": {
                        "message": "No such user.",
                        "code": "NO_SUCH_USER",
                        "id": "2b730f78-1179-461b-88ad-d24c9af1a5ce"
                      }
                    }
                  },
                  "NOT_ASSIGNED": {
                    "value": {
                      "error": {
                        "message": "Not assigned.",
                        "code": "NOT_ASSIGNED",
                        "id": "b9060ac7-5c94-4da4-9f55-2047c953df44"
                      }
                    }
                  },
                  "ACCESS_DENIED": {
                    "value": {
                      "error": {
                        "message": "Only administrators can edit members of the role.",
                        "code": "ACCESS_DENIED",
                        "id": "24636eee-e8c1-493e-94b2-e16ad401e262"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/roles/update-default-policies": {
      "post": {
        "operationId": "admin___roles___update-default-policies",
        "summary": "admin/roles/update-default-policies",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:admin:roles*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/roles/update-default-policies.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": { "policies": { "type": "object" } },
                "required": ["policies"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/roles/users": {
      "post": {
        "operationId": "admin___roles___users",
        "summary": "admin/roles/users",
        "description": "No description provided.\n\n**Credential required**: *No* / **Permission**: *read:admin:roles*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/roles/users.ts"
        },
        "tags": ["admin"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "roleId": { "type": "string", "format": "misskey:id" },
                  "sinceId": { "type": "string", "format": "misskey:id" },
                  "untilId": { "type": "string", "format": "misskey:id" },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  }
                },
                "required": ["roleId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "string", "format": "misskey:id" },
                      "createdAt": { "type": "string", "format": "date-time" },
                      "user": { "$ref": "#/components/schemas/UserDetailed" },
                      "expiresAt": {
                        "type": ["string", "null"],
                        "format": "date-time"
                      }
                    },
                    "required": ["id", "createdAt", "user", "expiresAt"]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_ROLE": {
                    "value": {
                      "error": {
                        "message": "No such role.",
                        "code": "NO_SUCH_ROLE",
                        "id": "224eff5e-2488-4b18-b3e7-f50d94421648"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/system-webhook/create": {
      "post": {
        "operationId": "admin___system-webhook___create",
        "summary": "admin/system-webhook/create",
        "description": "No description provided.\n\n**Internal Endpoint**: This endpoint is an API for the misskey mainframe and is not intended for use by third parties.\n**Credential required**: *Yes* / **Permission**: *write:admin:system-webhook*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/system-webhook/create.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "isActive": { "type": "boolean" },
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255
                  },
                  "on": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "abuseReport",
                        "abuseReportResolved",
                        "userCreated"
                      ]
                    }
                  },
                  "url": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 1024
                  },
                  "secret": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 1024
                  }
                },
                "required": ["isActive", "name", "on", "url", "secret"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/SystemWebhook"
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/system-webhook/delete": {
      "post": {
        "operationId": "admin___system-webhook___delete",
        "summary": "admin/system-webhook/delete",
        "description": "No description provided.\n\n**Internal Endpoint**: This endpoint is an API for the misskey mainframe and is not intended for use by third parties.\n**Credential required**: *Yes* / **Permission**: *write:admin:system-webhook*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/system-webhook/delete.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": { "type": "string", "format": "misskey:id" }
                },
                "required": ["id"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/system-webhook/list": {
      "post": {
        "operationId": "admin___system-webhook___list",
        "summary": "admin/system-webhook/list",
        "description": "No description provided.\n\n**Internal Endpoint**: This endpoint is an API for the misskey mainframe and is not intended for use by third parties.\n**Credential required**: *Yes* / **Permission**: *write:admin:system-webhook*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/system-webhook/list.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "isActive": { "type": "boolean" },
                  "on": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "abuseReport",
                        "abuseReportResolved",
                        "userCreated"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/SystemWebhook"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/system-webhook/show": {
      "post": {
        "operationId": "admin___system-webhook___show",
        "summary": "admin/system-webhook/show",
        "description": "No description provided.\n\n**Internal Endpoint**: This endpoint is an API for the misskey mainframe and is not intended for use by third parties.\n**Credential required**: *Yes* / **Permission**: *write:admin:system-webhook*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/system-webhook/show.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": { "type": "string", "format": "misskey:id" }
                },
                "required": ["id"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/SystemWebhook"
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_SYSTEM_WEBHOOK": {
                    "value": {
                      "error": {
                        "message": "No such SystemWebhook.",
                        "code": "NO_SUCH_SYSTEM_WEBHOOK",
                        "id": "38dd1ffe-04b4-6ff5-d8ba-4e6a6ae22c9d",
                        "kind": "server",
                        "httpStatusCode": 404
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/system-webhook/update": {
      "post": {
        "operationId": "admin___system-webhook___update",
        "summary": "admin/system-webhook/update",
        "description": "No description provided.\n\n**Internal Endpoint**: This endpoint is an API for the misskey mainframe and is not intended for use by third parties.\n**Credential required**: *Yes* / **Permission**: *write:admin:system-webhook*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/system-webhook/update.ts"
        },
        "tags": ["admin"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": { "type": "string", "format": "misskey:id" },
                  "isActive": { "type": "boolean" },
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255
                  },
                  "on": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "abuseReport",
                        "abuseReportResolved",
                        "userCreated"
                      ]
                    }
                  },
                  "url": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 1024
                  },
                  "secret": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 1024
                  }
                },
                "required": ["id", "isActive", "name", "on", "url", "secret"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/SystemWebhook"
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/system-webhook/test": {
      "post": {
        "operationId": "admin___system-webhook___test",
        "summary": "admin/system-webhook/test",
        "description": "No description provided.\n\n**Internal Endpoint**: This endpoint is an API for the misskey mainframe and is not intended for use by third parties.\n**Credential required**: *Yes* / **Permission**: *read:admin:system-webhook*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/admin/system-webhook/test.ts"
        },
        "tags": ["webhooks"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "webhookId": { "type": "string", "format": "misskey:id" },
                  "type": {
                    "type": "string",
                    "enum": [
                      "abuseReport",
                      "abuseReportResolved",
                      "userCreated"
                    ]
                  },
                  "override": {
                    "type": "object",
                    "properties": {
                      "url": { "type": "string" },
                      "secret": { "type": "string" }
                    }
                  }
                },
                "required": ["webhookId", "type"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_WEBHOOK": {
                    "value": {
                      "error": {
                        "message": "No such webhook.",
                        "code": "NO_SUCH_WEBHOOK",
                        "id": "0c52149c-e913-18f8-5dc7-74870bfe0cf9"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "To many requests",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "RATE_LIMIT_EXCEEDED": {
                    "value": {
                      "error": {
                        "message": "Rate limit exceeded. Please try again later.",
                        "code": "RATE_LIMIT_EXCEEDED",
                        "id": "d5826d14-3982-4d2e-8011-b9e9f02499ef"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/announcements": {
      "post": {
        "operationId": "announcements",
        "summary": "announcements",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/announcements.ts"
        },
        "tags": ["meta"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "sinceId": { "type": "string", "format": "misskey:id" },
                  "untilId": { "type": "string", "format": "misskey:id" },
                  "isActive": { "type": "boolean", "default": true }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/Announcement"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/announcements/show": {
      "post": {
        "operationId": "announcements___show",
        "summary": "announcements/show",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/announcements/show.ts"
        },
        "tags": ["meta"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "announcementId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["announcementId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Announcement"
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_ANNOUNCEMENT": {
                    "value": {
                      "error": {
                        "message": "No such announcement.",
                        "code": "NO_SUCH_ANNOUNCEMENT",
                        "id": "b57b5e1d-4f49-404a-9edb-46b00268f121"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/antennas/create": {
      "post": {
        "operationId": "antennas___create",
        "summary": "antennas/create",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/antennas/create.ts"
        },
        "tags": ["antennas"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "src": {
                    "type": "string",
                    "enum": ["home", "all", "users", "list", "users_blacklist"]
                  },
                  "userListId": {
                    "type": ["string", "null"],
                    "format": "misskey:id"
                  },
                  "keywords": {
                    "type": "array",
                    "items": { "type": "array", "items": { "type": "string" } }
                  },
                  "excludeKeywords": {
                    "type": "array",
                    "items": { "type": "array", "items": { "type": "string" } }
                  },
                  "users": { "type": "array", "items": { "type": "string" } },
                  "caseSensitive": { "type": "boolean" },
                  "localOnly": { "type": "boolean" },
                  "excludeBots": { "type": "boolean" },
                  "withReplies": { "type": "boolean" },
                  "withFile": { "type": "boolean" }
                },
                "required": [
                  "name",
                  "src",
                  "keywords",
                  "excludeKeywords",
                  "users",
                  "caseSensitive",
                  "withReplies",
                  "withFile"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Antenna"
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_USER_LIST": {
                    "value": {
                      "error": {
                        "message": "No such user list.",
                        "code": "NO_SUCH_USER_LIST",
                        "id": "95063e93-a283-4b8b-9aa5-bcdb8df69a7f"
                      }
                    }
                  },
                  "TOO_MANY_ANTENNAS": {
                    "value": {
                      "error": {
                        "message": "You cannot create antenna any more.",
                        "code": "TOO_MANY_ANTENNAS",
                        "id": "faf47050-e8b5-438c-913c-db2b1576fde4"
                      }
                    }
                  },
                  "EMPTY_KEYWORD": {
                    "value": {
                      "error": {
                        "message": "Either keywords or excludeKeywords is required.",
                        "code": "EMPTY_KEYWORD",
                        "id": "53ee222e-1ddd-4f9a-92e5-9fb82ddb463a"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/antennas/delete": {
      "post": {
        "operationId": "antennas___delete",
        "summary": "antennas/delete",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/antennas/delete.ts"
        },
        "tags": ["antennas"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "antennaId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["antennaId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_ANTENNA": {
                    "value": {
                      "error": {
                        "message": "No such antenna.",
                        "code": "NO_SUCH_ANTENNA",
                        "id": "b34dcf9d-348f-44bb-99d0-6c9314cfe2df"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/antennas/list": {
      "post": {
        "operationId": "antennas___list",
        "summary": "antennas/list",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/antennas/list.ts"
        },
        "tags": ["antennas"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/Antenna"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/antennas/notes": {
      "post": {
        "operationId": "antennas___notes",
        "summary": "antennas/notes",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/antennas/notes.ts"
        },
        "tags": ["antennas"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "antennaId": { "type": "string", "format": "misskey:id" },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "sinceId": { "type": "string", "format": "misskey:id" },
                  "untilId": { "type": "string", "format": "misskey:id" },
                  "sinceDate": { "type": "integer" },
                  "untilDate": { "type": "integer" }
                },
                "required": ["antennaId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/Note"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_ANTENNA": {
                    "value": {
                      "error": {
                        "message": "No such antenna.",
                        "code": "NO_SUCH_ANTENNA",
                        "id": "850926e0-fd3b-49b6-b69a-b28a5dbd82fe"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/antennas/show": {
      "post": {
        "operationId": "antennas___show",
        "summary": "antennas/show",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/antennas/show.ts"
        },
        "tags": ["antennas"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "antennaId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["antennaId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Antenna"
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_ANTENNA": {
                    "value": {
                      "error": {
                        "message": "No such antenna.",
                        "code": "NO_SUCH_ANTENNA",
                        "id": "c06569fb-b025-4f23-b22d-1fcd20d2816b"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/antennas/update": {
      "post": {
        "operationId": "antennas___update",
        "summary": "antennas/update",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/antennas/update.ts"
        },
        "tags": ["antennas"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "antennaId": { "type": "string", "format": "misskey:id" },
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "src": {
                    "type": "string",
                    "enum": ["home", "all", "users", "list", "users_blacklist"]
                  },
                  "userListId": {
                    "type": ["string", "null"],
                    "format": "misskey:id"
                  },
                  "keywords": {
                    "type": "array",
                    "items": { "type": "array", "items": { "type": "string" } }
                  },
                  "excludeKeywords": {
                    "type": "array",
                    "items": { "type": "array", "items": { "type": "string" } }
                  },
                  "users": { "type": "array", "items": { "type": "string" } },
                  "caseSensitive": { "type": "boolean" },
                  "localOnly": { "type": "boolean" },
                  "excludeBots": { "type": "boolean" },
                  "withReplies": { "type": "boolean" },
                  "withFile": { "type": "boolean" }
                },
                "required": ["antennaId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Antenna"
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_ANTENNA": {
                    "value": {
                      "error": {
                        "message": "No such antenna.",
                        "code": "NO_SUCH_ANTENNA",
                        "id": "10c673ac-8852-48eb-aa1f-f5b67f069290"
                      }
                    }
                  },
                  "NO_SUCH_USER_LIST": {
                    "value": {
                      "error": {
                        "message": "No such user list.",
                        "code": "NO_SUCH_USER_LIST",
                        "id": "1c6b35c9-943e-48c2-81e4-2844989407f7"
                      }
                    }
                  },
                  "EMPTY_KEYWORD": {
                    "value": {
                      "error": {
                        "message": "Either keywords or excludeKeywords is required.",
                        "code": "EMPTY_KEYWORD",
                        "id": "721aaff6-4e1b-4d88-8de6-877fae9f68c4"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/ap/get": {
      "post": {
        "operationId": "ap___get",
        "summary": "ap/get",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:federation*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/ap/get.ts"
        },
        "tags": ["federation"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": { "uri": { "type": "string" } },
                "required": ["uri"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "To many requests",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "RATE_LIMIT_EXCEEDED": {
                    "value": {
                      "error": {
                        "message": "Rate limit exceeded. Please try again later.",
                        "code": "RATE_LIMIT_EXCEEDED",
                        "id": "d5826d14-3982-4d2e-8011-b9e9f02499ef"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/ap/show": {
      "post": {
        "operationId": "ap___show",
        "summary": "ap/show",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/ap/show.ts"
        },
        "tags": ["federation"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": { "uri": { "type": "string" } },
                "required": ["uri"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": { "type": "string", "enum": ["User"] },
                        "object": {
                          "type": "object",
                          "$ref": "#/components/schemas/UserDetailedNotMe"
                        }
                      },
                      "required": ["type", "object"]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": { "type": "string", "enum": ["Note"] },
                        "object": {
                          "type": "object",
                          "$ref": "#/components/schemas/Note"
                        }
                      },
                      "required": ["type", "object"]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_OBJECT": {
                    "value": {
                      "error": {
                        "message": "No such object.",
                        "code": "NO_SUCH_OBJECT",
                        "id": "dc94d745-1262-4e63-a17d-fecaa57efc82"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "To many requests",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "RATE_LIMIT_EXCEEDED": {
                    "value": {
                      "error": {
                        "message": "Rate limit exceeded. Please try again later.",
                        "code": "RATE_LIMIT_EXCEEDED",
                        "id": "d5826d14-3982-4d2e-8011-b9e9f02499ef"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/app/create": {
      "post": {
        "operationId": "app___create",
        "summary": "app/create",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/app/create.ts"
        },
        "tags": ["app"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "description": { "type": "string" },
                  "permission": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": { "type": "string" }
                  },
                  "callbackUrl": { "type": ["string", "null"] }
                },
                "required": ["name", "description", "permission"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/App"
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/app/show": {
      "post": {
        "operationId": "app___show",
        "summary": "app/show",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/app/show.ts"
        },
        "tags": ["app"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "appId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["appId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/App"
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_APP": {
                    "value": {
                      "error": {
                        "message": "No such app.",
                        "code": "NO_SUCH_APP",
                        "id": "dce83913-2dc6-4093-8a7b-71dbb11718a3"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/accept": {
      "post": {
        "operationId": "auth___accept",
        "summary": "auth/accept",
        "description": "No description provided.\n\n**Internal Endpoint**: This endpoint is an API for the misskey mainframe and is not intended for use by third parties.\n**Credential required**: *Yes*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/auth/accept.ts"
        },
        "tags": ["auth"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": { "token": { "type": "string" } },
                "required": ["token"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_SESSION": {
                    "value": {
                      "error": {
                        "message": "No such session.",
                        "code": "NO_SUCH_SESSION",
                        "id": "9c72d8de-391a-43c1-9d06-08d29efde8df"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/session/generate": {
      "post": {
        "operationId": "auth___session___generate",
        "summary": "auth/session/generate",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/auth/session/generate.ts"
        },
        "tags": ["auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": { "appSecret": { "type": "string" } },
                "required": ["appSecret"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": { "type": "string" },
                    "url": { "type": "string", "format": "url" }
                  },
                  "required": ["token", "url"]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_APP": {
                    "value": {
                      "error": {
                        "message": "No such app.",
                        "code": "NO_SUCH_APP",
                        "id": "92f93e63-428e-4f2f-a5a4-39e1407fe998"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/session/show": {
      "post": {
        "operationId": "auth___session___show",
        "summary": "auth/session/show",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/auth/session/show.ts"
        },
        "tags": ["auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": { "token": { "type": "string" } },
                "required": ["token"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string", "format": "id" },
                    "app": {
                      "type": "object",
                      "$ref": "#/components/schemas/App"
                    },
                    "token": { "type": "string" }
                  },
                  "required": ["id", "app", "token"]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_SESSION": {
                    "value": {
                      "error": {
                        "message": "No such session.",
                        "code": "NO_SUCH_SESSION",
                        "id": "bd72c97d-eba7-4adb-a467-f171b8847250"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/session/userkey": {
      "post": {
        "operationId": "auth___session___userkey",
        "summary": "auth/session/userkey",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/auth/session/userkey.ts"
        },
        "tags": ["auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "appSecret": { "type": "string" },
                  "token": { "type": "string" }
                },
                "required": ["appSecret", "token"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accessToken": { "type": "string" },
                    "user": {
                      "type": "object",
                      "$ref": "#/components/schemas/UserDetailedNotMe"
                    }
                  },
                  "required": ["accessToken", "user"]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_APP": {
                    "value": {
                      "error": {
                        "message": "No such app.",
                        "code": "NO_SUCH_APP",
                        "id": "fcab192a-2c5a-43b7-8ad8-9b7054d8d40d"
                      }
                    }
                  },
                  "NO_SUCH_SESSION": {
                    "value": {
                      "error": {
                        "message": "No such session.",
                        "code": "NO_SUCH_SESSION",
                        "id": "5b5a1503-8bc8-4bd0-8054-dc189e8cdcb3"
                      }
                    }
                  },
                  "PENDING_SESSION": {
                    "value": {
                      "error": {
                        "message": "This session is not completed yet.",
                        "code": "PENDING_SESSION",
                        "id": "8c8a4145-02cc-4cca-8e66-29ba60445a8e"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/blocking/create": {
      "post": {
        "operationId": "blocking___create",
        "summary": "blocking/create",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:blocks*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/blocking/create.ts"
        },
        "tags": ["account"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["userId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/UserDetailedNotMe"
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_USER": {
                    "value": {
                      "error": {
                        "message": "No such user.",
                        "code": "NO_SUCH_USER",
                        "id": "7cc4f851-e2f1-4621-9633-ec9e1d00c01e"
                      }
                    }
                  },
                  "BLOCKEE_IS_YOURSELF": {
                    "value": {
                      "error": {
                        "message": "Blockee is yourself.",
                        "code": "BLOCKEE_IS_YOURSELF",
                        "id": "88b19138-f28d-42c0-8499-6a31bbd0fdc6"
                      }
                    }
                  },
                  "ALREADY_BLOCKING": {
                    "value": {
                      "error": {
                        "message": "You are already blocking that user.",
                        "code": "ALREADY_BLOCKING",
                        "id": "787fed64-acb9-464a-82eb-afbd745b9614"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "To many requests",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "RATE_LIMIT_EXCEEDED": {
                    "value": {
                      "error": {
                        "message": "Rate limit exceeded. Please try again later.",
                        "code": "RATE_LIMIT_EXCEEDED",
                        "id": "d5826d14-3982-4d2e-8011-b9e9f02499ef"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/blocking/delete": {
      "post": {
        "operationId": "blocking___delete",
        "summary": "blocking/delete",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:blocks*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/blocking/delete.ts"
        },
        "tags": ["account"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["userId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/UserDetailedNotMe"
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_USER": {
                    "value": {
                      "error": {
                        "message": "No such user.",
                        "code": "NO_SUCH_USER",
                        "id": "8621d8bf-c358-4303-a066-5ea78610eb3f"
                      }
                    }
                  },
                  "BLOCKEE_IS_YOURSELF": {
                    "value": {
                      "error": {
                        "message": "Blockee is yourself.",
                        "code": "BLOCKEE_IS_YOURSELF",
                        "id": "06f6fac6-524b-473c-a354-e97a40ae6eac"
                      }
                    }
                  },
                  "NOT_BLOCKING": {
                    "value": {
                      "error": {
                        "message": "You are not blocking that user.",
                        "code": "NOT_BLOCKING",
                        "id": "291b2efa-60c6-45c0-9f6a-045c8f9b02cd"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "To many requests",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "RATE_LIMIT_EXCEEDED": {
                    "value": {
                      "error": {
                        "message": "Rate limit exceeded. Please try again later.",
                        "code": "RATE_LIMIT_EXCEEDED",
                        "id": "d5826d14-3982-4d2e-8011-b9e9f02499ef"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/blocking/list": {
      "post": {
        "operationId": "blocking___list",
        "summary": "blocking/list",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:blocks*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/blocking/list.ts"
        },
        "tags": ["account"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 30
                  },
                  "sinceId": { "type": "string", "format": "misskey:id" },
                  "untilId": { "type": "string", "format": "misskey:id" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/Blocking"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/channels/create": {
      "post": {
        "operationId": "channels___create",
        "summary": "channels/create",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:channels*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/channels/create.ts"
        },
        "tags": ["channels"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128
                  },
                  "description": {
                    "type": ["string", "null"],
                    "minLength": 1,
                    "maxLength": 2048
                  },
                  "bannerId": {
                    "type": ["string", "null"],
                    "format": "misskey:id"
                  },
                  "color": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 16
                  },
                  "isSensitive": { "type": ["boolean", "null"] },
                  "allowRenoteToExternal": { "type": ["boolean", "null"] }
                },
                "required": ["name"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Channel"
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_FILE": {
                    "value": {
                      "error": {
                        "message": "No such file.",
                        "code": "NO_SUCH_FILE",
                        "id": "cd1e9f3e-5a12-4ab4-96f6-5d0a2cc32050"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "To many requests",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "RATE_LIMIT_EXCEEDED": {
                    "value": {
                      "error": {
                        "message": "Rate limit exceeded. Please try again later.",
                        "code": "RATE_LIMIT_EXCEEDED",
                        "id": "d5826d14-3982-4d2e-8011-b9e9f02499ef"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/channels/featured": {
      "post": {
        "operationId": "channels___featured",
        "summary": "channels/featured",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/channels/featured.ts"
        },
        "tags": ["channels"],
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/Channel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/channels/follow": {
      "post": {
        "operationId": "channels___follow",
        "summary": "channels/follow",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:channels*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/channels/follow.ts"
        },
        "tags": ["channels"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "channelId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["channelId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_CHANNEL": {
                    "value": {
                      "error": {
                        "message": "No such channel.",
                        "code": "NO_SUCH_CHANNEL",
                        "id": "c0031718-d573-4e85-928e-10039f1fbb68"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/channels/followed": {
      "post": {
        "operationId": "channels___followed",
        "summary": "channels/followed",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:channels*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/channels/followed.ts"
        },
        "tags": ["channels"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "sinceId": { "type": "string", "format": "misskey:id" },
                  "untilId": { "type": "string", "format": "misskey:id" },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 5
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/Channel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/channels/owned": {
      "post": {
        "operationId": "channels___owned",
        "summary": "channels/owned",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:channels*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/channels/owned.ts"
        },
        "tags": ["channels"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "sinceId": { "type": "string", "format": "misskey:id" },
                  "untilId": { "type": "string", "format": "misskey:id" },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 5
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/Channel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/channels/show": {
      "post": {
        "operationId": "channels___show",
        "summary": "channels/show",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/channels/show.ts"
        },
        "tags": ["channels"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "channelId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["channelId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Channel"
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_CHANNEL": {
                    "value": {
                      "error": {
                        "message": "No such channel.",
                        "code": "NO_SUCH_CHANNEL",
                        "id": "6f6c314b-7486-4897-8966-c04a66a02923"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/channels/timeline": {
      "post": {
        "operationId": "channels___timeline",
        "summary": "channels/timeline",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/channels/timeline.ts"
        },
        "tags": ["notes"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "channelId": { "type": "string", "format": "misskey:id" },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "sinceId": { "type": "string", "format": "misskey:id" },
                  "untilId": { "type": "string", "format": "misskey:id" },
                  "sinceDate": { "type": "integer" },
                  "untilDate": { "type": "integer" },
                  "allowPartial": { "type": "boolean", "default": false }
                },
                "required": ["channelId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/Note"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_CHANNEL": {
                    "value": {
                      "error": {
                        "message": "No such channel.",
                        "code": "NO_SUCH_CHANNEL",
                        "id": "4d0eeeba-a02c-4c3c-9966-ef60d38d2e7f"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/channels/unfollow": {
      "post": {
        "operationId": "channels___unfollow",
        "summary": "channels/unfollow",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:channels*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/channels/unfollow.ts"
        },
        "tags": ["channels"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "channelId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["channelId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_CHANNEL": {
                    "value": {
                      "error": {
                        "message": "No such channel.",
                        "code": "NO_SUCH_CHANNEL",
                        "id": "19959ee9-0153-4c51-bbd9-a98c49dc59d6"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/channels/update": {
      "post": {
        "operationId": "channels___update",
        "summary": "channels/update",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:channels*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/channels/update.ts"
        },
        "tags": ["channels"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "channelId": { "type": "string", "format": "misskey:id" },
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128
                  },
                  "description": {
                    "type": ["string", "null"],
                    "minLength": 1,
                    "maxLength": 2048
                  },
                  "bannerId": {
                    "type": ["string", "null"],
                    "format": "misskey:id"
                  },
                  "isArchived": { "type": ["boolean", "null"] },
                  "pinnedNoteIds": {
                    "type": "array",
                    "items": { "type": "string", "format": "misskey:id" }
                  },
                  "color": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 16
                  },
                  "isSensitive": { "type": ["boolean", "null"] },
                  "allowRenoteToExternal": { "type": ["boolean", "null"] }
                },
                "required": ["channelId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Channel"
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_CHANNEL": {
                    "value": {
                      "error": {
                        "message": "No such channel.",
                        "code": "NO_SUCH_CHANNEL",
                        "id": "f9c5467f-d492-4c3c-9a8d-a70dacc86512"
                      }
                    }
                  },
                  "ACCESS_DENIED": {
                    "value": {
                      "error": {
                        "message": "You do not have edit privilege of the channel.",
                        "code": "ACCESS_DENIED",
                        "id": "1fb7cb09-d46a-4fdf-b8df-057788cce513"
                      }
                    }
                  },
                  "NO_SUCH_FILE": {
                    "value": {
                      "error": {
                        "message": "No such file.",
                        "code": "NO_SUCH_FILE",
                        "id": "e86c14a4-0da2-4032-8df3-e737a04c7f3b"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/channels/favorite": {
      "post": {
        "operationId": "channels___favorite",
        "summary": "channels/favorite",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:channels*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/channels/favorite.ts"
        },
        "tags": ["channels"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "channelId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["channelId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_CHANNEL": {
                    "value": {
                      "error": {
                        "message": "No such channel.",
                        "code": "NO_SUCH_CHANNEL",
                        "id": "4938f5f3-6167-4c04-9149-6607b7542861"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/channels/unfavorite": {
      "post": {
        "operationId": "channels___unfavorite",
        "summary": "channels/unfavorite",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:channels*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/channels/unfavorite.ts"
        },
        "tags": ["channels"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "channelId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["channelId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_CHANNEL": {
                    "value": {
                      "error": {
                        "message": "No such channel.",
                        "code": "NO_SUCH_CHANNEL",
                        "id": "353c68dd-131a-476c-aa99-88a345e83668"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/channels/my-favorites": {
      "post": {
        "operationId": "channels___my-favorites",
        "summary": "channels/my-favorites",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:channels*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/channels/my-favorites.ts"
        },
        "tags": ["channels"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/Channel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/channels/search": {
      "post": {
        "operationId": "channels___search",
        "summary": "channels/search",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/channels/search.ts"
        },
        "tags": ["channels"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "query": { "type": "string" },
                  "type": {
                    "type": "string",
                    "enum": ["nameAndDescription", "nameOnly"],
                    "default": "nameAndDescription"
                  },
                  "sinceId": { "type": "string", "format": "misskey:id" },
                  "untilId": { "type": "string", "format": "misskey:id" },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 5
                  }
                },
                "required": ["query"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/Channel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/charts/active-users": {
      "get": {
        "operationId": "charts___active-users",
        "summary": "charts/active-users",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/charts/active-users.ts"
        },
        "tags": ["charts"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "span": { "type": "string", "enum": ["day", "hour"] },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 500,
                    "default": 30
                  },
                  "offset": { "type": ["integer", "null"], "default": null }
                },
                "required": ["span"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "readWrite": {
                      "type": "array",
                      "items": { "type": "number" }
                    },
                    "read": { "type": "array", "items": { "type": "number" } },
                    "write": { "type": "array", "items": { "type": "number" } },
                    "registeredWithinWeek": {
                      "type": "array",
                      "items": { "type": "number" }
                    },
                    "registeredWithinMonth": {
                      "type": "array",
                      "items": { "type": "number" }
                    },
                    "registeredWithinYear": {
                      "type": "array",
                      "items": { "type": "number" }
                    },
                    "registeredOutsideWeek": {
                      "type": "array",
                      "items": { "type": "number" }
                    },
                    "registeredOutsideMonth": {
                      "type": "array",
                      "items": { "type": "number" }
                    },
                    "registeredOutsideYear": {
                      "type": "array",
                      "items": { "type": "number" }
                    }
                  },
                  "required": [
                    "readWrite",
                    "read",
                    "write",
                    "registeredWithinWeek",
                    "registeredWithinMonth",
                    "registeredWithinYear",
                    "registeredOutsideWeek",
                    "registeredOutsideMonth",
                    "registeredOutsideYear"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "charts___active-users",
        "summary": "charts/active-users",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/charts/active-users.ts"
        },
        "tags": ["charts"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "span": { "type": "string", "enum": ["day", "hour"] },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 500,
                    "default": 30
                  },
                  "offset": { "type": ["integer", "null"], "default": null }
                },
                "required": ["span"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "readWrite": {
                      "type": "array",
                      "items": { "type": "number" }
                    },
                    "read": { "type": "array", "items": { "type": "number" } },
                    "write": { "type": "array", "items": { "type": "number" } },
                    "registeredWithinWeek": {
                      "type": "array",
                      "items": { "type": "number" }
                    },
                    "registeredWithinMonth": {
                      "type": "array",
                      "items": { "type": "number" }
                    },
                    "registeredWithinYear": {
                      "type": "array",
                      "items": { "type": "number" }
                    },
                    "registeredOutsideWeek": {
                      "type": "array",
                      "items": { "type": "number" }
                    },
                    "registeredOutsideMonth": {
                      "type": "array",
                      "items": { "type": "number" }
                    },
                    "registeredOutsideYear": {
                      "type": "array",
                      "items": { "type": "number" }
                    }
                  },
                  "required": [
                    "readWrite",
                    "read",
                    "write",
                    "registeredWithinWeek",
                    "registeredWithinMonth",
                    "registeredWithinYear",
                    "registeredOutsideWeek",
                    "registeredOutsideMonth",
                    "registeredOutsideYear"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/charts/ap-request": {
      "get": {
        "operationId": "charts___ap-request",
        "summary": "charts/ap-request",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/charts/ap-request.ts"
        },
        "tags": ["charts"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "span": { "type": "string", "enum": ["day", "hour"] },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 500,
                    "default": 30
                  },
                  "offset": { "type": ["integer", "null"], "default": null }
                },
                "required": ["span"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "deliverFailed": {
                      "type": "array",
                      "items": { "type": "number" }
                    },
                    "deliverSucceeded": {
                      "type": "array",
                      "items": { "type": "number" }
                    },
                    "inboxReceived": {
                      "type": "array",
                      "items": { "type": "number" }
                    }
                  },
                  "required": [
                    "deliverFailed",
                    "deliverSucceeded",
                    "inboxReceived"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "charts___ap-request",
        "summary": "charts/ap-request",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/charts/ap-request.ts"
        },
        "tags": ["charts"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "span": { "type": "string", "enum": ["day", "hour"] },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 500,
                    "default": 30
                  },
                  "offset": { "type": ["integer", "null"], "default": null }
                },
                "required": ["span"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "deliverFailed": {
                      "type": "array",
                      "items": { "type": "number" }
                    },
                    "deliverSucceeded": {
                      "type": "array",
                      "items": { "type": "number" }
                    },
                    "inboxReceived": {
                      "type": "array",
                      "items": { "type": "number" }
                    }
                  },
                  "required": [
                    "deliverFailed",
                    "deliverSucceeded",
                    "inboxReceived"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/charts/drive": {
      "get": {
        "operationId": "charts___drive",
        "summary": "charts/drive",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/charts/drive.ts"
        },
        "tags": ["charts"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "span": { "type": "string", "enum": ["day", "hour"] },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 500,
                    "default": 30
                  },
                  "offset": { "type": ["integer", "null"], "default": null }
                },
                "required": ["span"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "local": {
                      "type": "object",
                      "properties": {
                        "incCount": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "incSize": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "decCount": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "decSize": {
                          "type": "array",
                          "items": { "type": "number" }
                        }
                      },
                      "required": ["incCount", "incSize", "decCount", "decSize"]
                    },
                    "remote": {
                      "type": "object",
                      "properties": {
                        "incCount": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "incSize": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "decCount": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "decSize": {
                          "type": "array",
                          "items": { "type": "number" }
                        }
                      },
                      "required": ["incCount", "incSize", "decCount", "decSize"]
                    }
                  },
                  "required": ["local", "remote"]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "charts___drive",
        "summary": "charts/drive",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/charts/drive.ts"
        },
        "tags": ["charts"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "span": { "type": "string", "enum": ["day", "hour"] },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 500,
                    "default": 30
                  },
                  "offset": { "type": ["integer", "null"], "default": null }
                },
                "required": ["span"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "local": {
                      "type": "object",
                      "properties": {
                        "incCount": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "incSize": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "decCount": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "decSize": {
                          "type": "array",
                          "items": { "type": "number" }
                        }
                      },
                      "required": ["incCount", "incSize", "decCount", "decSize"]
                    },
                    "remote": {
                      "type": "object",
                      "properties": {
                        "incCount": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "incSize": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "decCount": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "decSize": {
                          "type": "array",
                          "items": { "type": "number" }
                        }
                      },
                      "required": ["incCount", "incSize", "decCount", "decSize"]
                    }
                  },
                  "required": ["local", "remote"]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/charts/federation": {
      "get": {
        "operationId": "charts___federation",
        "summary": "charts/federation",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/charts/federation.ts"
        },
        "tags": ["charts"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "span": { "type": "string", "enum": ["day", "hour"] },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 500,
                    "default": 30
                  },
                  "offset": { "type": ["integer", "null"], "default": null }
                },
                "required": ["span"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "deliveredInstances": {
                      "type": "array",
                      "items": { "type": "number" }
                    },
                    "inboxInstances": {
                      "type": "array",
                      "items": { "type": "number" }
                    },
                    "stalled": {
                      "type": "array",
                      "items": { "type": "number" }
                    },
                    "sub": { "type": "array", "items": { "type": "number" } },
                    "pub": { "type": "array", "items": { "type": "number" } },
                    "pubsub": {
                      "type": "array",
                      "items": { "type": "number" }
                    },
                    "subActive": {
                      "type": "array",
                      "items": { "type": "number" }
                    },
                    "pubActive": {
                      "type": "array",
                      "items": { "type": "number" }
                    }
                  },
                  "required": [
                    "deliveredInstances",
                    "inboxInstances",
                    "stalled",
                    "sub",
                    "pub",
                    "pubsub",
                    "subActive",
                    "pubActive"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "charts___federation",
        "summary": "charts/federation",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/charts/federation.ts"
        },
        "tags": ["charts"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "span": { "type": "string", "enum": ["day", "hour"] },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 500,
                    "default": 30
                  },
                  "offset": { "type": ["integer", "null"], "default": null }
                },
                "required": ["span"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "deliveredInstances": {
                      "type": "array",
                      "items": { "type": "number" }
                    },
                    "inboxInstances": {
                      "type": "array",
                      "items": { "type": "number" }
                    },
                    "stalled": {
                      "type": "array",
                      "items": { "type": "number" }
                    },
                    "sub": { "type": "array", "items": { "type": "number" } },
                    "pub": { "type": "array", "items": { "type": "number" } },
                    "pubsub": {
                      "type": "array",
                      "items": { "type": "number" }
                    },
                    "subActive": {
                      "type": "array",
                      "items": { "type": "number" }
                    },
                    "pubActive": {
                      "type": "array",
                      "items": { "type": "number" }
                    }
                  },
                  "required": [
                    "deliveredInstances",
                    "inboxInstances",
                    "stalled",
                    "sub",
                    "pub",
                    "pubsub",
                    "subActive",
                    "pubActive"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/charts/instance": {
      "get": {
        "operationId": "charts___instance",
        "summary": "charts/instance",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/charts/instance.ts"
        },
        "tags": ["charts"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "span": { "type": "string", "enum": ["day", "hour"] },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 500,
                    "default": 30
                  },
                  "offset": { "type": ["integer", "null"], "default": null },
                  "host": { "type": "string" }
                },
                "required": ["span", "host"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "requests": {
                      "type": "object",
                      "properties": {
                        "failed": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "succeeded": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "received": {
                          "type": "array",
                          "items": { "type": "number" }
                        }
                      },
                      "required": ["failed", "succeeded", "received"]
                    },
                    "notes": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "inc": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "dec": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "diffs": {
                          "type": "object",
                          "properties": {
                            "normal": {
                              "type": "array",
                              "items": { "type": "number" }
                            },
                            "reply": {
                              "type": "array",
                              "items": { "type": "number" }
                            },
                            "renote": {
                              "type": "array",
                              "items": { "type": "number" }
                            },
                            "withFile": {
                              "type": "array",
                              "items": { "type": "number" }
                            }
                          },
                          "required": ["normal", "reply", "renote", "withFile"]
                        }
                      },
                      "required": ["total", "inc", "dec", "diffs"]
                    },
                    "users": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "inc": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "dec": {
                          "type": "array",
                          "items": { "type": "number" }
                        }
                      },
                      "required": ["total", "inc", "dec"]
                    },
                    "following": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "inc": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "dec": {
                          "type": "array",
                          "items": { "type": "number" }
                        }
                      },
                      "required": ["total", "inc", "dec"]
                    },
                    "followers": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "inc": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "dec": {
                          "type": "array",
                          "items": { "type": "number" }
                        }
                      },
                      "required": ["total", "inc", "dec"]
                    },
                    "drive": {
                      "type": "object",
                      "properties": {
                        "totalFiles": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "incFiles": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "decFiles": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "incUsage": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "decUsage": {
                          "type": "array",
                          "items": { "type": "number" }
                        }
                      },
                      "required": [
                        "totalFiles",
                        "incFiles",
                        "decFiles",
                        "incUsage",
                        "decUsage"
                      ]
                    }
                  },
                  "required": [
                    "requests",
                    "notes",
                    "users",
                    "following",
                    "followers",
                    "drive"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "charts___instance",
        "summary": "charts/instance",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/charts/instance.ts"
        },
        "tags": ["charts"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "span": { "type": "string", "enum": ["day", "hour"] },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 500,
                    "default": 30
                  },
                  "offset": { "type": ["integer", "null"], "default": null },
                  "host": { "type": "string" }
                },
                "required": ["span", "host"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "requests": {
                      "type": "object",
                      "properties": {
                        "failed": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "succeeded": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "received": {
                          "type": "array",
                          "items": { "type": "number" }
                        }
                      },
                      "required": ["failed", "succeeded", "received"]
                    },
                    "notes": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "inc": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "dec": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "diffs": {
                          "type": "object",
                          "properties": {
                            "normal": {
                              "type": "array",
                              "items": { "type": "number" }
                            },
                            "reply": {
                              "type": "array",
                              "items": { "type": "number" }
                            },
                            "renote": {
                              "type": "array",
                              "items": { "type": "number" }
                            },
                            "withFile": {
                              "type": "array",
                              "items": { "type": "number" }
                            }
                          },
                          "required": ["normal", "reply", "renote", "withFile"]
                        }
                      },
                      "required": ["total", "inc", "dec", "diffs"]
                    },
                    "users": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "inc": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "dec": {
                          "type": "array",
                          "items": { "type": "number" }
                        }
                      },
                      "required": ["total", "inc", "dec"]
                    },
                    "following": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "inc": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "dec": {
                          "type": "array",
                          "items": { "type": "number" }
                        }
                      },
                      "required": ["total", "inc", "dec"]
                    },
                    "followers": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "inc": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "dec": {
                          "type": "array",
                          "items": { "type": "number" }
                        }
                      },
                      "required": ["total", "inc", "dec"]
                    },
                    "drive": {
                      "type": "object",
                      "properties": {
                        "totalFiles": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "incFiles": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "decFiles": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "incUsage": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "decUsage": {
                          "type": "array",
                          "items": { "type": "number" }
                        }
                      },
                      "required": [
                        "totalFiles",
                        "incFiles",
                        "decFiles",
                        "incUsage",
                        "decUsage"
                      ]
                    }
                  },
                  "required": [
                    "requests",
                    "notes",
                    "users",
                    "following",
                    "followers",
                    "drive"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/charts/notes": {
      "get": {
        "operationId": "charts___notes",
        "summary": "charts/notes",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/charts/notes.ts"
        },
        "tags": ["charts"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "span": { "type": "string", "enum": ["day", "hour"] },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 500,
                    "default": 30
                  },
                  "offset": { "type": ["integer", "null"], "default": null }
                },
                "required": ["span"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "local": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "inc": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "dec": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "diffs": {
                          "type": "object",
                          "properties": {
                            "normal": {
                              "type": "array",
                              "items": { "type": "number" }
                            },
                            "reply": {
                              "type": "array",
                              "items": { "type": "number" }
                            },
                            "renote": {
                              "type": "array",
                              "items": { "type": "number" }
                            },
                            "withFile": {
                              "type": "array",
                              "items": { "type": "number" }
                            }
                          },
                          "required": ["normal", "reply", "renote", "withFile"]
                        }
                      },
                      "required": ["total", "inc", "dec", "diffs"]
                    },
                    "remote": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "inc": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "dec": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "diffs": {
                          "type": "object",
                          "properties": {
                            "normal": {
                              "type": "array",
                              "items": { "type": "number" }
                            },
                            "reply": {
                              "type": "array",
                              "items": { "type": "number" }
                            },
                            "renote": {
                              "type": "array",
                              "items": { "type": "number" }
                            },
                            "withFile": {
                              "type": "array",
                              "items": { "type": "number" }
                            }
                          },
                          "required": ["normal", "reply", "renote", "withFile"]
                        }
                      },
                      "required": ["total", "inc", "dec", "diffs"]
                    }
                  },
                  "required": ["local", "remote"]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "charts___notes",
        "summary": "charts/notes",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/charts/notes.ts"
        },
        "tags": ["charts"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "span": { "type": "string", "enum": ["day", "hour"] },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 500,
                    "default": 30
                  },
                  "offset": { "type": ["integer", "null"], "default": null }
                },
                "required": ["span"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "local": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "inc": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "dec": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "diffs": {
                          "type": "object",
                          "properties": {
                            "normal": {
                              "type": "array",
                              "items": { "type": "number" }
                            },
                            "reply": {
                              "type": "array",
                              "items": { "type": "number" }
                            },
                            "renote": {
                              "type": "array",
                              "items": { "type": "number" }
                            },
                            "withFile": {
                              "type": "array",
                              "items": { "type": "number" }
                            }
                          },
                          "required": ["normal", "reply", "renote", "withFile"]
                        }
                      },
                      "required": ["total", "inc", "dec", "diffs"]
                    },
                    "remote": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "inc": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "dec": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "diffs": {
                          "type": "object",
                          "properties": {
                            "normal": {
                              "type": "array",
                              "items": { "type": "number" }
                            },
                            "reply": {
                              "type": "array",
                              "items": { "type": "number" }
                            },
                            "renote": {
                              "type": "array",
                              "items": { "type": "number" }
                            },
                            "withFile": {
                              "type": "array",
                              "items": { "type": "number" }
                            }
                          },
                          "required": ["normal", "reply", "renote", "withFile"]
                        }
                      },
                      "required": ["total", "inc", "dec", "diffs"]
                    }
                  },
                  "required": ["local", "remote"]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/charts/user/drive": {
      "get": {
        "operationId": "charts___user___drive",
        "summary": "charts/user/drive",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/charts/user/drive.ts"
        },
        "tags": ["charts"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "span": { "type": "string", "enum": ["day", "hour"] },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 500,
                    "default": 30
                  },
                  "offset": { "type": ["integer", "null"], "default": null },
                  "userId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["span", "userId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "totalCount": {
                      "type": "array",
                      "items": { "type": "number" }
                    },
                    "totalSize": {
                      "type": "array",
                      "items": { "type": "number" }
                    },
                    "incCount": {
                      "type": "array",
                      "items": { "type": "number" }
                    },
                    "incSize": {
                      "type": "array",
                      "items": { "type": "number" }
                    },
                    "decCount": {
                      "type": "array",
                      "items": { "type": "number" }
                    },
                    "decSize": {
                      "type": "array",
                      "items": { "type": "number" }
                    }
                  },
                  "required": [
                    "totalCount",
                    "totalSize",
                    "incCount",
                    "incSize",
                    "decCount",
                    "decSize"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "charts___user___drive",
        "summary": "charts/user/drive",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/charts/user/drive.ts"
        },
        "tags": ["charts"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "span": { "type": "string", "enum": ["day", "hour"] },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 500,
                    "default": 30
                  },
                  "offset": { "type": ["integer", "null"], "default": null },
                  "userId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["span", "userId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "totalCount": {
                      "type": "array",
                      "items": { "type": "number" }
                    },
                    "totalSize": {
                      "type": "array",
                      "items": { "type": "number" }
                    },
                    "incCount": {
                      "type": "array",
                      "items": { "type": "number" }
                    },
                    "incSize": {
                      "type": "array",
                      "items": { "type": "number" }
                    },
                    "decCount": {
                      "type": "array",
                      "items": { "type": "number" }
                    },
                    "decSize": {
                      "type": "array",
                      "items": { "type": "number" }
                    }
                  },
                  "required": [
                    "totalCount",
                    "totalSize",
                    "incCount",
                    "incSize",
                    "decCount",
                    "decSize"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/charts/user/following": {
      "get": {
        "operationId": "charts___user___following",
        "summary": "charts/user/following",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/charts/user/following.ts"
        },
        "tags": ["charts"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "span": { "type": "string", "enum": ["day", "hour"] },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 500,
                    "default": 30
                  },
                  "offset": { "type": ["integer", "null"], "default": null },
                  "userId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["span", "userId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "local": {
                      "type": "object",
                      "properties": {
                        "followings": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "array",
                              "items": { "type": "number" }
                            },
                            "inc": {
                              "type": "array",
                              "items": { "type": "number" }
                            },
                            "dec": {
                              "type": "array",
                              "items": { "type": "number" }
                            }
                          },
                          "required": ["total", "inc", "dec"]
                        },
                        "followers": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "array",
                              "items": { "type": "number" }
                            },
                            "inc": {
                              "type": "array",
                              "items": { "type": "number" }
                            },
                            "dec": {
                              "type": "array",
                              "items": { "type": "number" }
                            }
                          },
                          "required": ["total", "inc", "dec"]
                        }
                      },
                      "required": ["followings", "followers"]
                    },
                    "remote": {
                      "type": "object",
                      "properties": {
                        "followings": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "array",
                              "items": { "type": "number" }
                            },
                            "inc": {
                              "type": "array",
                              "items": { "type": "number" }
                            },
                            "dec": {
                              "type": "array",
                              "items": { "type": "number" }
                            }
                          },
                          "required": ["total", "inc", "dec"]
                        },
                        "followers": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "array",
                              "items": { "type": "number" }
                            },
                            "inc": {
                              "type": "array",
                              "items": { "type": "number" }
                            },
                            "dec": {
                              "type": "array",
                              "items": { "type": "number" }
                            }
                          },
                          "required": ["total", "inc", "dec"]
                        }
                      },
                      "required": ["followings", "followers"]
                    }
                  },
                  "required": ["local", "remote"]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "charts___user___following",
        "summary": "charts/user/following",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/charts/user/following.ts"
        },
        "tags": ["charts"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "span": { "type": "string", "enum": ["day", "hour"] },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 500,
                    "default": 30
                  },
                  "offset": { "type": ["integer", "null"], "default": null },
                  "userId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["span", "userId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "local": {
                      "type": "object",
                      "properties": {
                        "followings": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "array",
                              "items": { "type": "number" }
                            },
                            "inc": {
                              "type": "array",
                              "items": { "type": "number" }
                            },
                            "dec": {
                              "type": "array",
                              "items": { "type": "number" }
                            }
                          },
                          "required": ["total", "inc", "dec"]
                        },
                        "followers": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "array",
                              "items": { "type": "number" }
                            },
                            "inc": {
                              "type": "array",
                              "items": { "type": "number" }
                            },
                            "dec": {
                              "type": "array",
                              "items": { "type": "number" }
                            }
                          },
                          "required": ["total", "inc", "dec"]
                        }
                      },
                      "required": ["followings", "followers"]
                    },
                    "remote": {
                      "type": "object",
                      "properties": {
                        "followings": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "array",
                              "items": { "type": "number" }
                            },
                            "inc": {
                              "type": "array",
                              "items": { "type": "number" }
                            },
                            "dec": {
                              "type": "array",
                              "items": { "type": "number" }
                            }
                          },
                          "required": ["total", "inc", "dec"]
                        },
                        "followers": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "array",
                              "items": { "type": "number" }
                            },
                            "inc": {
                              "type": "array",
                              "items": { "type": "number" }
                            },
                            "dec": {
                              "type": "array",
                              "items": { "type": "number" }
                            }
                          },
                          "required": ["total", "inc", "dec"]
                        }
                      },
                      "required": ["followings", "followers"]
                    }
                  },
                  "required": ["local", "remote"]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/charts/user/notes": {
      "get": {
        "operationId": "charts___user___notes",
        "summary": "charts/user/notes",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/charts/user/notes.ts"
        },
        "tags": ["charts"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "span": { "type": "string", "enum": ["day", "hour"] },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 500,
                    "default": 30
                  },
                  "offset": { "type": ["integer", "null"], "default": null },
                  "userId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["span", "userId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "array", "items": { "type": "number" } },
                    "inc": { "type": "array", "items": { "type": "number" } },
                    "dec": { "type": "array", "items": { "type": "number" } },
                    "diffs": {
                      "type": "object",
                      "properties": {
                        "normal": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "reply": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "renote": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "withFile": {
                          "type": "array",
                          "items": { "type": "number" }
                        }
                      },
                      "required": ["normal", "reply", "renote", "withFile"]
                    }
                  },
                  "required": ["total", "inc", "dec", "diffs"]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "charts___user___notes",
        "summary": "charts/user/notes",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/charts/user/notes.ts"
        },
        "tags": ["charts"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "span": { "type": "string", "enum": ["day", "hour"] },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 500,
                    "default": 30
                  },
                  "offset": { "type": ["integer", "null"], "default": null },
                  "userId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["span", "userId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": { "type": "array", "items": { "type": "number" } },
                    "inc": { "type": "array", "items": { "type": "number" } },
                    "dec": { "type": "array", "items": { "type": "number" } },
                    "diffs": {
                      "type": "object",
                      "properties": {
                        "normal": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "reply": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "renote": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "withFile": {
                          "type": "array",
                          "items": { "type": "number" }
                        }
                      },
                      "required": ["normal", "reply", "renote", "withFile"]
                    }
                  },
                  "required": ["total", "inc", "dec", "diffs"]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/charts/user/pv": {
      "get": {
        "operationId": "charts___user___pv",
        "summary": "charts/user/pv",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/charts/user/pv.ts"
        },
        "tags": ["charts"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "span": { "type": "string", "enum": ["day", "hour"] },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 500,
                    "default": 30
                  },
                  "offset": { "type": ["integer", "null"], "default": null },
                  "userId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["span", "userId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "upv": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "visitor": {
                          "type": "array",
                          "items": { "type": "number" }
                        }
                      },
                      "required": ["user", "visitor"]
                    },
                    "pv": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "visitor": {
                          "type": "array",
                          "items": { "type": "number" }
                        }
                      },
                      "required": ["user", "visitor"]
                    }
                  },
                  "required": ["upv", "pv"]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "charts___user___pv",
        "summary": "charts/user/pv",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/charts/user/pv.ts"
        },
        "tags": ["charts"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "span": { "type": "string", "enum": ["day", "hour"] },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 500,
                    "default": 30
                  },
                  "offset": { "type": ["integer", "null"], "default": null },
                  "userId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["span", "userId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "upv": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "visitor": {
                          "type": "array",
                          "items": { "type": "number" }
                        }
                      },
                      "required": ["user", "visitor"]
                    },
                    "pv": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "visitor": {
                          "type": "array",
                          "items": { "type": "number" }
                        }
                      },
                      "required": ["user", "visitor"]
                    }
                  },
                  "required": ["upv", "pv"]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/charts/user/reactions": {
      "get": {
        "operationId": "charts___user___reactions",
        "summary": "charts/user/reactions",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/charts/user/reactions.ts"
        },
        "tags": ["charts"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "span": { "type": "string", "enum": ["day", "hour"] },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 500,
                    "default": 30
                  },
                  "offset": { "type": ["integer", "null"], "default": null },
                  "userId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["span", "userId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "local": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "array",
                          "items": { "type": "number" }
                        }
                      },
                      "required": ["count"]
                    },
                    "remote": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "array",
                          "items": { "type": "number" }
                        }
                      },
                      "required": ["count"]
                    }
                  },
                  "required": ["local", "remote"]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "charts___user___reactions",
        "summary": "charts/user/reactions",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/charts/user/reactions.ts"
        },
        "tags": ["charts"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "span": { "type": "string", "enum": ["day", "hour"] },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 500,
                    "default": 30
                  },
                  "offset": { "type": ["integer", "null"], "default": null },
                  "userId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["span", "userId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "local": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "array",
                          "items": { "type": "number" }
                        }
                      },
                      "required": ["count"]
                    },
                    "remote": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "array",
                          "items": { "type": "number" }
                        }
                      },
                      "required": ["count"]
                    }
                  },
                  "required": ["local", "remote"]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/charts/users": {
      "get": {
        "operationId": "charts___users",
        "summary": "charts/users",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/charts/users.ts"
        },
        "tags": ["charts"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "span": { "type": "string", "enum": ["day", "hour"] },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 500,
                    "default": 30
                  },
                  "offset": { "type": ["integer", "null"], "default": null }
                },
                "required": ["span"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "local": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "inc": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "dec": {
                          "type": "array",
                          "items": { "type": "number" }
                        }
                      },
                      "required": ["total", "inc", "dec"]
                    },
                    "remote": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "inc": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "dec": {
                          "type": "array",
                          "items": { "type": "number" }
                        }
                      },
                      "required": ["total", "inc", "dec"]
                    }
                  },
                  "required": ["local", "remote"]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "charts___users",
        "summary": "charts/users",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/charts/users.ts"
        },
        "tags": ["charts"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "span": { "type": "string", "enum": ["day", "hour"] },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 500,
                    "default": 30
                  },
                  "offset": { "type": ["integer", "null"], "default": null }
                },
                "required": ["span"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "local": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "inc": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "dec": {
                          "type": "array",
                          "items": { "type": "number" }
                        }
                      },
                      "required": ["total", "inc", "dec"]
                    },
                    "remote": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "inc": {
                          "type": "array",
                          "items": { "type": "number" }
                        },
                        "dec": {
                          "type": "array",
                          "items": { "type": "number" }
                        }
                      },
                      "required": ["total", "inc", "dec"]
                    }
                  },
                  "required": ["local", "remote"]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/clips/add-note": {
      "post": {
        "operationId": "clips___add-note",
        "summary": "clips/add-note",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/clips/add-note.ts"
        },
        "tags": ["account"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "clipId": { "type": "string", "format": "misskey:id" },
                  "noteId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["clipId", "noteId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_CLIP": {
                    "value": {
                      "error": {
                        "message": "No such clip.",
                        "code": "NO_SUCH_CLIP",
                        "id": "d6e76cc0-a1b5-4c7c-a287-73fa9c716dcf"
                      }
                    }
                  },
                  "NO_SUCH_NOTE": {
                    "value": {
                      "error": {
                        "message": "No such note.",
                        "code": "NO_SUCH_NOTE",
                        "id": "fc8c0b49-c7a3-4664-a0a6-b418d386bb8b"
                      }
                    }
                  },
                  "ALREADY_CLIPPED": {
                    "value": {
                      "error": {
                        "message": "The note has already been clipped.",
                        "code": "ALREADY_CLIPPED",
                        "id": "734806c4-542c-463a-9311-15c512803965"
                      }
                    }
                  },
                  "TOO_MANY_CLIP_NOTES": {
                    "value": {
                      "error": {
                        "message": "You cannot add notes to the clip any more.",
                        "code": "TOO_MANY_CLIP_NOTES",
                        "id": "f0dba960-ff73-4615-8df4-d6ac5d9dc118"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "To many requests",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "RATE_LIMIT_EXCEEDED": {
                    "value": {
                      "error": {
                        "message": "Rate limit exceeded. Please try again later.",
                        "code": "RATE_LIMIT_EXCEEDED",
                        "id": "d5826d14-3982-4d2e-8011-b9e9f02499ef"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/clips/remove-note": {
      "post": {
        "operationId": "clips___remove-note",
        "summary": "clips/remove-note",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/clips/remove-note.ts"
        },
        "tags": ["account"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "clipId": { "type": "string", "format": "misskey:id" },
                  "noteId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["clipId", "noteId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_CLIP": {
                    "value": {
                      "error": {
                        "message": "No such clip.",
                        "code": "NO_SUCH_CLIP",
                        "id": "b80525c6-97f7-49d7-a42d-ebccd49cfd52"
                      }
                    }
                  },
                  "NO_SUCH_NOTE": {
                    "value": {
                      "error": {
                        "message": "No such note.",
                        "code": "NO_SUCH_NOTE",
                        "id": "aff017de-190e-434b-893e-33a9ff5049d8"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/clips/create": {
      "post": {
        "operationId": "clips___create",
        "summary": "clips/create",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/clips/create.ts"
        },
        "tags": ["clips"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "isPublic": { "type": "boolean", "default": false },
                  "description": {
                    "type": ["string", "null"],
                    "minLength": 1,
                    "maxLength": 2048
                  }
                },
                "required": ["name"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Clip"
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "TOO_MANY_CLIPS": {
                    "value": {
                      "error": {
                        "message": "You cannot create clip any more.",
                        "code": "TOO_MANY_CLIPS",
                        "id": "920f7c2d-6208-4b76-8082-e632020f5883"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/clips/delete": {
      "post": {
        "operationId": "clips___delete",
        "summary": "clips/delete",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/clips/delete.ts"
        },
        "tags": ["clips"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "clipId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["clipId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_CLIP": {
                    "value": {
                      "error": {
                        "message": "No such clip.",
                        "code": "NO_SUCH_CLIP",
                        "id": "70ca08ba-6865-4630-b6fb-8494759aa754"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/clips/list": {
      "post": {
        "operationId": "clips___list",
        "summary": "clips/list",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/clips/list.ts"
        },
        "tags": ["clips"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/Clip"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/clips/notes": {
      "post": {
        "operationId": "clips___notes",
        "summary": "clips/notes",
        "description": "No description provided.\n\n**Credential required**: *No* / **Permission**: *read:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/clips/notes.ts"
        },
        "tags": ["account"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "clipId": { "type": "string", "format": "misskey:id" },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "sinceId": { "type": "string", "format": "misskey:id" },
                  "untilId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["clipId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/Note"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_CLIP": {
                    "value": {
                      "error": {
                        "message": "No such clip.",
                        "code": "NO_SUCH_CLIP",
                        "id": "1d7645e6-2b6d-4635-b0fe-fe22b0e72e00"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/clips/show": {
      "post": {
        "operationId": "clips___show",
        "summary": "clips/show",
        "description": "No description provided.\n\n**Credential required**: *No* / **Permission**: *read:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/clips/show.ts"
        },
        "tags": ["clips"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "clipId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["clipId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Clip"
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_CLIP": {
                    "value": {
                      "error": {
                        "message": "No such clip.",
                        "code": "NO_SUCH_CLIP",
                        "id": "c3c5fe33-d62c-44d2-9ea5-d997703f5c20"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/clips/update": {
      "post": {
        "operationId": "clips___update",
        "summary": "clips/update",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/clips/update.ts"
        },
        "tags": ["clips"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "clipId": { "type": "string", "format": "misskey:id" },
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "isPublic": { "type": "boolean" },
                  "description": {
                    "type": ["string", "null"],
                    "minLength": 1,
                    "maxLength": 2048
                  }
                },
                "required": ["clipId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Clip"
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_CLIP": {
                    "value": {
                      "error": {
                        "message": "No such clip.",
                        "code": "NO_SUCH_CLIP",
                        "id": "b4d92d70-b216-46fa-9a3f-a8c811699257"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/clips/favorite": {
      "post": {
        "operationId": "clips___favorite",
        "summary": "clips/favorite",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:clip-favorite*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/clips/favorite.ts"
        },
        "tags": ["clip"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "clipId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["clipId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_CLIP": {
                    "value": {
                      "error": {
                        "message": "No such clip.",
                        "code": "NO_SUCH_CLIP",
                        "id": "4c2aaeae-80d8-4250-9606-26cb1fdb77a5"
                      }
                    }
                  },
                  "ALREADY_FAVORITED": {
                    "value": {
                      "error": {
                        "message": "The clip has already been favorited.",
                        "code": "ALREADY_FAVORITED",
                        "id": "92658936-c625-4273-8326-2d790129256e"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/clips/unfavorite": {
      "post": {
        "operationId": "clips___unfavorite",
        "summary": "clips/unfavorite",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:clip-favorite*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/clips/unfavorite.ts"
        },
        "tags": ["clip"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "clipId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["clipId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_CLIP": {
                    "value": {
                      "error": {
                        "message": "No such clip.",
                        "code": "NO_SUCH_CLIP",
                        "id": "2603966e-b865-426c-94a7-af4a01241dc1"
                      }
                    }
                  },
                  "NOT_FAVORITED": {
                    "value": {
                      "error": {
                        "message": "You have not favorited the clip.",
                        "code": "NOT_FAVORITED",
                        "id": "90c3a9e8-b321-4dae-bf57-2bf79bbcc187"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/clips/my-favorites": {
      "post": {
        "operationId": "clips___my-favorites",
        "summary": "clips/my-favorites",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:clip-favorite*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/clips/my-favorites.ts"
        },
        "tags": ["account"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/Clip"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/drive": {
      "post": {
        "operationId": "drive",
        "summary": "drive",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:drive*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/drive.ts"
        },
        "tags": ["drive"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "capacity": { "type": "number" },
                    "usage": { "type": "number" }
                  },
                  "required": ["capacity", "usage"]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/drive/files": {
      "post": {
        "operationId": "drive___files",
        "summary": "drive/files",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:drive*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/drive/files.ts"
        },
        "tags": ["drive"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "sinceId": { "type": "string", "format": "misskey:id" },
                  "untilId": { "type": "string", "format": "misskey:id" },
                  "folderId": {
                    "type": ["string", "null"],
                    "format": "misskey:id",
                    "default": null
                  },
                  "type": {
                    "type": ["string", "null"],
                    "pattern": "^[a-zA-Z\\/\\-*]+$"
                  },
                  "sort": {
                    "type": ["string", "null"],
                    "enum": [
                      "+createdAt",
                      "-createdAt",
                      "+name",
                      "-name",
                      "+size",
                      "-size",
                      null
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/DriveFile"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/drive/files/attached-notes": {
      "post": {
        "operationId": "drive___files___attached-notes",
        "summary": "drive/files/attached-notes",
        "description": "Find the notes to which the given file is attached.\n\n**Credential required**: *Yes* / **Permission**: *read:drive*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/drive/files/attached-notes.ts"
        },
        "tags": ["drive"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "sinceId": { "type": "string", "format": "misskey:id" },
                  "untilId": { "type": "string", "format": "misskey:id" },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "fileId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["fileId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/Note"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_FILE": {
                    "value": {
                      "error": {
                        "message": "No such file.",
                        "code": "NO_SUCH_FILE",
                        "id": "c118ece3-2e4b-4296-99d1-51756e32d232"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/drive/files/check-existence": {
      "post": {
        "operationId": "drive___files___check-existence",
        "summary": "drive/files/check-existence",
        "description": "Check if a given file exists.\n\n**Credential required**: *Yes* / **Permission**: *read:drive*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/drive/files/check-existence.ts"
        },
        "tags": ["drive"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": { "md5": { "type": "string" } },
                "required": ["md5"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": { "schema": { "type": "boolean" } }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/drive/files/create": {
      "post": {
        "operationId": "drive___files___create",
        "summary": "drive/files/create",
        "description": "Upload a new drive file.\n\n**Credential required**: *Yes* / **Permission**: *write:drive*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/drive/files/create.ts"
        },
        "tags": ["drive"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "folderId": {
                    "type": ["string", "null"],
                    "format": "misskey:id",
                    "default": null
                  },
                  "name": { "type": ["string", "null"], "default": null },
                  "comment": {
                    "type": ["string", "null"],
                    "maxLength": 512,
                    "default": null
                  },
                  "isSensitive": { "type": "boolean", "default": false },
                  "force": { "type": "boolean", "default": false },
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "The file contents."
                  }
                },
                "required": ["file"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/DriveFile"
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_FILE_NAME": {
                    "value": {
                      "error": {
                        "message": "Invalid file name.",
                        "code": "INVALID_FILE_NAME",
                        "id": "f449b209-0c60-4e51-84d5-29486263bfd4"
                      }
                    }
                  },
                  "INAPPROPRIATE": {
                    "value": {
                      "error": {
                        "message": "Cannot upload the file because it has been determined that it possibly contains inappropriate content.",
                        "code": "INAPPROPRIATE",
                        "id": "bec5bd69-fba3-43c9-b4fb-2894b66ad5d2"
                      }
                    }
                  },
                  "NO_FREE_SPACE": {
                    "value": {
                      "error": {
                        "message": "Cannot upload the file because you have no free space of drive.",
                        "code": "NO_FREE_SPACE",
                        "id": "d08dbc37-a6a9-463a-8c47-96c32ab5f064"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "To many requests",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "RATE_LIMIT_EXCEEDED": {
                    "value": {
                      "error": {
                        "message": "Rate limit exceeded. Please try again later.",
                        "code": "RATE_LIMIT_EXCEEDED",
                        "id": "d5826d14-3982-4d2e-8011-b9e9f02499ef"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/drive/files/delete": {
      "post": {
        "operationId": "drive___files___delete",
        "summary": "drive/files/delete",
        "description": "Delete an existing drive file.\n\n**Credential required**: *Yes* / **Permission**: *write:drive*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/drive/files/delete.ts"
        },
        "tags": ["drive"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fileId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["fileId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_FILE": {
                    "value": {
                      "error": {
                        "message": "No such file.",
                        "code": "NO_SUCH_FILE",
                        "id": "908939ec-e52b-4458-b395-1025195cea58"
                      }
                    }
                  },
                  "ACCESS_DENIED": {
                    "value": {
                      "error": {
                        "message": "Access denied.",
                        "code": "ACCESS_DENIED",
                        "id": "5eb8d909-2540-4970-90b8-dd6f86088121"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/drive/files/find-by-hash": {
      "post": {
        "operationId": "drive___files___find-by-hash",
        "summary": "drive/files/find-by-hash",
        "description": "Search for a drive file by a hash of the contents.\n\n**Credential required**: *Yes* / **Permission**: *read:drive*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/drive/files/find-by-hash.ts"
        },
        "tags": ["drive"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": { "md5": { "type": "string" } },
                "required": ["md5"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/DriveFile"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/drive/files/find": {
      "post": {
        "operationId": "drive___files___find",
        "summary": "drive/files/find",
        "description": "Search for a drive file by the given parameters.\n\n**Credential required**: *Yes* / **Permission**: *read:drive*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/drive/files/find.ts"
        },
        "tags": ["drive"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "folderId": {
                    "type": ["string", "null"],
                    "format": "misskey:id",
                    "default": null
                  }
                },
                "required": ["name"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/DriveFile"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/drive/files/show": {
      "post": {
        "operationId": "drive___files___show",
        "summary": "drive/files/show",
        "description": "Show the properties of a drive file.\n\n**Credential required**: *Yes* / **Permission**: *read:drive*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/drive/files/show.ts"
        },
        "tags": ["drive"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fileId": { "type": "string", "format": "misskey:id" },
                  "url": { "type": "string" }
                },
                "anyOf": [{ "required": ["fileId"] }, { "required": ["url"] }]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/DriveFile"
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_FILE": {
                    "value": {
                      "error": {
                        "message": "No such file.",
                        "code": "NO_SUCH_FILE",
                        "id": "067bc436-2718-4795-b0fb-ecbe43949e31"
                      }
                    }
                  },
                  "ACCESS_DENIED": {
                    "value": {
                      "error": {
                        "message": "Access denied.",
                        "code": "ACCESS_DENIED",
                        "id": "25b73c73-68b1-41d0-bad1-381cfdf6579f"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/drive/files/update": {
      "post": {
        "operationId": "drive___files___update",
        "summary": "drive/files/update",
        "description": "Update the properties of a drive file.\n\n**Credential required**: *Yes* / **Permission**: *write:drive*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/drive/files/update.ts"
        },
        "tags": ["drive"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fileId": { "type": "string", "format": "misskey:id" },
                  "folderId": {
                    "type": ["string", "null"],
                    "format": "misskey:id"
                  },
                  "name": { "type": "string" },
                  "isSensitive": { "type": "boolean" },
                  "comment": { "type": ["string", "null"], "maxLength": 512 }
                },
                "required": ["fileId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/DriveFile"
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_FILE_NAME": {
                    "value": {
                      "error": {
                        "message": "Invalid file name.",
                        "code": "INVALID_FILE_NAME",
                        "id": "395e7156-f9f0-475e-af89-53c3c23080c2"
                      }
                    }
                  },
                  "NO_SUCH_FILE": {
                    "value": {
                      "error": {
                        "message": "No such file.",
                        "code": "NO_SUCH_FILE",
                        "id": "e7778c7e-3af9-49cd-9690-6dbc3e6c972d"
                      }
                    }
                  },
                  "ACCESS_DENIED": {
                    "value": {
                      "error": {
                        "message": "Access denied.",
                        "code": "ACCESS_DENIED",
                        "id": "01a53b27-82fc-445b-a0c1-b558465a8ed2"
                      }
                    }
                  },
                  "NO_SUCH_FOLDER": {
                    "value": {
                      "error": {
                        "message": "No such folder.",
                        "code": "NO_SUCH_FOLDER",
                        "id": "ea8fb7a5-af77-4a08-b608-c0218176cd73"
                      }
                    }
                  },
                  "RESTRICTED_BY_ROLE": {
                    "value": {
                      "error": {
                        "message": "This feature is restricted by your role.",
                        "code": "RESTRICTED_BY_ROLE",
                        "id": "7f59dccb-f465-75ab-5cf4-3ce44e3282f7"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/drive/files/upload-from-url": {
      "post": {
        "operationId": "drive___files___upload-from-url",
        "summary": "drive/files/upload-from-url",
        "description": "Request the server to download a new drive file from the specified URL.\n\n**Credential required**: *Yes* / **Permission**: *write:drive*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/drive/files/upload-from-url.ts"
        },
        "tags": ["drive"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "url": { "type": "string" },
                  "folderId": {
                    "type": ["string", "null"],
                    "format": "misskey:id",
                    "default": null
                  },
                  "isSensitive": { "type": "boolean", "default": false },
                  "comment": {
                    "type": ["string", "null"],
                    "maxLength": 512,
                    "default": null
                  },
                  "marker": { "type": ["string", "null"], "default": null },
                  "force": { "type": "boolean", "default": false }
                },
                "required": ["url"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "To many requests",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "RATE_LIMIT_EXCEEDED": {
                    "value": {
                      "error": {
                        "message": "Rate limit exceeded. Please try again later.",
                        "code": "RATE_LIMIT_EXCEEDED",
                        "id": "d5826d14-3982-4d2e-8011-b9e9f02499ef"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/drive/folders": {
      "post": {
        "operationId": "drive___folders",
        "summary": "drive/folders",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:drive*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/drive/folders.ts"
        },
        "tags": ["drive"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "sinceId": { "type": "string", "format": "misskey:id" },
                  "untilId": { "type": "string", "format": "misskey:id" },
                  "folderId": {
                    "type": ["string", "null"],
                    "format": "misskey:id",
                    "default": null
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/DriveFolder"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/drive/folders/create": {
      "post": {
        "operationId": "drive___folders___create",
        "summary": "drive/folders/create",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:drive*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/drive/folders/create.ts"
        },
        "tags": ["drive"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "default": "Untitled",
                    "maxLength": 200
                  },
                  "parentId": {
                    "type": ["string", "null"],
                    "format": "misskey:id"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/DriveFolder"
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_FOLDER": {
                    "value": {
                      "error": {
                        "message": "No such folder.",
                        "code": "NO_SUCH_FOLDER",
                        "id": "53326628-a00d-40a6-a3cd-8975105c0f95"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "To many requests",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "RATE_LIMIT_EXCEEDED": {
                    "value": {
                      "error": {
                        "message": "Rate limit exceeded. Please try again later.",
                        "code": "RATE_LIMIT_EXCEEDED",
                        "id": "d5826d14-3982-4d2e-8011-b9e9f02499ef"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/drive/folders/delete": {
      "post": {
        "operationId": "drive___folders___delete",
        "summary": "drive/folders/delete",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:drive*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/drive/folders/delete.ts"
        },
        "tags": ["drive"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "folderId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["folderId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_FOLDER": {
                    "value": {
                      "error": {
                        "message": "No such folder.",
                        "code": "NO_SUCH_FOLDER",
                        "id": "1069098f-c281-440f-b085-f9932edbe091"
                      }
                    }
                  },
                  "HAS_CHILD_FILES_OR_FOLDERS": {
                    "value": {
                      "error": {
                        "message": "This folder has child files or folders.",
                        "code": "HAS_CHILD_FILES_OR_FOLDERS",
                        "id": "b0fc8a17-963c-405d-bfbc-859a487295e1"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/drive/folders/find": {
      "post": {
        "operationId": "drive___folders___find",
        "summary": "drive/folders/find",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:drive*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/drive/folders/find.ts"
        },
        "tags": ["drive"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "parentId": {
                    "type": ["string", "null"],
                    "format": "misskey:id",
                    "default": null
                  }
                },
                "required": ["name"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/DriveFolder"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/drive/folders/show": {
      "post": {
        "operationId": "drive___folders___show",
        "summary": "drive/folders/show",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:drive*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/drive/folders/show.ts"
        },
        "tags": ["drive"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "folderId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["folderId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/DriveFolder"
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_FOLDER": {
                    "value": {
                      "error": {
                        "message": "No such folder.",
                        "code": "NO_SUCH_FOLDER",
                        "id": "d74ab9eb-bb09-4bba-bf24-fb58f761e1e9"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/drive/folders/update": {
      "post": {
        "operationId": "drive___folders___update",
        "summary": "drive/folders/update",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:drive*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/drive/folders/update.ts"
        },
        "tags": ["drive"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "folderId": { "type": "string", "format": "misskey:id" },
                  "name": { "type": "string", "maxLength": 200 },
                  "parentId": {
                    "type": ["string", "null"],
                    "format": "misskey:id"
                  }
                },
                "required": ["folderId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/DriveFolder"
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_FOLDER": {
                    "value": {
                      "error": {
                        "message": "No such folder.",
                        "code": "NO_SUCH_FOLDER",
                        "id": "f7974dac-2c0d-4a27-926e-23583b28e98e"
                      }
                    }
                  },
                  "NO_SUCH_PARENT_FOLDER": {
                    "value": {
                      "error": {
                        "message": "No such parent folder.",
                        "code": "NO_SUCH_PARENT_FOLDER",
                        "id": "ce104e3a-faaf-49d5-b459-10ff0cbbcaa1"
                      }
                    }
                  },
                  "RECURSIVE_NESTING": {
                    "value": {
                      "error": {
                        "message": "It can not be structured like nesting folders recursively.",
                        "code": "RECURSIVE_NESTING",
                        "id": "dbeb024837894013aed44279f9199740"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/drive/stream": {
      "post": {
        "operationId": "drive___stream",
        "summary": "drive/stream",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:drive*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/drive/stream.ts"
        },
        "tags": ["drive"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "sinceId": { "type": "string", "format": "misskey:id" },
                  "untilId": { "type": "string", "format": "misskey:id" },
                  "type": { "type": "string", "pattern": "^[a-zA-Z\\/\\-*]+$" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/DriveFile"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/email-address/available": {
      "post": {
        "operationId": "email-address___available",
        "summary": "email-address/available",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/email-address/available.ts"
        },
        "tags": ["users"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": { "emailAddress": { "type": "string" } },
                "required": ["emailAddress"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "available": { "type": "boolean" },
                    "reason": { "type": ["string", "null"] }
                  },
                  "required": ["available", "reason"]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/endpoint": {
      "post": {
        "operationId": "endpoint",
        "summary": "endpoint",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/endpoint.ts"
        },
        "tags": ["meta"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": { "endpoint": { "type": "string" } },
                "required": ["endpoint"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": ["object", "null"],
                  "properties": {
                    "params": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": { "type": "string" },
                          "type": { "type": "string" }
                        },
                        "required": ["name", "type"]
                      }
                    }
                  },
                  "required": ["params"]
                }
              }
            }
          },
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/endpoints": {
      "post": {
        "operationId": "endpoints",
        "summary": "endpoints",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/endpoints.ts"
        },
        "tags": ["meta"],
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "type": "string" },
                  "example": [
                    "admin/abuse-user-reports",
                    "admin/accounts/create",
                    "admin/announcements/create",
                    "..."
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/export-custom-emojis": {
      "post": {
        "operationId": "export-custom-emojis",
        "summary": "export-custom-emojis",
        "description": "No description provided.\n\n**Internal Endpoint**: This endpoint is an API for the misskey mainframe and is not intended for use by third parties.\n**Credential required**: *Yes*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/export-custom-emojis.ts"
        },
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "To many requests",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "RATE_LIMIT_EXCEEDED": {
                    "value": {
                      "error": {
                        "message": "Rate limit exceeded. Please try again later.",
                        "code": "RATE_LIMIT_EXCEEDED",
                        "id": "d5826d14-3982-4d2e-8011-b9e9f02499ef"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/federation/followers": {
      "post": {
        "operationId": "federation___followers",
        "summary": "federation/followers",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/federation/followers.ts"
        },
        "tags": ["federation"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "host": { "type": "string" },
                  "sinceId": { "type": "string", "format": "misskey:id" },
                  "untilId": { "type": "string", "format": "misskey:id" },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  }
                },
                "required": ["host"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/Following"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/federation/following": {
      "post": {
        "operationId": "federation___following",
        "summary": "federation/following",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/federation/following.ts"
        },
        "tags": ["federation"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "host": { "type": "string" },
                  "sinceId": { "type": "string", "format": "misskey:id" },
                  "untilId": { "type": "string", "format": "misskey:id" },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  }
                },
                "required": ["host"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/Following"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/federation/instances": {
      "get": {
        "operationId": "federation___instances",
        "summary": "federation/instances",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/federation/instances.ts"
        },
        "tags": ["federation"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "host": {
                    "type": ["string", "null"],
                    "description": "Omit or use `null` to not filter by host."
                  },
                  "blocked": { "type": ["boolean", "null"] },
                  "notResponding": { "type": ["boolean", "null"] },
                  "suspended": { "type": ["boolean", "null"] },
                  "silenced": { "type": ["boolean", "null"] },
                  "federating": { "type": ["boolean", "null"] },
                  "subscribing": { "type": ["boolean", "null"] },
                  "publishing": { "type": ["boolean", "null"] },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 30
                  },
                  "offset": { "type": "integer", "default": 0 },
                  "sort": {
                    "type": ["string", "null"],
                    "enum": [
                      "+pubSub",
                      "-pubSub",
                      "+notes",
                      "-notes",
                      "+users",
                      "-users",
                      "+following",
                      "-following",
                      "+followers",
                      "-followers",
                      "+firstRetrievedAt",
                      "-firstRetrievedAt",
                      "+latestRequestReceivedAt",
                      "-latestRequestReceivedAt",
                      null
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/FederationInstance"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "federation___instances",
        "summary": "federation/instances",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/federation/instances.ts"
        },
        "tags": ["federation"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "host": {
                    "type": ["string", "null"],
                    "description": "Omit or use `null` to not filter by host."
                  },
                  "blocked": { "type": ["boolean", "null"] },
                  "notResponding": { "type": ["boolean", "null"] },
                  "suspended": { "type": ["boolean", "null"] },
                  "silenced": { "type": ["boolean", "null"] },
                  "federating": { "type": ["boolean", "null"] },
                  "subscribing": { "type": ["boolean", "null"] },
                  "publishing": { "type": ["boolean", "null"] },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 30
                  },
                  "offset": { "type": "integer", "default": 0 },
                  "sort": {
                    "type": ["string", "null"],
                    "enum": [
                      "+pubSub",
                      "-pubSub",
                      "+notes",
                      "-notes",
                      "+users",
                      "-users",
                      "+following",
                      "-following",
                      "+followers",
                      "-followers",
                      "+firstRetrievedAt",
                      "-firstRetrievedAt",
                      "+latestRequestReceivedAt",
                      "-latestRequestReceivedAt",
                      null
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/FederationInstance"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/federation/show-instance": {
      "post": {
        "operationId": "federation___show-instance",
        "summary": "federation/show-instance",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/federation/show-instance.ts"
        },
        "tags": ["federation"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": { "host": { "type": "string" } },
                "required": ["host"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": ["object", "null"],
                  "allOf": [
                    { "$ref": "#/components/schemas/FederationInstance" }
                  ]
                }
              }
            }
          },
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/federation/update-remote-user": {
      "post": {
        "operationId": "federation___update-remote-user",
        "summary": "federation/update-remote-user",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/federation/update-remote-user.ts"
        },
        "tags": ["federation"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["userId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/federation/users": {
      "post": {
        "operationId": "federation___users",
        "summary": "federation/users",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/federation/users.ts"
        },
        "tags": ["federation"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "host": { "type": "string" },
                  "sinceId": { "type": "string", "format": "misskey:id" },
                  "untilId": { "type": "string", "format": "misskey:id" },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  }
                },
                "required": ["host"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/UserDetailedNotMe"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/federation/stats": {
      "get": {
        "operationId": "federation___stats",
        "summary": "federation/stats",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/federation/stats.ts"
        },
        "tags": ["federation"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "topSubInstances": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "$ref": "#/components/schemas/FederationInstance"
                      }
                    },
                    "otherFollowersCount": { "type": "number" },
                    "topPubInstances": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "$ref": "#/components/schemas/FederationInstance"
                      }
                    },
                    "otherFollowingCount": { "type": "number" }
                  },
                  "required": [
                    "topSubInstances",
                    "otherFollowersCount",
                    "topPubInstances",
                    "otherFollowingCount"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "federation___stats",
        "summary": "federation/stats",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/federation/stats.ts"
        },
        "tags": ["federation"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "topSubInstances": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "$ref": "#/components/schemas/FederationInstance"
                      }
                    },
                    "otherFollowersCount": { "type": "number" },
                    "topPubInstances": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "$ref": "#/components/schemas/FederationInstance"
                      }
                    },
                    "otherFollowingCount": { "type": "number" }
                  },
                  "required": [
                    "topSubInstances",
                    "otherFollowersCount",
                    "topPubInstances",
                    "otherFollowingCount"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/following/create": {
      "post": {
        "operationId": "following___create",
        "summary": "following/create",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:following*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/following/create.ts"
        },
        "tags": ["following"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": { "type": "string", "format": "misskey:id" },
                  "withReplies": { "type": "boolean" }
                },
                "required": ["userId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/UserLite"
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_USER": {
                    "value": {
                      "error": {
                        "message": "No such user.",
                        "code": "NO_SUCH_USER",
                        "id": "fcd2eef9-a9b2-4c4f-8624-038099e90aa5"
                      }
                    }
                  },
                  "FOLLOWEE_IS_YOURSELF": {
                    "value": {
                      "error": {
                        "message": "Followee is yourself.",
                        "code": "FOLLOWEE_IS_YOURSELF",
                        "id": "26fbe7bb-a331-4857-af17-205b426669a9"
                      }
                    }
                  },
                  "ALREADY_FOLLOWING": {
                    "value": {
                      "error": {
                        "message": "You are already following that user.",
                        "code": "ALREADY_FOLLOWING",
                        "id": "35387507-38c7-4cb9-9197-300b93783fa0"
                      }
                    }
                  },
                  "BLOCKING": {
                    "value": {
                      "error": {
                        "message": "You are blocking that user.",
                        "code": "BLOCKING",
                        "id": "4e2206ec-aa4f-4960-b865-6c23ac38e2d9"
                      }
                    }
                  },
                  "BLOCKED": {
                    "value": {
                      "error": {
                        "message": "You are blocked by that user.",
                        "code": "BLOCKED",
                        "id": "c4ab57cc-4e41-45e9-bfd9-584f61e35ce0"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "To many requests",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "RATE_LIMIT_EXCEEDED": {
                    "value": {
                      "error": {
                        "message": "Rate limit exceeded. Please try again later.",
                        "code": "RATE_LIMIT_EXCEEDED",
                        "id": "d5826d14-3982-4d2e-8011-b9e9f02499ef"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/following/delete": {
      "post": {
        "operationId": "following___delete",
        "summary": "following/delete",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:following*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/following/delete.ts"
        },
        "tags": ["following"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["userId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/UserLite"
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_USER": {
                    "value": {
                      "error": {
                        "message": "No such user.",
                        "code": "NO_SUCH_USER",
                        "id": "5b12c78d-2b28-4dca-99d2-f56139b42ff8"
                      }
                    }
                  },
                  "FOLLOWEE_IS_YOURSELF": {
                    "value": {
                      "error": {
                        "message": "Followee is yourself.",
                        "code": "FOLLOWEE_IS_YOURSELF",
                        "id": "d9e400b9-36b0-4808-b1d8-79e707f1296c"
                      }
                    }
                  },
                  "NOT_FOLLOWING": {
                    "value": {
                      "error": {
                        "message": "You are not following that user.",
                        "code": "NOT_FOLLOWING",
                        "id": "5dbf82f5-c92b-40b1-87d1-6c8c0741fd09"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "To many requests",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "RATE_LIMIT_EXCEEDED": {
                    "value": {
                      "error": {
                        "message": "Rate limit exceeded. Please try again later.",
                        "code": "RATE_LIMIT_EXCEEDED",
                        "id": "d5826d14-3982-4d2e-8011-b9e9f02499ef"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/following/update": {
      "post": {
        "operationId": "following___update",
        "summary": "following/update",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:following*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/following/update.ts"
        },
        "tags": ["following"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": { "type": "string", "format": "misskey:id" },
                  "notify": { "type": "string", "enum": ["normal", "none"] },
                  "withReplies": { "type": "boolean" }
                },
                "required": ["userId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/UserLite"
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_USER": {
                    "value": {
                      "error": {
                        "message": "No such user.",
                        "code": "NO_SUCH_USER",
                        "id": "14318698-f67e-492a-99da-5353a5ac52be"
                      }
                    }
                  },
                  "FOLLOWEE_IS_YOURSELF": {
                    "value": {
                      "error": {
                        "message": "Followee is yourself.",
                        "code": "FOLLOWEE_IS_YOURSELF",
                        "id": "4c4cbaf9-962a-463b-8418-a5e365dbf2eb"
                      }
                    }
                  },
                  "NOT_FOLLOWING": {
                    "value": {
                      "error": {
                        "message": "You are not following that user.",
                        "code": "NOT_FOLLOWING",
                        "id": "b8dc75cf-1cb5-46c9-b14b-5f1ffbd782c9"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "To many requests",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "RATE_LIMIT_EXCEEDED": {
                    "value": {
                      "error": {
                        "message": "Rate limit exceeded. Please try again later.",
                        "code": "RATE_LIMIT_EXCEEDED",
                        "id": "d5826d14-3982-4d2e-8011-b9e9f02499ef"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/following/update-all": {
      "post": {
        "operationId": "following___update-all",
        "summary": "following/update-all",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:following*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/following/update-all.ts"
        },
        "tags": ["following"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "notify": { "type": "string", "enum": ["normal", "none"] },
                  "withReplies": { "type": "boolean" }
                }
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "To many requests",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "RATE_LIMIT_EXCEEDED": {
                    "value": {
                      "error": {
                        "message": "Rate limit exceeded. Please try again later.",
                        "code": "RATE_LIMIT_EXCEEDED",
                        "id": "d5826d14-3982-4d2e-8011-b9e9f02499ef"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/following/invalidate": {
      "post": {
        "operationId": "following___invalidate",
        "summary": "following/invalidate",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:following*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/following/invalidate.ts"
        },
        "tags": ["following"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["userId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/UserLite"
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_USER": {
                    "value": {
                      "error": {
                        "message": "No such user.",
                        "code": "NO_SUCH_USER",
                        "id": "b77e6ae6-a3e5-40da-9cc8-c240115479cc"
                      }
                    }
                  },
                  "FOLLOWER_IS_YOURSELF": {
                    "value": {
                      "error": {
                        "message": "Follower is yourself.",
                        "code": "FOLLOWER_IS_YOURSELF",
                        "id": "07dc03b9-03da-422d-885b-438313707662"
                      }
                    }
                  },
                  "NOT_FOLLOWING": {
                    "value": {
                      "error": {
                        "message": "The other use is not following you.",
                        "code": "NOT_FOLLOWING",
                        "id": "918faac3-074f-41ae-9c43-ed5d2946770d"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "To many requests",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "RATE_LIMIT_EXCEEDED": {
                    "value": {
                      "error": {
                        "message": "Rate limit exceeded. Please try again later.",
                        "code": "RATE_LIMIT_EXCEEDED",
                        "id": "d5826d14-3982-4d2e-8011-b9e9f02499ef"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/following/requests/accept": {
      "post": {
        "operationId": "following___requests___accept",
        "summary": "following/requests/accept",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:following*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/following/requests/accept.ts"
        },
        "tags": ["following"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["userId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_USER": {
                    "value": {
                      "error": {
                        "message": "No such user.",
                        "code": "NO_SUCH_USER",
                        "id": "66ce1645-d66c-46bb-8b79-96739af885bd"
                      }
                    }
                  },
                  "NO_FOLLOW_REQUEST": {
                    "value": {
                      "error": {
                        "message": "No follow request.",
                        "code": "NO_FOLLOW_REQUEST",
                        "id": "bcde4f8b-0913-4614-8881-614e522fb041"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/following/requests/cancel": {
      "post": {
        "operationId": "following___requests___cancel",
        "summary": "following/requests/cancel",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:following*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/following/requests/cancel.ts"
        },
        "tags": ["following"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["userId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/UserLite"
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_USER": {
                    "value": {
                      "error": {
                        "message": "No such user.",
                        "code": "NO_SUCH_USER",
                        "id": "4e68c551-fc4c-4e46-bb41-7d4a37bf9dab"
                      }
                    }
                  },
                  "FOLLOW_REQUEST_NOT_FOUND": {
                    "value": {
                      "error": {
                        "message": "Follow request not found.",
                        "code": "FOLLOW_REQUEST_NOT_FOUND",
                        "id": "089b125b-d338-482a-9a09-e2622ac9f8d4"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/following/requests/list": {
      "post": {
        "operationId": "following___requests___list",
        "summary": "following/requests/list",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:following*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/following/requests/list.ts"
        },
        "tags": ["following"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "sinceId": { "type": "string", "format": "misskey:id" },
                  "untilId": { "type": "string", "format": "misskey:id" },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "string", "format": "id" },
                      "follower": {
                        "type": "object",
                        "$ref": "#/components/schemas/UserLite"
                      },
                      "followee": {
                        "type": "object",
                        "$ref": "#/components/schemas/UserLite"
                      }
                    },
                    "required": ["id", "follower", "followee"]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/following/requests/reject": {
      "post": {
        "operationId": "following___requests___reject",
        "summary": "following/requests/reject",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:following*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/following/requests/reject.ts"
        },
        "tags": ["following"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["userId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_USER": {
                    "value": {
                      "error": {
                        "message": "No such user.",
                        "code": "NO_SUCH_USER",
                        "id": "abc2ffa6-25b2-4380-ba99-321ff3a94555"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/gallery/featured": {
      "post": {
        "operationId": "gallery___featured",
        "summary": "gallery/featured",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/gallery/featured.ts"
        },
        "tags": ["gallery"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "untilId": { "type": "string", "format": "misskey:id" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/GalleryPost"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/gallery/popular": {
      "post": {
        "operationId": "gallery___popular",
        "summary": "gallery/popular",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/gallery/popular.ts"
        },
        "tags": ["gallery"],
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/GalleryPost"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/gallery/posts": {
      "post": {
        "operationId": "gallery___posts",
        "summary": "gallery/posts",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/gallery/posts.ts"
        },
        "tags": ["gallery"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "sinceId": { "type": "string", "format": "misskey:id" },
                  "untilId": { "type": "string", "format": "misskey:id" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/GalleryPost"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/gallery/posts/create": {
      "post": {
        "operationId": "gallery___posts___create",
        "summary": "gallery/posts/create",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:gallery*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/gallery/posts/create.ts"
        },
        "tags": ["gallery"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string", "minLength": 1 },
                  "description": { "type": ["string", "null"] },
                  "fileIds": {
                    "type": "array",
                    "uniqueItems": true,
                    "minItems": 1,
                    "maxItems": 32,
                    "items": { "type": "string", "format": "misskey:id" }
                  },
                  "isSensitive": { "type": "boolean", "default": false }
                },
                "required": ["title", "fileIds"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/GalleryPost"
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "To many requests",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "RATE_LIMIT_EXCEEDED": {
                    "value": {
                      "error": {
                        "message": "Rate limit exceeded. Please try again later.",
                        "code": "RATE_LIMIT_EXCEEDED",
                        "id": "d5826d14-3982-4d2e-8011-b9e9f02499ef"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/gallery/posts/delete": {
      "post": {
        "operationId": "gallery___posts___delete",
        "summary": "gallery/posts/delete",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:gallery*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/gallery/posts/delete.ts"
        },
        "tags": ["gallery"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "postId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["postId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_POST": {
                    "value": {
                      "error": {
                        "message": "No such post.",
                        "code": "NO_SUCH_POST",
                        "id": "ae52f367-4bd7-4ecd-afc6-5672fff427f5"
                      }
                    }
                  },
                  "ACCESS_DENIED": {
                    "value": {
                      "error": {
                        "message": "Access denied.",
                        "code": "ACCESS_DENIED",
                        "id": "c86e09de-1c48-43ac-a435-1c7e42ed4496"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/gallery/posts/like": {
      "post": {
        "operationId": "gallery___posts___like",
        "summary": "gallery/posts/like",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:gallery-likes*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/gallery/posts/like.ts"
        },
        "tags": ["gallery"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "postId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["postId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_POST": {
                    "value": {
                      "error": {
                        "message": "No such post.",
                        "code": "NO_SUCH_POST",
                        "id": "56c06af3-1287-442f-9701-c93f7c4a62ff"
                      }
                    }
                  },
                  "YOUR_POST": {
                    "value": {
                      "error": {
                        "message": "You cannot like your post.",
                        "code": "YOUR_POST",
                        "id": "f78f1511-5ebc-4478-a888-1198d752da68"
                      }
                    }
                  },
                  "ALREADY_LIKED": {
                    "value": {
                      "error": {
                        "message": "The post has already been liked.",
                        "code": "ALREADY_LIKED",
                        "id": "40e9ed56-a59c-473a-bf3f-f289c54fb5a7"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/gallery/posts/show": {
      "post": {
        "operationId": "gallery___posts___show",
        "summary": "gallery/posts/show",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/gallery/posts/show.ts"
        },
        "tags": ["gallery"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "postId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["postId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/GalleryPost"
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_POST": {
                    "value": {
                      "error": {
                        "message": "No such post.",
                        "code": "NO_SUCH_POST",
                        "id": "1137bf14-c5b0-4604-85bb-5b5371b1cd45"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/gallery/posts/unlike": {
      "post": {
        "operationId": "gallery___posts___unlike",
        "summary": "gallery/posts/unlike",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:gallery-likes*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/gallery/posts/unlike.ts"
        },
        "tags": ["gallery"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "postId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["postId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_POST": {
                    "value": {
                      "error": {
                        "message": "No such post.",
                        "code": "NO_SUCH_POST",
                        "id": "c32e6dd0-b555-4413-925e-b3757d19ed84"
                      }
                    }
                  },
                  "NOT_LIKED": {
                    "value": {
                      "error": {
                        "message": "You have not liked that post.",
                        "code": "NOT_LIKED",
                        "id": "e3e8e06e-be37-41f7-a5b4-87a8250288f0"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/gallery/posts/update": {
      "post": {
        "operationId": "gallery___posts___update",
        "summary": "gallery/posts/update",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:gallery*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/gallery/posts/update.ts"
        },
        "tags": ["gallery"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "postId": { "type": "string", "format": "misskey:id" },
                  "title": { "type": "string", "minLength": 1 },
                  "description": { "type": ["string", "null"] },
                  "fileIds": {
                    "type": "array",
                    "uniqueItems": true,
                    "minItems": 1,
                    "maxItems": 32,
                    "items": { "type": "string", "format": "misskey:id" }
                  },
                  "isSensitive": { "type": "boolean", "default": false }
                },
                "required": ["postId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/GalleryPost"
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "To many requests",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "RATE_LIMIT_EXCEEDED": {
                    "value": {
                      "error": {
                        "message": "Rate limit exceeded. Please try again later.",
                        "code": "RATE_LIMIT_EXCEEDED",
                        "id": "d5826d14-3982-4d2e-8011-b9e9f02499ef"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get-online-users-count": {
      "get": {
        "operationId": "get-online-users-count",
        "summary": "get-online-users-count",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/get-online-users-count.ts"
        },
        "tags": ["meta"],
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "count": { "type": "number" } },
                  "required": ["count"]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "get-online-users-count",
        "summary": "get-online-users-count",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/get-online-users-count.ts"
        },
        "tags": ["meta"],
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "count": { "type": "number" } },
                  "required": ["count"]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get-avatar-decorations": {
      "post": {
        "operationId": "get-avatar-decorations",
        "summary": "get-avatar-decorations",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/get-avatar-decorations.ts"
        },
        "tags": ["users"],
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "id",
                        "example": "xxxxxxxxxx"
                      },
                      "name": { "type": "string" },
                      "description": { "type": "string" },
                      "url": { "type": "string" },
                      "roleIdsThatCanBeUsedThisDecoration": {
                        "type": "array",
                        "items": { "type": "string", "format": "id" }
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "description",
                      "url",
                      "roleIdsThatCanBeUsedThisDecoration"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/hashtags/list": {
      "post": {
        "operationId": "hashtags___list",
        "summary": "hashtags/list",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/hashtags/list.ts"
        },
        "tags": ["hashtags"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "attachedToUserOnly": { "type": "boolean", "default": false },
                  "attachedToLocalUserOnly": {
                    "type": "boolean",
                    "default": false
                  },
                  "attachedToRemoteUserOnly": {
                    "type": "boolean",
                    "default": false
                  },
                  "sort": {
                    "type": "string",
                    "enum": [
                      "+mentionedUsers",
                      "-mentionedUsers",
                      "+mentionedLocalUsers",
                      "-mentionedLocalUsers",
                      "+mentionedRemoteUsers",
                      "-mentionedRemoteUsers",
                      "+attachedUsers",
                      "-attachedUsers",
                      "+attachedLocalUsers",
                      "-attachedLocalUsers",
                      "+attachedRemoteUsers",
                      "-attachedRemoteUsers"
                    ]
                  }
                },
                "required": ["sort"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/Hashtag"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/hashtags/search": {
      "post": {
        "operationId": "hashtags___search",
        "summary": "hashtags/search",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/hashtags/search.ts"
        },
        "tags": ["hashtags"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "query": { "type": "string" },
                  "offset": { "type": "integer", "default": 0 }
                },
                "required": ["query"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": { "type": "array", "items": { "type": "string" } }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/hashtags/show": {
      "post": {
        "operationId": "hashtags___show",
        "summary": "hashtags/show",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/hashtags/show.ts"
        },
        "tags": ["hashtags"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": { "tag": { "type": "string" } },
                "required": ["tag"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Hashtag"
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_HASHTAG": {
                    "value": {
                      "error": {
                        "message": "No such hashtag.",
                        "code": "NO_SUCH_HASHTAG",
                        "id": "110ee688-193e-4a3a-9ecf-c167b2e6981e"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/hashtags/trend": {
      "get": {
        "operationId": "hashtags___trend",
        "summary": "hashtags/trend",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/hashtags/trend.ts"
        },
        "tags": ["hashtags"],
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "tag": { "type": "string" },
                      "chart": {
                        "type": "array",
                        "items": { "type": "number" }
                      },
                      "usersCount": { "type": "number" }
                    },
                    "required": ["tag", "chart", "usersCount"]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "hashtags___trend",
        "summary": "hashtags/trend",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/hashtags/trend.ts"
        },
        "tags": ["hashtags"],
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "tag": { "type": "string" },
                      "chart": {
                        "type": "array",
                        "items": { "type": "number" }
                      },
                      "usersCount": { "type": "number" }
                    },
                    "required": ["tag", "chart", "usersCount"]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/hashtags/users": {
      "post": {
        "operationId": "hashtags___users",
        "summary": "hashtags/users",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/hashtags/users.ts"
        },
        "tags": ["hashtags"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tag": { "type": "string" },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "sort": {
                    "type": "string",
                    "enum": [
                      "+follower",
                      "-follower",
                      "+createdAt",
                      "-createdAt",
                      "+updatedAt",
                      "-updatedAt"
                    ]
                  },
                  "state": {
                    "type": "string",
                    "enum": ["all", "alive"],
                    "default": "all"
                  },
                  "origin": {
                    "type": "string",
                    "enum": ["combined", "local", "remote"],
                    "default": "local"
                  }
                },
                "required": ["tag", "sort"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/UserDetailed"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i": {
      "post": {
        "operationId": "i",
        "summary": "i",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/i.ts"
        },
        "tags": ["account"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/MeDetailed"
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "USER_IS_DELETED": {
                    "value": {
                      "error": {
                        "message": "User is deleted.",
                        "code": "USER_IS_DELETED",
                        "id": "e5b3b9f0-2b8f-4b9f-9c1f-8c5c1b2e1b1a",
                        "kind": "permission"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/2fa/done": {
      "post": {
        "operationId": "i___2fa___done",
        "summary": "i/2fa/done",
        "description": "No description provided.\n\n**Internal Endpoint**: This endpoint is an API for the misskey mainframe and is not intended for use by third parties.\n**Credential required**: *Yes*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/i/2fa/done.ts"
        },
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": { "token": { "type": "string" } },
                "required": ["token"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "backupCodes": {
                      "type": "array",
                      "items": { "type": "string" }
                    }
                  },
                  "required": ["backupCodes"]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/2fa/key-done": {
      "post": {
        "operationId": "i___2fa___key-done",
        "summary": "i/2fa/key-done",
        "description": "No description provided.\n\n**Internal Endpoint**: This endpoint is an API for the misskey mainframe and is not intended for use by third parties.\n**Credential required**: *Yes*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/i/2fa/key-done.ts"
        },
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": { "type": "string" },
                  "token": { "type": ["string", "null"] },
                  "name": { "type": "string", "minLength": 1, "maxLength": 30 },
                  "credential": { "type": "object" }
                },
                "required": ["password", "name", "credential"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string" },
                    "name": { "type": "string" }
                  },
                  "required": ["id", "name"]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INCORRECT_PASSWORD": {
                    "value": {
                      "error": {
                        "message": "Incorrect password.",
                        "code": "INCORRECT_PASSWORD",
                        "id": "0d7ec6d2-e652-443e-a7bf-9ee9a0cd77b0"
                      }
                    }
                  },
                  "TWO_FACTOR_NOT_ENABLED": {
                    "value": {
                      "error": {
                        "message": "2fa not enabled.",
                        "code": "TWO_FACTOR_NOT_ENABLED",
                        "id": "798d6847-b1ed-4f9c-b1f9-163c42655995"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/2fa/password-less": {
      "post": {
        "operationId": "i___2fa___password-less",
        "summary": "i/2fa/password-less",
        "description": "No description provided.\n\n**Internal Endpoint**: This endpoint is an API for the misskey mainframe and is not intended for use by third parties.\n**Credential required**: *Yes*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/i/2fa/password-less.ts"
        },
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": { "value": { "type": "boolean" } },
                "required": ["value"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SECURITY_KEY": {
                    "value": {
                      "error": {
                        "message": "No security key.",
                        "code": "NO_SECURITY_KEY",
                        "id": "f9c54d7f-d4c2-4d3c-9a8g-a70daac86512"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/2fa/register-key": {
      "post": {
        "operationId": "i___2fa___register-key",
        "summary": "i/2fa/register-key",
        "description": "No description provided.\n\n**Internal Endpoint**: This endpoint is an API for the misskey mainframe and is not intended for use by third parties.\n**Credential required**: *Yes*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/i/2fa/register-key.ts"
        },
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": { "type": "string" },
                  "token": { "type": ["string", "null"] }
                },
                "required": ["password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "rp": {
                      "type": "object",
                      "properties": { "id": { "type": "string" } }
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" },
                        "name": { "type": "string" },
                        "displayName": { "type": "string" }
                      },
                      "required": ["id", "name", "displayName"]
                    },
                    "challenge": { "type": "string" },
                    "pubKeyCredParams": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string" },
                          "alg": { "type": "number" }
                        },
                        "required": ["type", "alg"]
                      }
                    },
                    "timeout": { "type": ["number", "null"] },
                    "excludeCredentials": {
                      "type": ["array", "null"],
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "string" },
                          "type": { "type": "string" },
                          "transports": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "ble",
                                "cable",
                                "hybrid",
                                "internal",
                                "nfc",
                                "smart-card",
                                "usb"
                              ]
                            }
                          }
                        },
                        "required": ["id", "type", "transports"]
                      }
                    },
                    "authenticatorSelection": {
                      "type": ["object", "null"],
                      "properties": {
                        "authenticatorAttachment": {
                          "type": "string",
                          "enum": ["cross-platform", "platform"]
                        },
                        "requireResidentKey": { "type": "boolean" },
                        "userVerification": {
                          "type": "string",
                          "enum": ["discouraged", "preferred", "required"]
                        }
                      },
                      "required": [
                        "authenticatorAttachment",
                        "requireResidentKey",
                        "userVerification"
                      ]
                    },
                    "attestation": {
                      "type": ["string", "null"],
                      "enum": ["direct", "enterprise", "indirect", "none", null]
                    },
                    "extensions": {
                      "type": ["object", "null"],
                      "properties": {
                        "appid": { "type": ["string", "null"] },
                        "credProps": { "type": ["boolean", "null"] },
                        "hmacCreateSecret": { "type": ["boolean", "null"] }
                      },
                      "required": ["appid", "credProps", "hmacCreateSecret"]
                    }
                  },
                  "required": [
                    "rp",
                    "user",
                    "challenge",
                    "pubKeyCredParams",
                    "timeout",
                    "excludeCredentials",
                    "authenticatorSelection",
                    "attestation",
                    "extensions"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "USER_NOT_FOUND": {
                    "value": {
                      "error": {
                        "message": "User not found.",
                        "code": "USER_NOT_FOUND",
                        "id": "652f899f-66d4-490e-993e-6606c8ec04c3"
                      }
                    }
                  },
                  "INCORRECT_PASSWORD": {
                    "value": {
                      "error": {
                        "message": "Incorrect password.",
                        "code": "INCORRECT_PASSWORD",
                        "id": "38769596-efe2-4faf-9bec-abbb3f2cd9ba"
                      }
                    }
                  },
                  "TWO_FACTOR_NOT_ENABLED": {
                    "value": {
                      "error": {
                        "message": "2fa not enabled.",
                        "code": "TWO_FACTOR_NOT_ENABLED",
                        "id": "bf32b864-449b-47b8-974e-f9a5468546f1"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/2fa/register": {
      "post": {
        "operationId": "i___2fa___register",
        "summary": "i/2fa/register",
        "description": "No description provided.\n\n**Internal Endpoint**: This endpoint is an API for the misskey mainframe and is not intended for use by third parties.\n**Credential required**: *Yes*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/i/2fa/register.ts"
        },
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": { "type": "string" },
                  "token": { "type": ["string", "null"] }
                },
                "required": ["password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "qr": { "type": "string" },
                    "url": { "type": "string" },
                    "secret": { "type": "string" },
                    "label": { "type": "string" },
                    "issuer": { "type": "string" }
                  },
                  "required": ["qr", "url", "secret", "label", "issuer"]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INCORRECT_PASSWORD": {
                    "value": {
                      "error": {
                        "message": "Incorrect password.",
                        "code": "INCORRECT_PASSWORD",
                        "id": "78d6c839-20c9-4c66-b90a-fc0542168b48"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/2fa/update-key": {
      "post": {
        "operationId": "i___2fa___update-key",
        "summary": "i/2fa/update-key",
        "description": "No description provided.\n\n**Internal Endpoint**: This endpoint is an API for the misskey mainframe and is not intended for use by third parties.\n**Credential required**: *Yes*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/i/2fa/update-key.ts"
        },
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string", "minLength": 1, "maxLength": 30 },
                  "credentialId": { "type": "string" }
                },
                "required": ["name", "credentialId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_KEY": {
                    "value": {
                      "error": {
                        "message": "No such key.",
                        "code": "NO_SUCH_KEY",
                        "id": "f9c5467f-d492-4d3c-9a8g-a70dacc86512"
                      }
                    }
                  },
                  "ACCESS_DENIED": {
                    "value": {
                      "error": {
                        "message": "You do not have edit privilege of this key.",
                        "code": "ACCESS_DENIED",
                        "id": "1fb7cb09-d46a-4fff-b8df-057708cce513"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/2fa/remove-key": {
      "post": {
        "operationId": "i___2fa___remove-key",
        "summary": "i/2fa/remove-key",
        "description": "No description provided.\n\n**Internal Endpoint**: This endpoint is an API for the misskey mainframe and is not intended for use by third parties.\n**Credential required**: *Yes*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/i/2fa/remove-key.ts"
        },
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": { "type": "string" },
                  "token": { "type": ["string", "null"] },
                  "credentialId": { "type": "string" }
                },
                "required": ["password", "credentialId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INCORRECT_PASSWORD": {
                    "value": {
                      "error": {
                        "message": "Incorrect password.",
                        "code": "INCORRECT_PASSWORD",
                        "id": "141c598d-a825-44c8-9173-cfb9d92be493"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/2fa/unregister": {
      "post": {
        "operationId": "i___2fa___unregister",
        "summary": "i/2fa/unregister",
        "description": "No description provided.\n\n**Internal Endpoint**: This endpoint is an API for the misskey mainframe and is not intended for use by third parties.\n**Credential required**: *Yes*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/i/2fa/unregister.ts"
        },
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": { "type": "string" },
                  "token": { "type": ["string", "null"] }
                },
                "required": ["password"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INCORRECT_PASSWORD": {
                    "value": {
                      "error": {
                        "message": "Incorrect password.",
                        "code": "INCORRECT_PASSWORD",
                        "id": "7add0395-9901-4098-82f9-4f67af65f775"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/apps": {
      "post": {
        "operationId": "i___apps",
        "summary": "i/apps",
        "description": "No description provided.\n\n**Internal Endpoint**: This endpoint is an API for the misskey mainframe and is not intended for use by third parties.\n**Credential required**: *Yes*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/i/apps.ts"
        },
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "sort": {
                    "type": "string",
                    "enum": [
                      "+createdAt",
                      "-createdAt",
                      "+lastUsedAt",
                      "-lastUsedAt"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "string", "format": "misskey:id" },
                      "name": { "type": "string" },
                      "createdAt": { "type": "string", "format": "date-time" },
                      "lastUsedAt": { "type": "string", "format": "date-time" },
                      "permission": {
                        "type": "array",
                        "uniqueItems": true,
                        "items": { "type": "string" }
                      }
                    },
                    "required": ["id", "createdAt", "permission"]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/authorized-apps": {
      "post": {
        "operationId": "i___authorized-apps",
        "summary": "i/authorized-apps",
        "description": "No description provided.\n\n**Internal Endpoint**: This endpoint is an API for the misskey mainframe and is not intended for use by third parties.\n**Credential required**: *Yes*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/i/authorized-apps.ts"
        },
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "offset": { "type": "integer", "default": 0 },
                  "sort": {
                    "type": "string",
                    "enum": ["desc", "asc"],
                    "default": "desc"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "string", "format": "misskey:id" },
                      "name": { "type": "string" },
                      "callbackUrl": { "type": ["string", "null"] },
                      "permission": {
                        "type": "array",
                        "uniqueItems": true,
                        "items": { "type": "string" }
                      },
                      "isAuthorized": { "type": "boolean" }
                    },
                    "required": ["id", "name", "callbackUrl", "permission"]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/claim-achievement": {
      "post": {
        "operationId": "i___claim-achievement",
        "summary": "i/claim-achievement",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/i/claim-achievement.ts"
        },
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "enum": [
                      "notes1",
                      "notes10",
                      "notes100",
                      "notes500",
                      "notes1000",
                      "notes5000",
                      "notes10000",
                      "notes20000",
                      "notes30000",
                      "notes40000",
                      "notes50000",
                      "notes60000",
                      "notes70000",
                      "notes80000",
                      "notes90000",
                      "notes100000",
                      "login3",
                      "login7",
                      "login15",
                      "login30",
                      "login60",
                      "login100",
                      "login200",
                      "login300",
                      "login400",
                      "login500",
                      "login600",
                      "login700",
                      "login800",
                      "login900",
                      "login1000",
                      "passedSinceAccountCreated1",
                      "passedSinceAccountCreated2",
                      "passedSinceAccountCreated3",
                      "loggedInOnBirthday",
                      "loggedInOnNewYearsDay",
                      "noteClipped1",
                      "noteFavorited1",
                      "myNoteFavorited1",
                      "profileFilled",
                      "markedAsCat",
                      "following1",
                      "following10",
                      "following50",
                      "following100",
                      "following300",
                      "followers1",
                      "followers10",
                      "followers50",
                      "followers100",
                      "followers300",
                      "followers500",
                      "followers1000",
                      "collectAchievements30",
                      "viewAchievements3min",
                      "iLoveMisskey",
                      "foundTreasure",
                      "client30min",
                      "client60min",
                      "noteDeletedWithin1min",
                      "postedAtLateNight",
                      "postedAt0min0sec",
                      "selfQuote",
                      "htl20npm",
                      "viewInstanceChart",
                      "outputHelloWorldOnScratchpad",
                      "open3windows",
                      "driveFolderCircularReference",
                      "reactWithoutRead",
                      "clickedClickHere",
                      "justPlainLucky",
                      "setNameToSyuilo",
                      "cookieClicked",
                      "brainDiver",
                      "smashTestNotificationButton",
                      "tutorialCompleted",
                      "bubbleGameExplodingHead",
                      "bubbleGameDoubleExplodingHead"
                    ]
                  }
                },
                "required": ["name"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/change-password": {
      "post": {
        "operationId": "i___change-password",
        "summary": "i/change-password",
        "description": "No description provided.\n\n**Internal Endpoint**: This endpoint is an API for the misskey mainframe and is not intended for use by third parties.\n**Credential required**: *Yes*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/i/change-password.ts"
        },
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "currentPassword": { "type": "string" },
                  "newPassword": { "type": "string", "minLength": 1 },
                  "token": { "type": ["string", "null"] }
                },
                "required": ["currentPassword", "newPassword"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/delete-account": {
      "post": {
        "operationId": "i___delete-account",
        "summary": "i/delete-account",
        "description": "No description provided.\n\n**Internal Endpoint**: This endpoint is an API for the misskey mainframe and is not intended for use by third parties.\n**Credential required**: *Yes*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/i/delete-account.ts"
        },
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": { "type": "string" },
                  "token": { "type": ["string", "null"] }
                },
                "required": ["password"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/export-blocking": {
      "post": {
        "operationId": "i___export-blocking",
        "summary": "i/export-blocking",
        "description": "No description provided.\n\n**Internal Endpoint**: This endpoint is an API for the misskey mainframe and is not intended for use by third parties.\n**Credential required**: *Yes*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/i/export-blocking.ts"
        },
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "To many requests",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "RATE_LIMIT_EXCEEDED": {
                    "value": {
                      "error": {
                        "message": "Rate limit exceeded. Please try again later.",
                        "code": "RATE_LIMIT_EXCEEDED",
                        "id": "d5826d14-3982-4d2e-8011-b9e9f02499ef"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/export-following": {
      "post": {
        "operationId": "i___export-following",
        "summary": "i/export-following",
        "description": "No description provided.\n\n**Internal Endpoint**: This endpoint is an API for the misskey mainframe and is not intended for use by third parties.\n**Credential required**: *Yes*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/i/export-following.ts"
        },
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "excludeMuting": { "type": "boolean", "default": false },
                  "excludeInactive": { "type": "boolean", "default": false }
                }
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "To many requests",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "RATE_LIMIT_EXCEEDED": {
                    "value": {
                      "error": {
                        "message": "Rate limit exceeded. Please try again later.",
                        "code": "RATE_LIMIT_EXCEEDED",
                        "id": "d5826d14-3982-4d2e-8011-b9e9f02499ef"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/export-mute": {
      "post": {
        "operationId": "i___export-mute",
        "summary": "i/export-mute",
        "description": "No description provided.\n\n**Internal Endpoint**: This endpoint is an API for the misskey mainframe and is not intended for use by third parties.\n**Credential required**: *Yes*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/i/export-mute.ts"
        },
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "To many requests",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "RATE_LIMIT_EXCEEDED": {
                    "value": {
                      "error": {
                        "message": "Rate limit exceeded. Please try again later.",
                        "code": "RATE_LIMIT_EXCEEDED",
                        "id": "d5826d14-3982-4d2e-8011-b9e9f02499ef"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/export-notes": {
      "post": {
        "operationId": "i___export-notes",
        "summary": "i/export-notes",
        "description": "No description provided.\n\n**Internal Endpoint**: This endpoint is an API for the misskey mainframe and is not intended for use by third parties.\n**Credential required**: *Yes*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/i/export-notes.ts"
        },
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "To many requests",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "RATE_LIMIT_EXCEEDED": {
                    "value": {
                      "error": {
                        "message": "Rate limit exceeded. Please try again later.",
                        "code": "RATE_LIMIT_EXCEEDED",
                        "id": "d5826d14-3982-4d2e-8011-b9e9f02499ef"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/export-clips": {
      "post": {
        "operationId": "i___export-clips",
        "summary": "i/export-clips",
        "description": "No description provided.\n\n**Internal Endpoint**: This endpoint is an API for the misskey mainframe and is not intended for use by third parties.\n**Credential required**: *Yes*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/i/export-clips.ts"
        },
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "To many requests",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "RATE_LIMIT_EXCEEDED": {
                    "value": {
                      "error": {
                        "message": "Rate limit exceeded. Please try again later.",
                        "code": "RATE_LIMIT_EXCEEDED",
                        "id": "d5826d14-3982-4d2e-8011-b9e9f02499ef"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/export-favorites": {
      "post": {
        "operationId": "i___export-favorites",
        "summary": "i/export-favorites",
        "description": "No description provided.\n\n**Internal Endpoint**: This endpoint is an API for the misskey mainframe and is not intended for use by third parties.\n**Credential required**: *Yes*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/i/export-favorites.ts"
        },
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "To many requests",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "RATE_LIMIT_EXCEEDED": {
                    "value": {
                      "error": {
                        "message": "Rate limit exceeded. Please try again later.",
                        "code": "RATE_LIMIT_EXCEEDED",
                        "id": "d5826d14-3982-4d2e-8011-b9e9f02499ef"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/export-user-lists": {
      "post": {
        "operationId": "i___export-user-lists",
        "summary": "i/export-user-lists",
        "description": "No description provided.\n\n**Internal Endpoint**: This endpoint is an API for the misskey mainframe and is not intended for use by third parties.\n**Credential required**: *Yes*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/i/export-user-lists.ts"
        },
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "To many requests",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "RATE_LIMIT_EXCEEDED": {
                    "value": {
                      "error": {
                        "message": "Rate limit exceeded. Please try again later.",
                        "code": "RATE_LIMIT_EXCEEDED",
                        "id": "d5826d14-3982-4d2e-8011-b9e9f02499ef"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/export-antennas": {
      "post": {
        "operationId": "i___export-antennas",
        "summary": "i/export-antennas",
        "description": "No description provided.\n\n**Internal Endpoint**: This endpoint is an API for the misskey mainframe and is not intended for use by third parties.\n**Credential required**: *Yes*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/i/export-antennas.ts"
        },
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "To many requests",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "RATE_LIMIT_EXCEEDED": {
                    "value": {
                      "error": {
                        "message": "Rate limit exceeded. Please try again later.",
                        "code": "RATE_LIMIT_EXCEEDED",
                        "id": "d5826d14-3982-4d2e-8011-b9e9f02499ef"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/favorites": {
      "post": {
        "operationId": "i___favorites",
        "summary": "i/favorites",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:favorites*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/i/favorites.ts"
        },
        "tags": ["account"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "sinceId": { "type": "string", "format": "misskey:id" },
                  "untilId": { "type": "string", "format": "misskey:id" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/NoteFavorite"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/gallery/likes": {
      "post": {
        "operationId": "i___gallery___likes",
        "summary": "i/gallery/likes",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:gallery-likes*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/i/gallery/likes.ts"
        },
        "tags": ["account"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "sinceId": { "type": "string", "format": "misskey:id" },
                  "untilId": { "type": "string", "format": "misskey:id" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "string", "format": "id" },
                      "post": {
                        "type": "object",
                        "$ref": "#/components/schemas/GalleryPost"
                      }
                    },
                    "required": ["id", "post"]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/gallery/posts": {
      "post": {
        "operationId": "i___gallery___posts",
        "summary": "i/gallery/posts",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:gallery*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/i/gallery/posts.ts"
        },
        "tags": ["account"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "sinceId": { "type": "string", "format": "misskey:id" },
                  "untilId": { "type": "string", "format": "misskey:id" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/GalleryPost"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/import-blocking": {
      "post": {
        "operationId": "i___import-blocking",
        "summary": "i/import-blocking",
        "description": "No description provided.\n\n**Internal Endpoint**: This endpoint is an API for the misskey mainframe and is not intended for use by third parties.\n**Credential required**: *Yes*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/i/import-blocking.ts"
        },
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fileId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["fileId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_FILE": {
                    "value": {
                      "error": {
                        "message": "No such file.",
                        "code": "NO_SUCH_FILE",
                        "id": "ebb53e5f-6574-9c0c-0b92-7ca6def56d7e"
                      }
                    }
                  },
                  "UNEXPECTED_FILE_TYPE": {
                    "value": {
                      "error": {
                        "message": "We need csv file.",
                        "code": "UNEXPECTED_FILE_TYPE",
                        "id": "b6fab7d6-d945-d67c-dfdb-32da1cd12cfe"
                      }
                    }
                  },
                  "TOO_BIG_FILE": {
                    "value": {
                      "error": {
                        "message": "That file is too big.",
                        "code": "TOO_BIG_FILE",
                        "id": "b7fbf0b1-aeef-3b21-29ef-fadd4cb72ccf"
                      }
                    }
                  },
                  "EMPTY_FILE": {
                    "value": {
                      "error": {
                        "message": "That file is empty.",
                        "code": "EMPTY_FILE",
                        "id": "6f3a4dcc-f060-a707-4950-806fbdbe60d6"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "To many requests",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "RATE_LIMIT_EXCEEDED": {
                    "value": {
                      "error": {
                        "message": "Rate limit exceeded. Please try again later.",
                        "code": "RATE_LIMIT_EXCEEDED",
                        "id": "d5826d14-3982-4d2e-8011-b9e9f02499ef"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/import-following": {
      "post": {
        "operationId": "i___import-following",
        "summary": "i/import-following",
        "description": "No description provided.\n\n**Internal Endpoint**: This endpoint is an API for the misskey mainframe and is not intended for use by third parties.\n**Credential required**: *Yes*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/i/import-following.ts"
        },
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fileId": { "type": "string", "format": "misskey:id" },
                  "withReplies": { "type": "boolean" }
                },
                "required": ["fileId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_FILE": {
                    "value": {
                      "error": {
                        "message": "No such file.",
                        "code": "NO_SUCH_FILE",
                        "id": "b98644cf-a5ac-4277-a502-0b8054a709a3"
                      }
                    }
                  },
                  "UNEXPECTED_FILE_TYPE": {
                    "value": {
                      "error": {
                        "message": "We need csv file.",
                        "code": "UNEXPECTED_FILE_TYPE",
                        "id": "660f3599-bce0-4f95-9dde-311fd841c183"
                      }
                    }
                  },
                  "TOO_BIG_FILE": {
                    "value": {
                      "error": {
                        "message": "That file is too big.",
                        "code": "TOO_BIG_FILE",
                        "id": "dee9d4ed-ad07-43ed-8b34-b2856398bc60"
                      }
                    }
                  },
                  "EMPTY_FILE": {
                    "value": {
                      "error": {
                        "message": "That file is empty.",
                        "code": "EMPTY_FILE",
                        "id": "31a1b42c-06f7-42ae-8a38-a661c5c9f691"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "To many requests",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "RATE_LIMIT_EXCEEDED": {
                    "value": {
                      "error": {
                        "message": "Rate limit exceeded. Please try again later.",
                        "code": "RATE_LIMIT_EXCEEDED",
                        "id": "d5826d14-3982-4d2e-8011-b9e9f02499ef"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/import-muting": {
      "post": {
        "operationId": "i___import-muting",
        "summary": "i/import-muting",
        "description": "No description provided.\n\n**Internal Endpoint**: This endpoint is an API for the misskey mainframe and is not intended for use by third parties.\n**Credential required**: *Yes*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/i/import-muting.ts"
        },
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fileId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["fileId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_FILE": {
                    "value": {
                      "error": {
                        "message": "No such file.",
                        "code": "NO_SUCH_FILE",
                        "id": "e674141e-bd2a-ba85-e616-aefb187c9c2a"
                      }
                    }
                  },
                  "UNEXPECTED_FILE_TYPE": {
                    "value": {
                      "error": {
                        "message": "We need csv file.",
                        "code": "UNEXPECTED_FILE_TYPE",
                        "id": "568c6e42-c86c-ba09-c004-517f83f9f1a8"
                      }
                    }
                  },
                  "TOO_BIG_FILE": {
                    "value": {
                      "error": {
                        "message": "That file is too big.",
                        "code": "TOO_BIG_FILE",
                        "id": "9b4ada6d-d7f7-0472-0713-4f558bd1ec9c"
                      }
                    }
                  },
                  "EMPTY_FILE": {
                    "value": {
                      "error": {
                        "message": "That file is empty.",
                        "code": "EMPTY_FILE",
                        "id": "d2f12af1-e7b4-feac-86a3-519548f2728e"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "To many requests",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "RATE_LIMIT_EXCEEDED": {
                    "value": {
                      "error": {
                        "message": "Rate limit exceeded. Please try again later.",
                        "code": "RATE_LIMIT_EXCEEDED",
                        "id": "d5826d14-3982-4d2e-8011-b9e9f02499ef"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/import-user-lists": {
      "post": {
        "operationId": "i___import-user-lists",
        "summary": "i/import-user-lists",
        "description": "No description provided.\n\n**Internal Endpoint**: This endpoint is an API for the misskey mainframe and is not intended for use by third parties.\n**Credential required**: *Yes*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/i/import-user-lists.ts"
        },
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fileId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["fileId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_FILE": {
                    "value": {
                      "error": {
                        "message": "No such file.",
                        "code": "NO_SUCH_FILE",
                        "id": "ea9cc34f-c415-4bc6-a6fe-28ac40357049"
                      }
                    }
                  },
                  "UNEXPECTED_FILE_TYPE": {
                    "value": {
                      "error": {
                        "message": "We need csv file.",
                        "code": "UNEXPECTED_FILE_TYPE",
                        "id": "a3c9edda-dd9b-4596-be6a-150ef813745c"
                      }
                    }
                  },
                  "TOO_BIG_FILE": {
                    "value": {
                      "error": {
                        "message": "That file is too big.",
                        "code": "TOO_BIG_FILE",
                        "id": "ae6e7a22-971b-4b52-b2be-fc0b9b121fe9"
                      }
                    }
                  },
                  "EMPTY_FILE": {
                    "value": {
                      "error": {
                        "message": "That file is empty.",
                        "code": "EMPTY_FILE",
                        "id": "99efe367-ce6e-4d44-93f8-5fae7b040356"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "To many requests",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "RATE_LIMIT_EXCEEDED": {
                    "value": {
                      "error": {
                        "message": "Rate limit exceeded. Please try again later.",
                        "code": "RATE_LIMIT_EXCEEDED",
                        "id": "d5826d14-3982-4d2e-8011-b9e9f02499ef"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/import-antennas": {
      "post": {
        "operationId": "i___import-antennas",
        "summary": "i/import-antennas",
        "description": "No description provided.\n\n**Internal Endpoint**: This endpoint is an API for the misskey mainframe and is not intended for use by third parties.\n**Credential required**: *Yes*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/i/import-antennas.ts"
        },
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fileId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["fileId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_FILE": {
                    "value": {
                      "error": {
                        "message": "No such file.",
                        "code": "NO_SUCH_FILE",
                        "id": "3b71d086-c3fa-431c-b01d-ded65a777172"
                      }
                    }
                  },
                  "NO_SUCH_USER": {
                    "value": {
                      "error": {
                        "message": "No such user.",
                        "code": "NO_SUCH_USER",
                        "id": "e842c379-8ac7-4cf7-b07a-4d4de7e4671c"
                      }
                    }
                  },
                  "EMPTY_FILE": {
                    "value": {
                      "error": {
                        "message": "That file is empty.",
                        "code": "EMPTY_FILE",
                        "id": "7f60115d-8d93-4b0f-bd0e-3815dcbb389f"
                      }
                    }
                  },
                  "TOO_MANY_ANTENNAS": {
                    "value": {
                      "error": {
                        "message": "You cannot create antenna any more.",
                        "code": "TOO_MANY_ANTENNAS",
                        "id": "600917d4-a4cb-4cc5-8ba8-7ac8ea3c7779"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "To many requests",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "RATE_LIMIT_EXCEEDED": {
                    "value": {
                      "error": {
                        "message": "Rate limit exceeded. Please try again later.",
                        "code": "RATE_LIMIT_EXCEEDED",
                        "id": "d5826d14-3982-4d2e-8011-b9e9f02499ef"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/notifications": {
      "post": {
        "operationId": "i___notifications",
        "summary": "i/notifications",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:notifications*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/i/notifications.ts"
        },
        "tags": ["account"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "sinceId": { "type": "string", "format": "misskey:id" },
                  "untilId": { "type": "string", "format": "misskey:id" },
                  "markAsRead": { "type": "boolean", "default": true },
                  "includeTypes": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "note",
                        "follow",
                        "mention",
                        "reply",
                        "renote",
                        "quote",
                        "reaction",
                        "pollEnded",
                        "receiveFollowRequest",
                        "followRequestAccepted",
                        "roleAssigned",
                        "achievementEarned",
                        "exportCompleted",
                        "login",
                        "app",
                        "test",
                        "pollVote",
                        "groupInvited"
                      ]
                    }
                  },
                  "excludeTypes": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "note",
                        "follow",
                        "mention",
                        "reply",
                        "renote",
                        "quote",
                        "reaction",
                        "pollEnded",
                        "receiveFollowRequest",
                        "followRequestAccepted",
                        "roleAssigned",
                        "achievementEarned",
                        "exportCompleted",
                        "login",
                        "app",
                        "test",
                        "pollVote",
                        "groupInvited"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/Notification"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "To many requests",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "RATE_LIMIT_EXCEEDED": {
                    "value": {
                      "error": {
                        "message": "Rate limit exceeded. Please try again later.",
                        "code": "RATE_LIMIT_EXCEEDED",
                        "id": "d5826d14-3982-4d2e-8011-b9e9f02499ef"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/notifications-grouped": {
      "post": {
        "operationId": "i___notifications-grouped",
        "summary": "i/notifications-grouped",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:notifications*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/i/notifications-grouped.ts"
        },
        "tags": ["account"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "sinceId": { "type": "string", "format": "misskey:id" },
                  "untilId": { "type": "string", "format": "misskey:id" },
                  "markAsRead": { "type": "boolean", "default": true },
                  "includeTypes": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "note",
                        "follow",
                        "mention",
                        "reply",
                        "renote",
                        "quote",
                        "reaction",
                        "pollEnded",
                        "receiveFollowRequest",
                        "followRequestAccepted",
                        "roleAssigned",
                        "achievementEarned",
                        "exportCompleted",
                        "login",
                        "app",
                        "test",
                        "reaction:grouped",
                        "renote:grouped",
                        "pollVote",
                        "groupInvited"
                      ]
                    }
                  },
                  "excludeTypes": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "note",
                        "follow",
                        "mention",
                        "reply",
                        "renote",
                        "quote",
                        "reaction",
                        "pollEnded",
                        "receiveFollowRequest",
                        "followRequestAccepted",
                        "roleAssigned",
                        "achievementEarned",
                        "exportCompleted",
                        "login",
                        "app",
                        "test",
                        "reaction:grouped",
                        "renote:grouped",
                        "pollVote",
                        "groupInvited"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/Notification"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "To many requests",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "RATE_LIMIT_EXCEEDED": {
                    "value": {
                      "error": {
                        "message": "Rate limit exceeded. Please try again later.",
                        "code": "RATE_LIMIT_EXCEEDED",
                        "id": "d5826d14-3982-4d2e-8011-b9e9f02499ef"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/page-likes": {
      "post": {
        "operationId": "i___page-likes",
        "summary": "i/page-likes",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:page-likes*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/i/page-likes.ts"
        },
        "tags": ["account"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "sinceId": { "type": "string", "format": "misskey:id" },
                  "untilId": { "type": "string", "format": "misskey:id" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "string", "format": "id" },
                      "page": {
                        "type": "object",
                        "$ref": "#/components/schemas/Page"
                      }
                    },
                    "required": ["id", "page"]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/pages": {
      "post": {
        "operationId": "i___pages",
        "summary": "i/pages",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:pages*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/i/pages.ts"
        },
        "tags": ["account"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "sinceId": { "type": "string", "format": "misskey:id" },
                  "untilId": { "type": "string", "format": "misskey:id" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/Page"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/pin": {
      "post": {
        "operationId": "i___pin",
        "summary": "i/pin",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/i/pin.ts"
        },
        "tags": ["account"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "noteId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["noteId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/MeDetailed"
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_NOTE": {
                    "value": {
                      "error": {
                        "message": "No such note.",
                        "code": "NO_SUCH_NOTE",
                        "id": "56734f8b-3928-431e-bf80-6ff87df40cb3"
                      }
                    }
                  },
                  "PIN_LIMIT_EXCEEDED": {
                    "value": {
                      "error": {
                        "message": "You can not pin notes any more.",
                        "code": "PIN_LIMIT_EXCEEDED",
                        "id": "72dab508-c64d-498f-8740-a8eec1ba385a"
                      }
                    }
                  },
                  "ALREADY_PINNED": {
                    "value": {
                      "error": {
                        "message": "That note has already been pinned.",
                        "code": "ALREADY_PINNED",
                        "id": "8b18c2b7-68fe-4edb-9892-c0cbaeb6c913"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/read-all-unread-notes": {
      "post": {
        "operationId": "i___read-all-unread-notes",
        "summary": "i/read-all-unread-notes",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/i/read-all-unread-notes.ts"
        },
        "tags": ["account"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/read-announcement": {
      "post": {
        "operationId": "i___read-announcement",
        "summary": "i/read-announcement",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/i/read-announcement.ts"
        },
        "tags": ["account"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "announcementId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["announcementId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/regenerate-token": {
      "post": {
        "operationId": "i___regenerate-token",
        "summary": "i/regenerate-token",
        "description": "No description provided.\n\n**Internal Endpoint**: This endpoint is an API for the misskey mainframe and is not intended for use by third parties.\n**Credential required**: *Yes*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/i/regenerate-token.ts"
        },
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": { "password": { "type": "string" } },
                "required": ["password"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/registry/get-all": {
      "post": {
        "operationId": "i___registry___get-all",
        "summary": "i/registry/get-all",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/i/registry/get-all.ts"
        },
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "scope": {
                    "type": "array",
                    "default": [],
                    "items": { "type": "string", "pattern": "^[a-zA-Z0-9_]+$" }
                  },
                  "domain": { "type": ["string", "null"] }
                },
                "required": ["scope"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/registry/get-detail": {
      "post": {
        "operationId": "i___registry___get-detail",
        "summary": "i/registry/get-detail",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/i/registry/get-detail.ts"
        },
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "key": { "type": "string" },
                  "scope": {
                    "type": "array",
                    "default": [],
                    "items": { "type": "string", "pattern": "^[a-zA-Z0-9_]+$" }
                  },
                  "domain": { "type": ["string", "null"] }
                },
                "required": ["key", "scope"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "updatedAt": { "type": "string" },
                    "value": {}
                  },
                  "required": ["updatedAt", "value"]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_KEY": {
                    "value": {
                      "error": {
                        "message": "No such key.",
                        "code": "NO_SUCH_KEY",
                        "id": "97a1e8e7-c0f7-47d2-957a-92e61256e01a"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/registry/get": {
      "post": {
        "operationId": "i___registry___get",
        "summary": "i/registry/get",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/i/registry/get.ts"
        },
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "key": { "type": "string" },
                  "scope": {
                    "type": "array",
                    "default": [],
                    "items": { "type": "string", "pattern": "^[a-zA-Z0-9_]+$" }
                  },
                  "domain": { "type": ["string", "null"] }
                },
                "required": ["key", "scope"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_KEY": {
                    "value": {
                      "error": {
                        "message": "No such key.",
                        "code": "NO_SUCH_KEY",
                        "id": "ac3ed68a-62f0-422b-a7bc-d5e09e8f6a6a"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/registry/keys-with-type": {
      "post": {
        "operationId": "i___registry___keys-with-type",
        "summary": "i/registry/keys-with-type",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/i/registry/keys-with-type.ts"
        },
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "scope": {
                    "type": "array",
                    "default": [],
                    "items": { "type": "string", "pattern": "^[a-zA-Z0-9_]+$" }
                  },
                  "domain": { "type": ["string", "null"] }
                },
                "required": ["scope"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": { "type": "string" }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/registry/keys": {
      "post": {
        "operationId": "i___registry___keys",
        "summary": "i/registry/keys",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/i/registry/keys.ts"
        },
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "scope": {
                    "type": "array",
                    "default": [],
                    "items": { "type": "string", "pattern": "^[a-zA-Z0-9_]+$" }
                  },
                  "domain": { "type": ["string", "null"] }
                },
                "required": ["scope"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": { "type": "array", "items": { "type": "string" } }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/registry/remove": {
      "post": {
        "operationId": "i___registry___remove",
        "summary": "i/registry/remove",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/i/registry/remove.ts"
        },
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "key": { "type": "string" },
                  "scope": {
                    "type": "array",
                    "default": [],
                    "items": { "type": "string", "pattern": "^[a-zA-Z0-9_]+$" }
                  },
                  "domain": { "type": ["string", "null"] }
                },
                "required": ["key", "scope"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_KEY": {
                    "value": {
                      "error": {
                        "message": "No such key.",
                        "code": "NO_SUCH_KEY",
                        "id": "1fac4e8a-a6cd-4e39-a4a5-3a7e11f1b019"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/registry/scopes-with-domain": {
      "post": {
        "operationId": "i___registry___scopes-with-domain",
        "summary": "i/registry/scopes-with-domain",
        "description": "No description provided.\n\n**Internal Endpoint**: This endpoint is an API for the misskey mainframe and is not intended for use by third parties.\n**Credential required**: *Yes*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/i/registry/scopes-with-domain.ts"
        },
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "scopes": {
                        "type": "array",
                        "items": {
                          "type": "array",
                          "items": { "type": "string" }
                        }
                      },
                      "domain": { "type": ["string", "null"] }
                    },
                    "required": ["scopes", "domain"]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/registry/set": {
      "post": {
        "operationId": "i___registry___set",
        "summary": "i/registry/set",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/i/registry/set.ts"
        },
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "key": { "type": "string", "minLength": 1 },
                  "value": {},
                  "scope": {
                    "type": "array",
                    "default": [],
                    "items": { "type": "string", "pattern": "^[a-zA-Z0-9_]+$" }
                  },
                  "domain": { "type": ["string", "null"] }
                },
                "required": ["key", "value", "scope"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/revoke-token": {
      "post": {
        "operationId": "i___revoke-token",
        "summary": "i/revoke-token",
        "description": "No description provided.\n\n**Internal Endpoint**: This endpoint is an API for the misskey mainframe and is not intended for use by third parties.\n**Credential required**: *Yes*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/i/revoke-token.ts"
        },
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tokenId": { "type": "string", "format": "misskey:id" },
                  "token": { "type": ["string", "null"] }
                },
                "anyOf": [
                  { "required": ["tokenId"] },
                  { "required": ["token"] }
                ]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/signin-history": {
      "post": {
        "operationId": "i___signin-history",
        "summary": "i/signin-history",
        "description": "No description provided.\n\n**Internal Endpoint**: This endpoint is an API for the misskey mainframe and is not intended for use by third parties.\n**Credential required**: *Yes*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/i/signin-history.ts"
        },
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "sinceId": { "type": "string", "format": "misskey:id" },
                  "untilId": { "type": "string", "format": "misskey:id" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/Signin"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/unpin": {
      "post": {
        "operationId": "i___unpin",
        "summary": "i/unpin",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/i/unpin.ts"
        },
        "tags": ["account"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "noteId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["noteId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/MeDetailed"
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_NOTE": {
                    "value": {
                      "error": {
                        "message": "No such note.",
                        "code": "NO_SUCH_NOTE",
                        "id": "454170ce-9d63-4a43-9da1-ea10afe81e21"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/update-email": {
      "post": {
        "operationId": "i___update-email",
        "summary": "i/update-email",
        "description": "No description provided.\n\n**Internal Endpoint**: This endpoint is an API for the misskey mainframe and is not intended for use by third parties.\n**Credential required**: *Yes*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/i/update-email.ts"
        },
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": { "type": "string" },
                  "email": { "type": ["string", "null"] },
                  "token": { "type": ["string", "null"] }
                },
                "required": ["password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/MeDetailed"
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INCORRECT_PASSWORD": {
                    "value": {
                      "error": {
                        "message": "Incorrect password.",
                        "code": "INCORRECT_PASSWORD",
                        "id": "e54c1d7e-e7d6-4103-86b6-0a95069b4ad3"
                      }
                    }
                  },
                  "UNAVAILABLE": {
                    "value": {
                      "error": {
                        "message": "Unavailable email address.",
                        "code": "UNAVAILABLE",
                        "id": "a2defefb-f220-8849-0af6-17f816099323"
                      }
                    }
                  },
                  "EMAIL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Email address is required.",
                        "code": "EMAIL_REQUIRED",
                        "id": "324c7a88-59f2-492f-903f-89134f93e47e"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "To many requests",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "RATE_LIMIT_EXCEEDED": {
                    "value": {
                      "error": {
                        "message": "Rate limit exceeded. Please try again later.",
                        "code": "RATE_LIMIT_EXCEEDED",
                        "id": "d5826d14-3982-4d2e-8011-b9e9f02499ef"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/update": {
      "post": {
        "operationId": "i___update",
        "summary": "i/update",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/i/update.ts"
        },
        "tags": ["account"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": ["string", "null"],
                    "minLength": 1,
                    "maxLength": 50
                  },
                  "description": {
                    "type": ["string", "null"],
                    "minLength": 1,
                    "maxLength": 1500
                  },
                  "followedMessage": {
                    "type": ["string", "null"],
                    "minLength": 1,
                    "maxLength": 256
                  },
                  "location": {
                    "type": ["string", "null"],
                    "minLength": 1,
                    "maxLength": 50
                  },
                  "birthday": {
                    "type": ["string", "null"],
                    "pattern": "^([0-9]{4})-([0-9]{2})-([0-9]{2})$"
                  },
                  "lang": {
                    "type": ["string", "null"],
                    "enum": [
                      null,
                      "ach",
                      "ady",
                      "af",
                      "af-NA",
                      "af-ZA",
                      "ak",
                      "ar",
                      "ar-AR",
                      "ar-MA",
                      "ar-SA",
                      "ay-BO",
                      "az",
                      "az-AZ",
                      "be-BY",
                      "bg",
                      "bg-BG",
                      "bn",
                      "bn-IN",
                      "bn-BD",
                      "br",
                      "bs-BA",
                      "ca",
                      "ca-ES",
                      "cak",
                      "ck-US",
                      "cs",
                      "cs-CZ",
                      "cy",
                      "cy-GB",
                      "da",
                      "da-DK",
                      "de",
                      "de-AT",
                      "de-DE",
                      "de-CH",
                      "dsb",
                      "el",
                      "el-GR",
                      "en",
                      "en-GB",
                      "en-AU",
                      "en-CA",
                      "en-IE",
                      "en-IN",
                      "en-PI",
                      "en-SG",
                      "en-UD",
                      "en-US",
                      "en-ZA",
                      "en@pirate",
                      "eo",
                      "eo-EO",
                      "es",
                      "es-AR",
                      "es-419",
                      "es-CL",
                      "es-CO",
                      "es-EC",
                      "es-ES",
                      "es-LA",
                      "es-NI",
                      "es-MX",
                      "es-US",
                      "es-VE",
                      "et",
                      "et-EE",
                      "eu",
                      "eu-ES",
                      "fa",
                      "fa-IR",
                      "fb-LT",
                      "ff",
                      "fi",
                      "fi-FI",
                      "fo",
                      "fo-FO",
                      "fr",
                      "fr-CA",
                      "fr-FR",
                      "fr-BE",
                      "fr-CH",
                      "fy-NL",
                      "ga",
                      "ga-IE",
                      "gd",
                      "gl",
                      "gl-ES",
                      "gn-PY",
                      "gu-IN",
                      "gv",
                      "gx-GR",
                      "he",
                      "he-IL",
                      "hi",
                      "hi-IN",
                      "hr",
                      "hr-HR",
                      "hsb",
                      "ht",
                      "hu",
                      "hu-HU",
                      "hy",
                      "hy-AM",
                      "id",
                      "id-ID",
                      "is",
                      "is-IS",
                      "it",
                      "it-IT",
                      "ja",
                      "ja-JP",
                      "jv-ID",
                      "ka-GE",
                      "kk-KZ",
                      "km",
                      "kl",
                      "km-KH",
                      "kab",
                      "kn",
                      "kn-IN",
                      "ko",
                      "ko-KR",
                      "ku-TR",
                      "kw",
                      "la",
                      "la-VA",
                      "lb",
                      "li-NL",
                      "lt",
                      "lt-LT",
                      "lv",
                      "lv-LV",
                      "mai",
                      "mg-MG",
                      "mk",
                      "mk-MK",
                      "ml",
                      "ml-IN",
                      "mn-MN",
                      "mr",
                      "mr-IN",
                      "ms",
                      "ms-MY",
                      "mt",
                      "mt-MT",
                      "my",
                      "no",
                      "nb",
                      "nb-NO",
                      "ne",
                      "ne-NP",
                      "nl",
                      "nl-BE",
                      "nl-NL",
                      "nn-NO",
                      "oc",
                      "or-IN",
                      "pa",
                      "pa-IN",
                      "pl",
                      "pl-PL",
                      "ps-AF",
                      "pt",
                      "pt-BR",
                      "pt-PT",
                      "qu-PE",
                      "rm-CH",
                      "ro",
                      "ro-RO",
                      "ru",
                      "ru-RU",
                      "sa-IN",
                      "se-NO",
                      "sh",
                      "si-LK",
                      "sk",
                      "sk-SK",
                      "sl",
                      "sl-SI",
                      "so-SO",
                      "sq",
                      "sq-AL",
                      "sr",
                      "sr-RS",
                      "su",
                      "sv",
                      "sv-SE",
                      "sw",
                      "sw-KE",
                      "ta",
                      "ta-IN",
                      "te",
                      "te-IN",
                      "tg",
                      "tg-TJ",
                      "th",
                      "th-TH",
                      "fil",
                      "tlh",
                      "tr",
                      "tr-TR",
                      "tt-RU",
                      "uk",
                      "uk-UA",
                      "ur",
                      "ur-PK",
                      "uz",
                      "uz-UZ",
                      "vi",
                      "vi-VN",
                      "xh-ZA",
                      "yi",
                      "yi-DE",
                      "zh",
                      "zh-Hans",
                      "zh-Hant",
                      "zh-CN",
                      "zh-HK",
                      "zh-SG",
                      "zh-TW",
                      "zu-ZA"
                    ]
                  },
                  "avatarId": {
                    "type": ["string", "null"],
                    "format": "misskey:id"
                  },
                  "avatarDecorations": {
                    "type": "array",
                    "maxItems": 16,
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string", "format": "misskey:id" },
                        "angle": {
                          "type": ["number", "null"],
                          "maximum": 0.5,
                          "minimum": -0.5
                        },
                        "flipH": { "type": ["boolean", "null"] },
                        "offsetX": {
                          "type": ["number", "null"],
                          "maximum": 0.25,
                          "minimum": -0.25
                        },
                        "offsetY": {
                          "type": ["number", "null"],
                          "maximum": 0.25,
                          "minimum": -0.25
                        }
                      },
                      "required": ["id"]
                    }
                  },
                  "bannerId": {
                    "type": ["string", "null"],
                    "format": "misskey:id"
                  },
                  "fields": {
                    "type": "array",
                    "minItems": 0,
                    "maxItems": 16,
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": { "type": "string" },
                        "value": { "type": "string" }
                      },
                      "required": ["name", "value"]
                    }
                  },
                  "isLocked": { "type": "boolean" },
                  "isExplorable": { "type": "boolean" },
                  "hideOnlineStatus": { "type": "boolean" },
                  "publicReactions": { "type": "boolean" },
                  "carefulBot": { "type": "boolean" },
                  "autoAcceptFollowed": { "type": "boolean" },
                  "noCrawle": { "type": "boolean" },
                  "preventAiLearning": { "type": "boolean" },
                  "isBot": { "type": "boolean" },
                  "isCat": { "type": "boolean" },
                  "injectFeaturedNote": { "type": "boolean" },
                  "receiveAnnouncementEmail": { "type": "boolean" },
                  "alwaysMarkNsfw": { "type": "boolean" },
                  "autoSensitive": { "type": "boolean" },
                  "followingVisibility": {
                    "type": "string",
                    "enum": ["public", "followers", "private"]
                  },
                  "followersVisibility": {
                    "type": "string",
                    "enum": ["public", "followers", "private"]
                  },
                  "pinnedPageId": {
                    "type": ["string", "null"],
                    "format": "misskey:id"
                  },
                  "mutedWords": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        { "type": "array", "items": { "type": "string" } },
                        { "type": "string" }
                      ]
                    }
                  },
                  "hardMutedWords": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        { "type": "array", "items": { "type": "string" } },
                        { "type": "string" }
                      ]
                    }
                  },
                  "mutedInstances": {
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "notificationRecieveConfig": {
                    "type": "object",
                    "properties": {
                      "note": {
                        "type": "object",
                        "oneOf": [
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "all",
                                  "following",
                                  "follower",
                                  "mutualFollow",
                                  "followingOrFollower",
                                  "never"
                                ]
                              }
                            },
                            "required": ["type"]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": { "type": "string", "enum": ["list"] },
                              "userListId": {
                                "type": "string",
                                "format": "misskey:id"
                              }
                            },
                            "required": ["type", "userListId"]
                          }
                        ]
                      },
                      "follow": {
                        "type": "object",
                        "oneOf": [
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "all",
                                  "following",
                                  "follower",
                                  "mutualFollow",
                                  "followingOrFollower",
                                  "never"
                                ]
                              }
                            },
                            "required": ["type"]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": { "type": "string", "enum": ["list"] },
                              "userListId": {
                                "type": "string",
                                "format": "misskey:id"
                              }
                            },
                            "required": ["type", "userListId"]
                          }
                        ]
                      },
                      "mention": {
                        "type": "object",
                        "oneOf": [
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "all",
                                  "following",
                                  "follower",
                                  "mutualFollow",
                                  "followingOrFollower",
                                  "never"
                                ]
                              }
                            },
                            "required": ["type"]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": { "type": "string", "enum": ["list"] },
                              "userListId": {
                                "type": "string",
                                "format": "misskey:id"
                              }
                            },
                            "required": ["type", "userListId"]
                          }
                        ]
                      },
                      "reply": {
                        "type": "object",
                        "oneOf": [
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "all",
                                  "following",
                                  "follower",
                                  "mutualFollow",
                                  "followingOrFollower",
                                  "never"
                                ]
                              }
                            },
                            "required": ["type"]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": { "type": "string", "enum": ["list"] },
                              "userListId": {
                                "type": "string",
                                "format": "misskey:id"
                              }
                            },
                            "required": ["type", "userListId"]
                          }
                        ]
                      },
                      "renote": {
                        "type": "object",
                        "oneOf": [
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "all",
                                  "following",
                                  "follower",
                                  "mutualFollow",
                                  "followingOrFollower",
                                  "never"
                                ]
                              }
                            },
                            "required": ["type"]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": { "type": "string", "enum": ["list"] },
                              "userListId": {
                                "type": "string",
                                "format": "misskey:id"
                              }
                            },
                            "required": ["type", "userListId"]
                          }
                        ]
                      },
                      "quote": {
                        "type": "object",
                        "oneOf": [
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "all",
                                  "following",
                                  "follower",
                                  "mutualFollow",
                                  "followingOrFollower",
                                  "never"
                                ]
                              }
                            },
                            "required": ["type"]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": { "type": "string", "enum": ["list"] },
                              "userListId": {
                                "type": "string",
                                "format": "misskey:id"
                              }
                            },
                            "required": ["type", "userListId"]
                          }
                        ]
                      },
                      "reaction": {
                        "type": "object",
                        "oneOf": [
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "all",
                                  "following",
                                  "follower",
                                  "mutualFollow",
                                  "followingOrFollower",
                                  "never"
                                ]
                              }
                            },
                            "required": ["type"]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": { "type": "string", "enum": ["list"] },
                              "userListId": {
                                "type": "string",
                                "format": "misskey:id"
                              }
                            },
                            "required": ["type", "userListId"]
                          }
                        ]
                      },
                      "pollEnded": {
                        "type": "object",
                        "oneOf": [
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "all",
                                  "following",
                                  "follower",
                                  "mutualFollow",
                                  "followingOrFollower",
                                  "never"
                                ]
                              }
                            },
                            "required": ["type"]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": { "type": "string", "enum": ["list"] },
                              "userListId": {
                                "type": "string",
                                "format": "misskey:id"
                              }
                            },
                            "required": ["type", "userListId"]
                          }
                        ]
                      },
                      "receiveFollowRequest": {
                        "type": "object",
                        "oneOf": [
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "all",
                                  "following",
                                  "follower",
                                  "mutualFollow",
                                  "followingOrFollower",
                                  "never"
                                ]
                              }
                            },
                            "required": ["type"]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": { "type": "string", "enum": ["list"] },
                              "userListId": {
                                "type": "string",
                                "format": "misskey:id"
                              }
                            },
                            "required": ["type", "userListId"]
                          }
                        ]
                      },
                      "followRequestAccepted": {
                        "type": "object",
                        "oneOf": [
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "all",
                                  "following",
                                  "follower",
                                  "mutualFollow",
                                  "followingOrFollower",
                                  "never"
                                ]
                              }
                            },
                            "required": ["type"]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": { "type": "string", "enum": ["list"] },
                              "userListId": {
                                "type": "string",
                                "format": "misskey:id"
                              }
                            },
                            "required": ["type", "userListId"]
                          }
                        ]
                      },
                      "roleAssigned": {
                        "type": "object",
                        "oneOf": [
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "all",
                                  "following",
                                  "follower",
                                  "mutualFollow",
                                  "followingOrFollower",
                                  "never"
                                ]
                              }
                            },
                            "required": ["type"]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": { "type": "string", "enum": ["list"] },
                              "userListId": {
                                "type": "string",
                                "format": "misskey:id"
                              }
                            },
                            "required": ["type", "userListId"]
                          }
                        ]
                      },
                      "achievementEarned": {
                        "type": "object",
                        "oneOf": [
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "all",
                                  "following",
                                  "follower",
                                  "mutualFollow",
                                  "followingOrFollower",
                                  "never"
                                ]
                              }
                            },
                            "required": ["type"]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": { "type": "string", "enum": ["list"] },
                              "userListId": {
                                "type": "string",
                                "format": "misskey:id"
                              }
                            },
                            "required": ["type", "userListId"]
                          }
                        ]
                      },
                      "app": {
                        "type": "object",
                        "oneOf": [
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "all",
                                  "following",
                                  "follower",
                                  "mutualFollow",
                                  "followingOrFollower",
                                  "never"
                                ]
                              }
                            },
                            "required": ["type"]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": { "type": "string", "enum": ["list"] },
                              "userListId": {
                                "type": "string",
                                "format": "misskey:id"
                              }
                            },
                            "required": ["type", "userListId"]
                          }
                        ]
                      },
                      "test": {
                        "type": "object",
                        "oneOf": [
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "all",
                                  "following",
                                  "follower",
                                  "mutualFollow",
                                  "followingOrFollower",
                                  "never"
                                ]
                              }
                            },
                            "required": ["type"]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": { "type": "string", "enum": ["list"] },
                              "userListId": {
                                "type": "string",
                                "format": "misskey:id"
                              }
                            },
                            "required": ["type", "userListId"]
                          }
                        ]
                      }
                    }
                  },
                  "emailNotificationTypes": {
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "alsoKnownAs": {
                    "type": "array",
                    "maxItems": 10,
                    "uniqueItems": true,
                    "items": { "type": "string" }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/MeDetailed"
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_AVATAR": {
                    "value": {
                      "error": {
                        "message": "No such avatar file.",
                        "code": "NO_SUCH_AVATAR",
                        "id": "539f3a45-f215-4f81-a9a8-31293640207f"
                      }
                    }
                  },
                  "NO_SUCH_BANNER": {
                    "value": {
                      "error": {
                        "message": "No such banner file.",
                        "code": "NO_SUCH_BANNER",
                        "id": "0d8f5629-f210-41c2-9433-735831a58595"
                      }
                    }
                  },
                  "AVATAR_NOT_AN_IMAGE": {
                    "value": {
                      "error": {
                        "message": "The file specified as an avatar is not an image.",
                        "code": "AVATAR_NOT_AN_IMAGE",
                        "id": "f419f9f8-2f4d-46b1-9fb4-49d3a2fd7191"
                      }
                    }
                  },
                  "BANNER_NOT_AN_IMAGE": {
                    "value": {
                      "error": {
                        "message": "The file specified as a banner is not an image.",
                        "code": "BANNER_NOT_AN_IMAGE",
                        "id": "75aedb19-2afd-4e6d-87fc-67941256fa60"
                      }
                    }
                  },
                  "NO_SUCH_PAGE": {
                    "value": {
                      "error": {
                        "message": "No such page.",
                        "code": "NO_SUCH_PAGE",
                        "id": "8e01b590-7eb9-431b-a239-860e086c408e"
                      }
                    }
                  },
                  "INVALID_REGEXP": {
                    "value": {
                      "error": {
                        "message": "Invalid Regular Expression.",
                        "code": "INVALID_REGEXP",
                        "id": "0d786918-10df-41cd-8f33-8dec7d9a89a5"
                      }
                    }
                  },
                  "TOO_MANY_MUTED_WORDS": {
                    "value": {
                      "error": {
                        "message": "Too many muted words.",
                        "code": "TOO_MANY_MUTED_WORDS",
                        "id": "010665b1-a211-42d2-bc64-8f6609d79785"
                      }
                    }
                  },
                  "NO_SUCH_USER": {
                    "value": {
                      "error": {
                        "message": "No such user.",
                        "code": "NO_SUCH_USER",
                        "id": "fcd2eef9-a9b2-4c4f-8624-038099e90aa5"
                      }
                    }
                  },
                  "URI_NULL": {
                    "value": {
                      "error": {
                        "message": "User ActivityPup URI is null.",
                        "code": "URI_NULL",
                        "id": "bf326f31-d430-4f97-9933-5d61e4d48a23"
                      }
                    }
                  },
                  "FORBIDDEN_TO_SET_YOURSELF": {
                    "value": {
                      "error": {
                        "message": "You can't set yourself as your own alias.",
                        "code": "FORBIDDEN_TO_SET_YOURSELF",
                        "id": "25c90186-4ab0-49c8-9bba-a1fa6c202ba4"
                      }
                    }
                  },
                  "RESTRICTED_BY_ROLE": {
                    "value": {
                      "error": {
                        "message": "This feature is restricted by your role.",
                        "code": "RESTRICTED_BY_ROLE",
                        "id": "8feff0ba-5ab5-585b-31f4-4df816663fad"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "To many requests",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "RATE_LIMIT_EXCEEDED": {
                    "value": {
                      "error": {
                        "message": "Rate limit exceeded. Please try again later.",
                        "code": "RATE_LIMIT_EXCEEDED",
                        "id": "d5826d14-3982-4d2e-8011-b9e9f02499ef"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/move": {
      "post": {
        "operationId": "i___move",
        "summary": "i/move",
        "description": "No description provided.\n\n**Internal Endpoint**: This endpoint is an API for the misskey mainframe and is not intended for use by third parties.\n**Credential required**: *Yes*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/i/move.ts"
        },
        "tags": ["users"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": { "moveToAccount": { "type": "string" } },
                "required": ["moveToAccount"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "DESTINATION_ACCOUNT_FORBIDS": {
                    "value": {
                      "error": {
                        "message": "Destination account doesn't have proper 'Known As' alias, or has already moved.",
                        "code": "DESTINATION_ACCOUNT_FORBIDS",
                        "id": "b5c90186-4ab0-49c8-9bba-a1f766282ba4"
                      }
                    }
                  },
                  "NOT_ROOT_FORBIDDEN": {
                    "value": {
                      "error": {
                        "message": "The root can't migrate.",
                        "code": "NOT_ROOT_FORBIDDEN",
                        "id": "4362e8dc-731f-4ad8-a694-be2a88922a24"
                      }
                    }
                  },
                  "NO_SUCH_USER": {
                    "value": {
                      "error": {
                        "message": "No such user.",
                        "code": "NO_SUCH_USER",
                        "id": "fcd2eef9-a9b2-4c4f-8624-038099e90aa5"
                      }
                    }
                  },
                  "URI_NULL": {
                    "value": {
                      "error": {
                        "message": "Local User ActivityPup URI is null.",
                        "code": "URI_NULL",
                        "id": "95ba11b9-90e8-43a5-ba16-7acc1ab32e71"
                      }
                    }
                  },
                  "ALREADY_MOVED": {
                    "value": {
                      "error": {
                        "message": "Account was already moved to another account.",
                        "code": "ALREADY_MOVED",
                        "id": "b234a14e-9ebe-4581-8000-074b3c215962"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "To many requests",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "RATE_LIMIT_EXCEEDED": {
                    "value": {
                      "error": {
                        "message": "Rate limit exceeded. Please try again later.",
                        "code": "RATE_LIMIT_EXCEEDED",
                        "id": "d5826d14-3982-4d2e-8011-b9e9f02499ef"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/webhooks/create": {
      "post": {
        "operationId": "i___webhooks___create",
        "summary": "i/webhooks/create",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/i/webhooks/create.ts"
        },
        "tags": ["webhooks"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "url": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 1024
                  },
                  "secret": {
                    "type": "string",
                    "maxLength": 1024,
                    "default": ""
                  },
                  "on": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "mention",
                        "unfollow",
                        "follow",
                        "followed",
                        "note",
                        "reply",
                        "renote",
                        "reaction"
                      ]
                    }
                  }
                },
                "required": ["name", "url", "on"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string", "format": "misskey:id" },
                    "userId": { "type": "string", "format": "misskey:id" },
                    "name": { "type": "string" },
                    "on": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "mention",
                          "unfollow",
                          "follow",
                          "followed",
                          "note",
                          "reply",
                          "renote",
                          "reaction"
                        ]
                      }
                    },
                    "url": { "type": "string" },
                    "secret": { "type": "string" },
                    "active": { "type": "boolean" },
                    "latestSentAt": {
                      "type": ["string", "null"],
                      "format": "date-time"
                    },
                    "latestStatus": { "type": ["integer", "null"] }
                  },
                  "required": [
                    "id",
                    "userId",
                    "name",
                    "on",
                    "url",
                    "secret",
                    "active",
                    "latestSentAt",
                    "latestStatus"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "TOO_MANY_WEBHOOKS": {
                    "value": {
                      "error": {
                        "message": "You cannot create webhook any more.",
                        "code": "TOO_MANY_WEBHOOKS",
                        "id": "87a9bb19-111e-4e37-81d3-a3e7426453b0"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/webhooks/list": {
      "post": {
        "operationId": "i___webhooks___list",
        "summary": "i/webhooks/list",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/i/webhooks/list.ts"
        },
        "tags": ["webhooks"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "string", "format": "misskey:id" },
                      "userId": { "type": "string", "format": "misskey:id" },
                      "name": { "type": "string" },
                      "on": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "mention",
                            "unfollow",
                            "follow",
                            "followed",
                            "note",
                            "reply",
                            "renote",
                            "reaction"
                          ]
                        }
                      },
                      "url": { "type": "string" },
                      "secret": { "type": "string" },
                      "active": { "type": "boolean" },
                      "latestSentAt": {
                        "type": ["string", "null"],
                        "format": "date-time"
                      },
                      "latestStatus": { "type": ["integer", "null"] }
                    },
                    "required": [
                      "id",
                      "userId",
                      "name",
                      "on",
                      "url",
                      "secret",
                      "active",
                      "latestSentAt",
                      "latestStatus"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/webhooks/show": {
      "post": {
        "operationId": "i___webhooks___show",
        "summary": "i/webhooks/show",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/i/webhooks/show.ts"
        },
        "tags": ["webhooks"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "webhookId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["webhookId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string", "format": "misskey:id" },
                    "userId": { "type": "string", "format": "misskey:id" },
                    "name": { "type": "string" },
                    "on": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "mention",
                          "unfollow",
                          "follow",
                          "followed",
                          "note",
                          "reply",
                          "renote",
                          "reaction"
                        ]
                      }
                    },
                    "url": { "type": "string" },
                    "secret": { "type": "string" },
                    "active": { "type": "boolean" },
                    "latestSentAt": {
                      "type": ["string", "null"],
                      "format": "date-time"
                    },
                    "latestStatus": { "type": ["integer", "null"] }
                  },
                  "required": [
                    "id",
                    "userId",
                    "name",
                    "on",
                    "url",
                    "secret",
                    "active",
                    "latestSentAt",
                    "latestStatus"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_WEBHOOK": {
                    "value": {
                      "error": {
                        "message": "No such webhook.",
                        "code": "NO_SUCH_WEBHOOK",
                        "id": "50f614d9-3047-4f7e-90d8-ad6b2d5fb098"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/webhooks/update": {
      "post": {
        "operationId": "i___webhooks___update",
        "summary": "i/webhooks/update",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/i/webhooks/update.ts"
        },
        "tags": ["webhooks"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "webhookId": { "type": "string", "format": "misskey:id" },
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "url": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 1024
                  },
                  "secret": { "type": ["string", "null"], "maxLength": 1024 },
                  "on": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "mention",
                        "unfollow",
                        "follow",
                        "followed",
                        "note",
                        "reply",
                        "renote",
                        "reaction"
                      ]
                    }
                  },
                  "active": { "type": "boolean" }
                },
                "required": ["webhookId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_WEBHOOK": {
                    "value": {
                      "error": {
                        "message": "No such webhook.",
                        "code": "NO_SUCH_WEBHOOK",
                        "id": "fb0fea69-da18-45b1-828d-bd4fd1612518"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/webhooks/delete": {
      "post": {
        "operationId": "i___webhooks___delete",
        "summary": "i/webhooks/delete",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/i/webhooks/delete.ts"
        },
        "tags": ["webhooks"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "webhookId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["webhookId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_WEBHOOK": {
                    "value": {
                      "error": {
                        "message": "No such webhook.",
                        "code": "NO_SUCH_WEBHOOK",
                        "id": "bae73e5a-5522-4965-ae19-3a8688e71d82"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/webhooks/test": {
      "post": {
        "operationId": "i___webhooks___test",
        "summary": "i/webhooks/test",
        "description": "No description provided.\n\n**Internal Endpoint**: This endpoint is an API for the misskey mainframe and is not intended for use by third parties.\n**Credential required**: *Yes* / **Permission**: *read:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/i/webhooks/test.ts"
        },
        "tags": ["webhooks"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "webhookId": { "type": "string", "format": "misskey:id" },
                  "type": {
                    "type": "string",
                    "enum": [
                      "mention",
                      "unfollow",
                      "follow",
                      "followed",
                      "note",
                      "reply",
                      "renote",
                      "reaction"
                    ]
                  },
                  "override": {
                    "type": "object",
                    "properties": {
                      "url": { "type": "string" },
                      "secret": { "type": "string" }
                    }
                  }
                },
                "required": ["webhookId", "type"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_WEBHOOK": {
                    "value": {
                      "error": {
                        "message": "No such webhook.",
                        "code": "NO_SUCH_WEBHOOK",
                        "id": "0c52149c-e913-18f8-5dc7-74870bfe0cf9"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "To many requests",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "RATE_LIMIT_EXCEEDED": {
                    "value": {
                      "error": {
                        "message": "Rate limit exceeded. Please try again later.",
                        "code": "RATE_LIMIT_EXCEEDED",
                        "id": "d5826d14-3982-4d2e-8011-b9e9f02499ef"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/invite/create": {
      "post": {
        "operationId": "invite___create",
        "summary": "invite/create",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:invite-codes*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/invite/create.ts"
        },
        "tags": ["meta"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/InviteCode"
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "EXCEEDED_LIMIT_OF_CREATE_INVITE_CODE": {
                    "value": {
                      "error": {
                        "message": "You have exceeded the limit for creating an invitation code.",
                        "code": "EXCEEDED_LIMIT_OF_CREATE_INVITE_CODE",
                        "id": "8b165dd3-6f37-4557-8db1-73175d63c641"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/invite/delete": {
      "post": {
        "operationId": "invite___delete",
        "summary": "invite/delete",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:invite-codes*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/invite/delete.ts"
        },
        "tags": ["meta"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "inviteId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["inviteId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_INVITE_CODE": {
                    "value": {
                      "error": {
                        "message": "No such invite code.",
                        "code": "NO_SUCH_INVITE_CODE",
                        "id": "cd4f9ae4-7854-4e3e-8df9-c296f051e634"
                      }
                    }
                  },
                  "CAN_NOT_DELETE_INVITE_CODE": {
                    "value": {
                      "error": {
                        "message": "You can't delete this invite code.",
                        "code": "CAN_NOT_DELETE_INVITE_CODE",
                        "id": "ff17af39-000c-4d4e-abdf-848fa30fc1ce"
                      }
                    }
                  },
                  "ACCESS_DENIED": {
                    "value": {
                      "error": {
                        "message": "Access denied.",
                        "code": "ACCESS_DENIED",
                        "id": "5eb8d909-2540-4970-90b8-dd6f86088121"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/invite/list": {
      "post": {
        "operationId": "invite___list",
        "summary": "invite/list",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:invite-codes*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/invite/list.ts"
        },
        "tags": ["meta"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 30
                  },
                  "sinceId": { "type": "string", "format": "misskey:id" },
                  "untilId": { "type": "string", "format": "misskey:id" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/InviteCode"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/invite/limit": {
      "post": {
        "operationId": "invite___limit",
        "summary": "invite/limit",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:invite-codes*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/invite/limit.ts"
        },
        "tags": ["meta"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "remaining": { "type": ["integer", "null"] }
                  },
                  "required": ["remaining"]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/meta": {
      "post": {
        "operationId": "meta",
        "summary": "meta",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/meta.ts"
        },
        "tags": ["meta"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "detail": { "type": "boolean", "default": true }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "oneOf": [
                    {
                      "type": "object",
                      "$ref": "#/components/schemas/MetaLite"
                    },
                    {
                      "type": "object",
                      "$ref": "#/components/schemas/MetaDetailed"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/emojis": {
      "get": {
        "operationId": "emojis",
        "summary": "emojis",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/emojis.ts"
        },
        "tags": ["meta"],
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "emojis": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "$ref": "#/components/schemas/EmojiSimple"
                      }
                    }
                  },
                  "required": ["emojis"]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "emojis",
        "summary": "emojis",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/emojis.ts"
        },
        "tags": ["meta"],
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "emojis": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "$ref": "#/components/schemas/EmojiSimple"
                      }
                    }
                  },
                  "required": ["emojis"]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/emoji": {
      "get": {
        "operationId": "emoji",
        "summary": "emoji",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/emoji.ts"
        },
        "tags": ["meta"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": { "name": { "type": "string" } },
                "required": ["name"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/EmojiDetailed"
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "emoji",
        "summary": "emoji",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/emoji.ts"
        },
        "tags": ["meta"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": { "name": { "type": "string" } },
                "required": ["name"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/EmojiDetailed"
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/miauth/gen-token": {
      "post": {
        "operationId": "miauth___gen-token",
        "summary": "miauth/gen-token",
        "description": "No description provided.\n\n**Internal Endpoint**: This endpoint is an API for the misskey mainframe and is not intended for use by third parties.\n**Credential required**: *Yes*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/miauth/gen-token.ts"
        },
        "tags": ["auth"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "session": { "type": ["string", "null"] },
                  "name": { "type": ["string", "null"] },
                  "description": { "type": ["string", "null"] },
                  "iconUrl": { "type": ["string", "null"] },
                  "permission": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": { "type": "string" }
                  }
                },
                "required": ["session", "permission"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "token": { "type": "string" } },
                  "required": ["token"]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/mute/create": {
      "post": {
        "operationId": "mute___create",
        "summary": "mute/create",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:mutes*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/mute/create.ts"
        },
        "tags": ["account"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": { "type": "string", "format": "misskey:id" },
                  "expiresAt": {
                    "type": ["integer", "null"],
                    "description": "A Unix Epoch timestamp that must lie in the future. `null` means an indefinite mute."
                  }
                },
                "required": ["userId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_USER": {
                    "value": {
                      "error": {
                        "message": "No such user.",
                        "code": "NO_SUCH_USER",
                        "id": "6fef56f3-e765-4957-88e5-c6f65329b8a5"
                      }
                    }
                  },
                  "MUTEE_IS_YOURSELF": {
                    "value": {
                      "error": {
                        "message": "Mutee is yourself.",
                        "code": "MUTEE_IS_YOURSELF",
                        "id": "a4619cb2-5f23-484b-9301-94c903074e10"
                      }
                    }
                  },
                  "ALREADY_MUTING": {
                    "value": {
                      "error": {
                        "message": "You are already muting that user.",
                        "code": "ALREADY_MUTING",
                        "id": "7e7359cb-160c-4956-b08f-4d1c653cd007"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "To many requests",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "RATE_LIMIT_EXCEEDED": {
                    "value": {
                      "error": {
                        "message": "Rate limit exceeded. Please try again later.",
                        "code": "RATE_LIMIT_EXCEEDED",
                        "id": "d5826d14-3982-4d2e-8011-b9e9f02499ef"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/mute/delete": {
      "post": {
        "operationId": "mute___delete",
        "summary": "mute/delete",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:mutes*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/mute/delete.ts"
        },
        "tags": ["account"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["userId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_USER": {
                    "value": {
                      "error": {
                        "message": "No such user.",
                        "code": "NO_SUCH_USER",
                        "id": "b851d00b-8ab1-4a56-8b1b-e24187cb48ef"
                      }
                    }
                  },
                  "MUTEE_IS_YOURSELF": {
                    "value": {
                      "error": {
                        "message": "Mutee is yourself.",
                        "code": "MUTEE_IS_YOURSELF",
                        "id": "f428b029-6b39-4d48-a1d2-cc1ae6dd5cf9"
                      }
                    }
                  },
                  "NOT_MUTING": {
                    "value": {
                      "error": {
                        "message": "You are not muting that user.",
                        "code": "NOT_MUTING",
                        "id": "5467d020-daa9-4553-81e1-135c0c35a96d"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/mute/list": {
      "post": {
        "operationId": "mute___list",
        "summary": "mute/list",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:mutes*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/mute/list.ts"
        },
        "tags": ["account"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 30
                  },
                  "sinceId": { "type": "string", "format": "misskey:id" },
                  "untilId": { "type": "string", "format": "misskey:id" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/Muting"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/renote-mute/create": {
      "post": {
        "operationId": "renote-mute___create",
        "summary": "renote-mute/create",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:mutes*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/renote-mute/create.ts"
        },
        "tags": ["account"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["userId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_USER": {
                    "value": {
                      "error": {
                        "message": "No such user.",
                        "code": "NO_SUCH_USER",
                        "id": "5e0a5dff-1e94-4202-87ae-4d9c89eb2271"
                      }
                    }
                  },
                  "MUTEE_IS_YOURSELF": {
                    "value": {
                      "error": {
                        "message": "Mutee is yourself.",
                        "code": "MUTEE_IS_YOURSELF",
                        "id": "37285718-52f7-4aef-b7de-c38b8e8a8420"
                      }
                    }
                  },
                  "ALREADY_MUTING": {
                    "value": {
                      "error": {
                        "message": "You are already muting that user.",
                        "code": "ALREADY_MUTING",
                        "id": "ccfecbe4-1f1c-4fc2-8a3d-c3ffee61cb7b"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "To many requests",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "RATE_LIMIT_EXCEEDED": {
                    "value": {
                      "error": {
                        "message": "Rate limit exceeded. Please try again later.",
                        "code": "RATE_LIMIT_EXCEEDED",
                        "id": "d5826d14-3982-4d2e-8011-b9e9f02499ef"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/renote-mute/delete": {
      "post": {
        "operationId": "renote-mute___delete",
        "summary": "renote-mute/delete",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:mutes*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/renote-mute/delete.ts"
        },
        "tags": ["account"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["userId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_USER": {
                    "value": {
                      "error": {
                        "message": "No such user.",
                        "code": "NO_SUCH_USER",
                        "id": "9b6728cf-638c-4aa1-bedb-e07d8101474d"
                      }
                    }
                  },
                  "MUTEE_IS_YOURSELF": {
                    "value": {
                      "error": {
                        "message": "Mutee is yourself.",
                        "code": "MUTEE_IS_YOURSELF",
                        "id": "619b1314-0850-4597-a242-e245f3da42af"
                      }
                    }
                  },
                  "NOT_MUTING": {
                    "value": {
                      "error": {
                        "message": "You are not muting that user.",
                        "code": "NOT_MUTING",
                        "id": "2e4ef874-8bf0-4b4b-b069-4598f6d05817"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/renote-mute/list": {
      "post": {
        "operationId": "renote-mute___list",
        "summary": "renote-mute/list",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:mutes*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/renote-mute/list.ts"
        },
        "tags": ["account"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 30
                  },
                  "sinceId": { "type": "string", "format": "misskey:id" },
                  "untilId": { "type": "string", "format": "misskey:id" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/RenoteMuting"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/my/apps": {
      "post": {
        "operationId": "my___apps",
        "summary": "my/apps",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/my/apps.ts"
        },
        "tags": ["account"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "offset": { "type": "integer", "default": 0 }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/App"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/notes": {
      "post": {
        "operationId": "notes",
        "summary": "notes",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/notes.ts"
        },
        "tags": ["notes"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "local": { "type": "boolean", "default": false },
                  "reply": { "type": "boolean" },
                  "renote": { "type": "boolean" },
                  "withFiles": { "type": "boolean" },
                  "poll": { "type": "boolean" },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "sinceId": { "type": "string", "format": "misskey:id" },
                  "untilId": { "type": "string", "format": "misskey:id" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/Note"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/notes/children": {
      "post": {
        "operationId": "notes___children",
        "summary": "notes/children",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/notes/children.ts"
        },
        "tags": ["notes"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "noteId": { "type": "string", "format": "misskey:id" },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "sinceId": { "type": "string", "format": "misskey:id" },
                  "untilId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["noteId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/Note"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/notes/clips": {
      "post": {
        "operationId": "notes___clips",
        "summary": "notes/clips",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/notes/clips.ts"
        },
        "tags": ["clips"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "noteId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["noteId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/Clip"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_NOTE": {
                    "value": {
                      "error": {
                        "message": "No such note.",
                        "code": "NO_SUCH_NOTE",
                        "id": "47db1a1c-b0af-458d-8fb4-986e4efafe1e"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/notes/conversation": {
      "post": {
        "operationId": "notes___conversation",
        "summary": "notes/conversation",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/notes/conversation.ts"
        },
        "tags": ["notes"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "noteId": { "type": "string", "format": "misskey:id" },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "offset": { "type": "integer", "default": 0 }
                },
                "required": ["noteId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/Note"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_NOTE": {
                    "value": {
                      "error": {
                        "message": "No such note.",
                        "code": "NO_SUCH_NOTE",
                        "id": "e1035875-9551-45ec-afa8-1ded1fcb53c8"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/notes/create": {
      "post": {
        "operationId": "notes___create",
        "summary": "notes/create",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:notes*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/notes/create.ts"
        },
        "tags": ["notes"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "visibility": {
                    "type": "string",
                    "enum": ["public", "home", "followers", "specified"],
                    "default": "public"
                  },
                  "visibleUserIds": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": { "type": "string", "format": "misskey:id" }
                  },
                  "cw": {
                    "type": ["string", "null"],
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "localOnly": { "type": "boolean", "default": false },
                  "reactionAcceptance": {
                    "type": ["string", "null"],
                    "enum": [
                      null,
                      "likeOnly",
                      "likeOnlyForRemote",
                      "nonSensitiveOnly",
                      "nonSensitiveOnlyForLocalLikeOnlyForRemote"
                    ],
                    "default": null
                  },
                  "noExtractMentions": { "type": "boolean", "default": false },
                  "noExtractHashtags": { "type": "boolean", "default": false },
                  "noExtractEmojis": { "type": "boolean", "default": false },
                  "replyId": {
                    "type": ["string", "null"],
                    "format": "misskey:id"
                  },
                  "renoteId": {
                    "type": ["string", "null"],
                    "format": "misskey:id"
                  },
                  "channelId": {
                    "type": ["string", "null"],
                    "format": "misskey:id"
                  },
                  "text": {
                    "type": ["string", "null"],
                    "minLength": 1,
                    "maxLength": 3000
                  },
                  "fileIds": {
                    "type": "array",
                    "uniqueItems": true,
                    "minItems": 1,
                    "maxItems": 16,
                    "items": { "type": "string", "format": "misskey:id" }
                  },
                  "mediaIds": {
                    "type": "array",
                    "uniqueItems": true,
                    "minItems": 1,
                    "maxItems": 16,
                    "items": { "type": "string", "format": "misskey:id" }
                  },
                  "poll": {
                    "type": ["object", "null"],
                    "properties": {
                      "choices": {
                        "type": "array",
                        "uniqueItems": true,
                        "minItems": 2,
                        "maxItems": 10,
                        "items": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 50
                        }
                      },
                      "multiple": { "type": "boolean" },
                      "expiresAt": { "type": ["integer", "null"] },
                      "expiredAfter": {
                        "type": ["integer", "null"],
                        "minimum": 1
                      }
                    },
                    "required": ["choices"]
                  }
                },
                "if": {
                  "properties": {
                    "renoteId": { "type": "null" },
                    "fileIds": { "type": "null" },
                    "mediaIds": { "type": "null" },
                    "poll": { "type": "null" }
                  }
                },
                "then": {
                  "properties": {
                    "text": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 3000,
                      "pattern": "[^\\s]+"
                    }
                  },
                  "required": ["text"]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "createdNote": {
                      "type": "object",
                      "$ref": "#/components/schemas/Note"
                    }
                  },
                  "required": ["createdNote"]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_RENOTE_TARGET": {
                    "value": {
                      "error": {
                        "message": "No such renote target.",
                        "code": "NO_SUCH_RENOTE_TARGET",
                        "id": "b5c90186-4ab0-49c8-9bba-a1f76c282ba4"
                      }
                    }
                  },
                  "CANNOT_RENOTE_TO_A_PURE_RENOTE": {
                    "value": {
                      "error": {
                        "message": "You can not Renote a pure Renote.",
                        "code": "CANNOT_RENOTE_TO_A_PURE_RENOTE",
                        "id": "fd4cc33e-2a37-48dd-99cc-9b806eb2031a"
                      }
                    }
                  },
                  "CANNOT_RENOTE_DUE_TO_VISIBILITY": {
                    "value": {
                      "error": {
                        "message": "You can not Renote due to target visibility.",
                        "code": "CANNOT_RENOTE_DUE_TO_VISIBILITY",
                        "id": "be9529e9-fe72-4de0-ae43-0b363c4938af"
                      }
                    }
                  },
                  "NO_SUCH_REPLY_TARGET": {
                    "value": {
                      "error": {
                        "message": "No such reply target.",
                        "code": "NO_SUCH_REPLY_TARGET",
                        "id": "749ee0f6-d3da-459a-bf02-282e2da4292c"
                      }
                    }
                  },
                  "CANNOT_REPLY_TO_AN_INVISIBLE_NOTE": {
                    "value": {
                      "error": {
                        "message": "You cannot reply to an invisible Note.",
                        "code": "CANNOT_REPLY_TO_AN_INVISIBLE_NOTE",
                        "id": "b98980fa-3780-406c-a935-b6d0eeee10d1"
                      }
                    }
                  },
                  "CANNOT_REPLY_TO_A_PURE_RENOTE": {
                    "value": {
                      "error": {
                        "message": "You can not reply to a pure Renote.",
                        "code": "CANNOT_REPLY_TO_A_PURE_RENOTE",
                        "id": "3ac74a84-8fd5-4bb0-870f-01804f82ce15"
                      }
                    }
                  },
                  "CANNOT_REPLY_TO_SPECIFIED_VISIBILITY_NOTE_WITH_EXTENDED_VISIBILITY": {
                    "value": {
                      "error": {
                        "message": "You cannot reply to a specified visibility note with extended visibility.",
                        "code": "CANNOT_REPLY_TO_SPECIFIED_VISIBILITY_NOTE_WITH_EXTENDED_VISIBILITY",
                        "id": "ed940410-535c-4d5e-bfa3-af798671e93c"
                      }
                    }
                  },
                  "CANNOT_CREATE_ALREADY_EXPIRED_POLL": {
                    "value": {
                      "error": {
                        "message": "Poll is already expired.",
                        "code": "CANNOT_CREATE_ALREADY_EXPIRED_POLL",
                        "id": "04da457d-b083-4055-9082-955525eda5a5"
                      }
                    }
                  },
                  "NO_SUCH_CHANNEL": {
                    "value": {
                      "error": {
                        "message": "No such channel.",
                        "code": "NO_SUCH_CHANNEL",
                        "id": "b1653923-5453-4edc-b786-7c4f39bb0bbb"
                      }
                    }
                  },
                  "YOU_HAVE_BEEN_BLOCKED": {
                    "value": {
                      "error": {
                        "message": "You have been blocked by this user.",
                        "code": "YOU_HAVE_BEEN_BLOCKED",
                        "id": "b390d7e1-8a5e-46ed-b625-06271cafd3d3"
                      }
                    }
                  },
                  "NO_SUCH_FILE": {
                    "value": {
                      "error": {
                        "message": "Some files are not found.",
                        "code": "NO_SUCH_FILE",
                        "id": "b6992544-63e7-67f0-fa7f-32444b1b5306"
                      }
                    }
                  },
                  "CANNOT_RENOTE_OUTSIDE_OF_CHANNEL": {
                    "value": {
                      "error": {
                        "message": "Cannot renote outside of channel.",
                        "code": "CANNOT_RENOTE_OUTSIDE_OF_CHANNEL",
                        "id": "33510210-8452-094c-6227-4a6c05d99f00"
                      }
                    }
                  },
                  "CONTAINS_PROHIBITED_WORDS": {
                    "value": {
                      "error": {
                        "message": "Cannot post because it contains prohibited words.",
                        "code": "CONTAINS_PROHIBITED_WORDS",
                        "id": "aa6e01d3-a85c-669d-758a-76aab43af334"
                      }
                    }
                  },
                  "CONTAINS_TOO_MANY_MENTIONS": {
                    "value": {
                      "error": {
                        "message": "Cannot post because it exceeds the allowed number of mentions.",
                        "code": "CONTAINS_TOO_MANY_MENTIONS",
                        "id": "4de0363a-3046-481b-9b0f-feff3e211025"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "To many requests",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "RATE_LIMIT_EXCEEDED": {
                    "value": {
                      "error": {
                        "message": "Rate limit exceeded. Please try again later.",
                        "code": "RATE_LIMIT_EXCEEDED",
                        "id": "d5826d14-3982-4d2e-8011-b9e9f02499ef"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/notes/delete": {
      "post": {
        "operationId": "notes___delete",
        "summary": "notes/delete",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:notes*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/notes/delete.ts"
        },
        "tags": ["notes"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "noteId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["noteId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_NOTE": {
                    "value": {
                      "error": {
                        "message": "No such note.",
                        "code": "NO_SUCH_NOTE",
                        "id": "490be23f-8c1f-4796-819f-94cb4f9d1630"
                      }
                    }
                  },
                  "ACCESS_DENIED": {
                    "value": {
                      "error": {
                        "message": "Access denied.",
                        "code": "ACCESS_DENIED",
                        "id": "fe8d7103-0ea8-4ec3-814d-f8b401dc69e9"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "To many requests",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "RATE_LIMIT_EXCEEDED": {
                    "value": {
                      "error": {
                        "message": "Rate limit exceeded. Please try again later.",
                        "code": "RATE_LIMIT_EXCEEDED",
                        "id": "d5826d14-3982-4d2e-8011-b9e9f02499ef"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/notes/favorites/create": {
      "post": {
        "operationId": "notes___favorites___create",
        "summary": "notes/favorites/create",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:favorites*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/notes/favorites/create.ts"
        },
        "tags": ["notes"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "noteId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["noteId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_NOTE": {
                    "value": {
                      "error": {
                        "message": "No such note.",
                        "code": "NO_SUCH_NOTE",
                        "id": "6dd26674-e060-4816-909a-45ba3f4da458"
                      }
                    }
                  },
                  "ALREADY_FAVORITED": {
                    "value": {
                      "error": {
                        "message": "The note has already been marked as a favorite.",
                        "code": "ALREADY_FAVORITED",
                        "id": "a402c12b-34dd-41d2-97d8-4d2ffd96a1a6"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "To many requests",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "RATE_LIMIT_EXCEEDED": {
                    "value": {
                      "error": {
                        "message": "Rate limit exceeded. Please try again later.",
                        "code": "RATE_LIMIT_EXCEEDED",
                        "id": "d5826d14-3982-4d2e-8011-b9e9f02499ef"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/notes/favorites/delete": {
      "post": {
        "operationId": "notes___favorites___delete",
        "summary": "notes/favorites/delete",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:favorites*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/notes/favorites/delete.ts"
        },
        "tags": ["notes"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "noteId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["noteId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_NOTE": {
                    "value": {
                      "error": {
                        "message": "No such note.",
                        "code": "NO_SUCH_NOTE",
                        "id": "80848a2c-398f-4343-baa9-df1d57696c56"
                      }
                    }
                  },
                  "NOT_FAVORITED": {
                    "value": {
                      "error": {
                        "message": "You have not marked that note a favorite.",
                        "code": "NOT_FAVORITED",
                        "id": "b625fc69-635e-45e9-86f4-dbefbef35af5"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/notes/featured": {
      "get": {
        "operationId": "notes___featured",
        "summary": "notes/featured",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/notes/featured.ts"
        },
        "tags": ["notes"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "untilId": { "type": "string", "format": "misskey:id" },
                  "channelId": {
                    "type": ["string", "null"],
                    "format": "misskey:id"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/Note"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "notes___featured",
        "summary": "notes/featured",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/notes/featured.ts"
        },
        "tags": ["notes"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "untilId": { "type": "string", "format": "misskey:id" },
                  "channelId": {
                    "type": ["string", "null"],
                    "format": "misskey:id"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/Note"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/notes/global-timeline": {
      "post": {
        "operationId": "notes___global-timeline",
        "summary": "notes/global-timeline",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/notes/global-timeline.ts"
        },
        "tags": ["notes"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "withFiles": { "type": "boolean", "default": false },
                  "withRenotes": { "type": "boolean", "default": true },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "sinceId": { "type": "string", "format": "misskey:id" },
                  "untilId": { "type": "string", "format": "misskey:id" },
                  "sinceDate": { "type": "integer" },
                  "untilDate": { "type": "integer" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/Note"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "GTL_DISABLED": {
                    "value": {
                      "error": {
                        "message": "Global timeline has been disabled.",
                        "code": "GTL_DISABLED",
                        "id": "0332fc13-6ab2-4427-ae80-a9fadffd1a6b"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/notes/hybrid-timeline": {
      "post": {
        "operationId": "notes___hybrid-timeline",
        "summary": "notes/hybrid-timeline",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/notes/hybrid-timeline.ts"
        },
        "tags": ["notes"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "sinceId": { "type": "string", "format": "misskey:id" },
                  "untilId": { "type": "string", "format": "misskey:id" },
                  "sinceDate": { "type": "integer" },
                  "untilDate": { "type": "integer" },
                  "allowPartial": { "type": "boolean", "default": false },
                  "includeMyRenotes": { "type": "boolean", "default": true },
                  "includeRenotedMyNotes": {
                    "type": "boolean",
                    "default": true
                  },
                  "includeLocalRenotes": { "type": "boolean", "default": true },
                  "withFiles": { "type": "boolean", "default": false },
                  "withRenotes": { "type": "boolean", "default": true },
                  "withReplies": { "type": "boolean", "default": false }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/Note"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "STL_DISABLED": {
                    "value": {
                      "error": {
                        "message": "Hybrid timeline has been disabled.",
                        "code": "STL_DISABLED",
                        "id": "620763f4-f621-4533-ab33-0577a1a3c342"
                      }
                    }
                  },
                  "BOTH_WITH_REPLIES_AND_WITH_FILES": {
                    "value": {
                      "error": {
                        "message": "Specifying both withReplies and withFiles is not supported",
                        "code": "BOTH_WITH_REPLIES_AND_WITH_FILES",
                        "id": "dfaa3eb7-8002-4cb7-bcc4-1095df46656f"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/notes/local-timeline": {
      "post": {
        "operationId": "notes___local-timeline",
        "summary": "notes/local-timeline",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/notes/local-timeline.ts"
        },
        "tags": ["notes"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "withFiles": { "type": "boolean", "default": false },
                  "withRenotes": { "type": "boolean", "default": true },
                  "withReplies": { "type": "boolean", "default": false },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "sinceId": { "type": "string", "format": "misskey:id" },
                  "untilId": { "type": "string", "format": "misskey:id" },
                  "allowPartial": { "type": "boolean", "default": false },
                  "sinceDate": { "type": "integer" },
                  "untilDate": { "type": "integer" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/Note"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "LTL_DISABLED": {
                    "value": {
                      "error": {
                        "message": "Local timeline has been disabled.",
                        "code": "LTL_DISABLED",
                        "id": "45a6eb02-7695-4393-b023-dd3be9aaaefd"
                      }
                    }
                  },
                  "BOTH_WITH_REPLIES_AND_WITH_FILES": {
                    "value": {
                      "error": {
                        "message": "Specifying both withReplies and withFiles is not supported",
                        "code": "BOTH_WITH_REPLIES_AND_WITH_FILES",
                        "id": "dd9c8400-1cb5-4eef-8a31-200c5f933793"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/notes/mentions": {
      "post": {
        "operationId": "notes___mentions",
        "summary": "notes/mentions",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/notes/mentions.ts"
        },
        "tags": ["notes"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "following": { "type": "boolean", "default": false },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "sinceId": { "type": "string", "format": "misskey:id" },
                  "untilId": { "type": "string", "format": "misskey:id" },
                  "visibility": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/Note"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/notes/polls/recommendation": {
      "post": {
        "operationId": "notes___polls___recommendation",
        "summary": "notes/polls/recommendation",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/notes/polls/recommendation.ts"
        },
        "tags": ["notes"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "offset": { "type": "integer", "default": 0 },
                  "excludeChannels": { "type": "boolean", "default": false }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/Note"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/notes/polls/vote": {
      "post": {
        "operationId": "notes___polls___vote",
        "summary": "notes/polls/vote",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:votes*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/notes/polls/vote.ts"
        },
        "tags": ["notes"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "noteId": { "type": "string", "format": "misskey:id" },
                  "choice": { "type": "integer" }
                },
                "required": ["noteId", "choice"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_NOTE": {
                    "value": {
                      "error": {
                        "message": "No such note.",
                        "code": "NO_SUCH_NOTE",
                        "id": "ecafbd2e-c283-4d6d-aecb-1a0a33b75396"
                      }
                    }
                  },
                  "NO_POLL": {
                    "value": {
                      "error": {
                        "message": "The note does not attach a poll.",
                        "code": "NO_POLL",
                        "id": "5f979967-52d9-4314-a911-1c673727f92f"
                      }
                    }
                  },
                  "INVALID_CHOICE": {
                    "value": {
                      "error": {
                        "message": "Choice ID is invalid.",
                        "code": "INVALID_CHOICE",
                        "id": "e0cc9a04-f2e8-41e4-a5f1-4127293260cc"
                      }
                    }
                  },
                  "ALREADY_VOTED": {
                    "value": {
                      "error": {
                        "message": "You have already voted.",
                        "code": "ALREADY_VOTED",
                        "id": "0963fc77-efac-419b-9424-b391608dc6d8"
                      }
                    }
                  },
                  "ALREADY_EXPIRED": {
                    "value": {
                      "error": {
                        "message": "The poll is already expired.",
                        "code": "ALREADY_EXPIRED",
                        "id": "1022a357-b085-4054-9083-8f8de358337e"
                      }
                    }
                  },
                  "YOU_HAVE_BEEN_BLOCKED": {
                    "value": {
                      "error": {
                        "message": "You cannot vote this poll because you have been blocked by this user.",
                        "code": "YOU_HAVE_BEEN_BLOCKED",
                        "id": "85a5377e-b1e9-4617-b0b9-5bea73331e49"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/notes/reactions": {
      "get": {
        "operationId": "notes___reactions",
        "summary": "notes/reactions",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/notes/reactions.ts"
        },
        "tags": ["notes"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "noteId": { "type": "string", "format": "misskey:id" },
                  "type": { "type": ["string", "null"] },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "sinceId": { "type": "string", "format": "misskey:id" },
                  "untilId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["noteId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/NoteReaction"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_NOTE": {
                    "value": {
                      "error": {
                        "message": "No such note.",
                        "code": "NO_SUCH_NOTE",
                        "id": "263fff3d-d0e1-4af4-bea7-8408059b451a"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "notes___reactions",
        "summary": "notes/reactions",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/notes/reactions.ts"
        },
        "tags": ["notes"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "noteId": { "type": "string", "format": "misskey:id" },
                  "type": { "type": ["string", "null"] },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "sinceId": { "type": "string", "format": "misskey:id" },
                  "untilId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["noteId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/NoteReaction"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_NOTE": {
                    "value": {
                      "error": {
                        "message": "No such note.",
                        "code": "NO_SUCH_NOTE",
                        "id": "263fff3d-d0e1-4af4-bea7-8408059b451a"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/notes/reactions/create": {
      "post": {
        "operationId": "notes___reactions___create",
        "summary": "notes/reactions/create",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:reactions*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/notes/reactions/create.ts"
        },
        "tags": ["reactions"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "noteId": { "type": "string", "format": "misskey:id" },
                  "reaction": { "type": "string" }
                },
                "required": ["noteId", "reaction"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_NOTE": {
                    "value": {
                      "error": {
                        "message": "No such note.",
                        "code": "NO_SUCH_NOTE",
                        "id": "033d0620-5bfe-4027-965d-980b0c85a3ea"
                      }
                    }
                  },
                  "ALREADY_REACTED": {
                    "value": {
                      "error": {
                        "message": "You are already reacting to that note.",
                        "code": "ALREADY_REACTED",
                        "id": "71efcf98-86d6-4e2b-b2ad-9d032369366b"
                      }
                    }
                  },
                  "YOU_HAVE_BEEN_BLOCKED": {
                    "value": {
                      "error": {
                        "message": "You cannot react this note because you have been blocked by this user.",
                        "code": "YOU_HAVE_BEEN_BLOCKED",
                        "id": "20ef5475-9f38-4e4c-bd33-de6d979498ec"
                      }
                    }
                  },
                  "CANNOT_REACT_TO_RENOTE": {
                    "value": {
                      "error": {
                        "message": "You cannot react to Renote.",
                        "code": "CANNOT_REACT_TO_RENOTE",
                        "id": "eaccdc08-ddef-43fe-908f-d108faad57f5"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/notes/reactions/delete": {
      "post": {
        "operationId": "notes___reactions___delete",
        "summary": "notes/reactions/delete",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:reactions*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/notes/reactions/delete.ts"
        },
        "tags": ["reactions"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "noteId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["noteId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_NOTE": {
                    "value": {
                      "error": {
                        "message": "No such note.",
                        "code": "NO_SUCH_NOTE",
                        "id": "764d9fce-f9f2-4a0e-92b1-6ceac9a7ad37"
                      }
                    }
                  },
                  "NOT_REACTED": {
                    "value": {
                      "error": {
                        "message": "You are not reacting to that note.",
                        "code": "NOT_REACTED",
                        "id": "92f4426d-4196-4125-aa5b-02943e2ec8fc"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "To many requests",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "RATE_LIMIT_EXCEEDED": {
                    "value": {
                      "error": {
                        "message": "Rate limit exceeded. Please try again later.",
                        "code": "RATE_LIMIT_EXCEEDED",
                        "id": "d5826d14-3982-4d2e-8011-b9e9f02499ef"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/notes/renotes": {
      "post": {
        "operationId": "notes___renotes",
        "summary": "notes/renotes",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/notes/renotes.ts"
        },
        "tags": ["notes"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "noteId": { "type": "string", "format": "misskey:id" },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "sinceId": { "type": "string", "format": "misskey:id" },
                  "untilId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["noteId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/Note"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_NOTE": {
                    "value": {
                      "error": {
                        "message": "No such note.",
                        "code": "NO_SUCH_NOTE",
                        "id": "12908022-2e21-46cd-ba6a-3edaf6093f46"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/notes/replies": {
      "post": {
        "operationId": "notes___replies",
        "summary": "notes/replies",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/notes/replies.ts"
        },
        "tags": ["notes"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "noteId": { "type": "string", "format": "misskey:id" },
                  "sinceId": { "type": "string", "format": "misskey:id" },
                  "untilId": { "type": "string", "format": "misskey:id" },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  }
                },
                "required": ["noteId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/Note"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/notes/search-by-tag": {
      "post": {
        "operationId": "notes___search-by-tag",
        "summary": "notes/search-by-tag",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/notes/search-by-tag.ts"
        },
        "tags": ["notes"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "reply": { "type": ["boolean", "null"], "default": null },
                  "renote": { "type": ["boolean", "null"], "default": null },
                  "withFiles": {
                    "type": "boolean",
                    "default": false,
                    "description": "Only show notes that have attached files."
                  },
                  "poll": { "type": ["boolean", "null"], "default": null },
                  "sinceId": { "type": "string", "format": "misskey:id" },
                  "untilId": { "type": "string", "format": "misskey:id" },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "tag": { "type": "string", "minLength": 1 },
                  "query": {
                    "type": "array",
                    "description": "The outer arrays are chained with OR, the inner arrays are chained with AND.",
                    "items": {
                      "type": "array",
                      "items": { "type": "string", "minLength": 1 },
                      "minItems": 1
                    },
                    "minItems": 1
                  }
                },
                "anyOf": [{ "required": ["tag"] }, { "required": ["query"] }]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/Note"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/notes/search": {
      "post": {
        "operationId": "notes___search",
        "summary": "notes/search",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/notes/search.ts"
        },
        "tags": ["notes"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "query": { "type": "string" },
                  "sinceId": { "type": "string", "format": "misskey:id" },
                  "untilId": { "type": "string", "format": "misskey:id" },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "offset": { "type": "integer", "default": 0 },
                  "host": {
                    "type": "string",
                    "description": "The local host is represented with `.`."
                  },
                  "userId": {
                    "type": ["string", "null"],
                    "format": "misskey:id",
                    "default": null
                  },
                  "channelId": {
                    "type": ["string", "null"],
                    "format": "misskey:id",
                    "default": null
                  }
                },
                "required": ["query"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/Note"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "UNAVAILABLE": {
                    "value": {
                      "error": {
                        "message": "Search of notes unavailable.",
                        "code": "UNAVAILABLE",
                        "id": "0b44998d-77aa-4427-80d0-d2c9b8523011"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/notes/show": {
      "post": {
        "operationId": "notes___show",
        "summary": "notes/show",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/notes/show.ts"
        },
        "tags": ["notes"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "noteId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["noteId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Note"
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_NOTE": {
                    "value": {
                      "error": {
                        "message": "No such note.",
                        "code": "NO_SUCH_NOTE",
                        "id": "24fcbfc6-2e37-42b6-8388-c29b3861a08d"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/notes/state": {
      "post": {
        "operationId": "notes___state",
        "summary": "notes/state",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/notes/state.ts"
        },
        "tags": ["notes"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "noteId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["noteId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "isFavorited": { "type": "boolean" },
                    "isMutedThread": { "type": "boolean" }
                  },
                  "required": ["isFavorited", "isMutedThread"]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/notes/thread-muting/create": {
      "post": {
        "operationId": "notes___thread-muting___create",
        "summary": "notes/thread-muting/create",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/notes/thread-muting/create.ts"
        },
        "tags": ["notes"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "noteId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["noteId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_NOTE": {
                    "value": {
                      "error": {
                        "message": "No such note.",
                        "code": "NO_SUCH_NOTE",
                        "id": "5ff67ada-ed3b-2e71-8e87-a1a421e177d2"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "To many requests",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "RATE_LIMIT_EXCEEDED": {
                    "value": {
                      "error": {
                        "message": "Rate limit exceeded. Please try again later.",
                        "code": "RATE_LIMIT_EXCEEDED",
                        "id": "d5826d14-3982-4d2e-8011-b9e9f02499ef"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/notes/thread-muting/delete": {
      "post": {
        "operationId": "notes___thread-muting___delete",
        "summary": "notes/thread-muting/delete",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/notes/thread-muting/delete.ts"
        },
        "tags": ["notes"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "noteId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["noteId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_NOTE": {
                    "value": {
                      "error": {
                        "message": "No such note.",
                        "code": "NO_SUCH_NOTE",
                        "id": "bddd57ac-ceb3-b29d-4334-86ea5fae481a"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/notes/timeline": {
      "post": {
        "operationId": "notes___timeline",
        "summary": "notes/timeline",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/notes/timeline.ts"
        },
        "tags": ["notes"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "sinceId": { "type": "string", "format": "misskey:id" },
                  "untilId": { "type": "string", "format": "misskey:id" },
                  "sinceDate": { "type": "integer" },
                  "untilDate": { "type": "integer" },
                  "allowPartial": { "type": "boolean", "default": false },
                  "includeMyRenotes": { "type": "boolean", "default": true },
                  "includeRenotedMyNotes": {
                    "type": "boolean",
                    "default": true
                  },
                  "includeLocalRenotes": { "type": "boolean", "default": true },
                  "withFiles": { "type": "boolean", "default": false },
                  "withRenotes": { "type": "boolean", "default": true }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/Note"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/notes/translate": {
      "post": {
        "operationId": "notes___translate",
        "summary": "notes/translate",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/notes/translate.ts"
        },
        "tags": ["notes"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "noteId": { "type": "string", "format": "misskey:id" },
                  "targetLang": { "type": "string" }
                },
                "required": ["noteId", "targetLang"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "sourceLang": { "type": "string" },
                    "text": { "type": "string" }
                  },
                  "required": ["sourceLang", "text"]
                }
              }
            }
          },
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "UNAVAILABLE": {
                    "value": {
                      "error": {
                        "message": "Translate of notes unavailable.",
                        "code": "UNAVAILABLE",
                        "id": "50a70314-2d8a-431b-b433-efa5cc56444c"
                      }
                    }
                  },
                  "NO_SUCH_NOTE": {
                    "value": {
                      "error": {
                        "message": "No such note.",
                        "code": "NO_SUCH_NOTE",
                        "id": "bea9b03f-36e0-49c5-a4db-627a029f8971"
                      }
                    }
                  },
                  "CANNOT_TRANSLATE_INVISIBLE_NOTE": {
                    "value": {
                      "error": {
                        "message": "Cannot translate invisible note.",
                        "code": "CANNOT_TRANSLATE_INVISIBLE_NOTE",
                        "id": "ea29f2ca-c368-43b3-aaf1-5ac3e74bbe5d"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/notes/unrenote": {
      "post": {
        "operationId": "notes___unrenote",
        "summary": "notes/unrenote",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:notes*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/notes/unrenote.ts"
        },
        "tags": ["notes"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "noteId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["noteId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_NOTE": {
                    "value": {
                      "error": {
                        "message": "No such note.",
                        "code": "NO_SUCH_NOTE",
                        "id": "efd4a259-2442-496b-8dd7-b255aa1a160f"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "To many requests",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "RATE_LIMIT_EXCEEDED": {
                    "value": {
                      "error": {
                        "message": "Rate limit exceeded. Please try again later.",
                        "code": "RATE_LIMIT_EXCEEDED",
                        "id": "d5826d14-3982-4d2e-8011-b9e9f02499ef"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/notes/user-list-timeline": {
      "post": {
        "operationId": "notes___user-list-timeline",
        "summary": "notes/user-list-timeline",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/notes/user-list-timeline.ts"
        },
        "tags": ["notes"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "listId": { "type": "string", "format": "misskey:id" },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "sinceId": { "type": "string", "format": "misskey:id" },
                  "untilId": { "type": "string", "format": "misskey:id" },
                  "sinceDate": { "type": "integer" },
                  "untilDate": { "type": "integer" },
                  "allowPartial": { "type": "boolean", "default": false },
                  "includeMyRenotes": { "type": "boolean", "default": true },
                  "includeRenotedMyNotes": {
                    "type": "boolean",
                    "default": true
                  },
                  "includeLocalRenotes": { "type": "boolean", "default": true },
                  "withRenotes": { "type": "boolean", "default": true },
                  "withFiles": {
                    "type": "boolean",
                    "default": false,
                    "description": "Only show notes that have attached files."
                  }
                },
                "required": ["listId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/Note"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_LIST": {
                    "value": {
                      "error": {
                        "message": "No such list.",
                        "code": "NO_SUCH_LIST",
                        "id": "8fb1fbd5-e476-4c37-9fb0-43d55b63a2ff"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/notifications/create": {
      "post": {
        "operationId": "notifications___create",
        "summary": "notifications/create",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:notifications*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/notifications/create.ts"
        },
        "tags": ["notifications"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": { "type": "string" },
                  "header": { "type": ["string", "null"] },
                  "icon": { "type": ["string", "null"] }
                },
                "required": ["body"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "To many requests",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "RATE_LIMIT_EXCEEDED": {
                    "value": {
                      "error": {
                        "message": "Rate limit exceeded. Please try again later.",
                        "code": "RATE_LIMIT_EXCEEDED",
                        "id": "d5826d14-3982-4d2e-8011-b9e9f02499ef"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/notifications/flush": {
      "post": {
        "operationId": "notifications___flush",
        "summary": "notifications/flush",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:notifications*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/notifications/flush.ts"
        },
        "tags": ["notifications"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/notifications/mark-all-as-read": {
      "post": {
        "operationId": "notifications___mark-all-as-read",
        "summary": "notifications/mark-all-as-read",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:notifications*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/notifications/mark-all-as-read.ts"
        },
        "tags": ["notifications"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/notifications/test-notification": {
      "post": {
        "operationId": "notifications___test-notification",
        "summary": "notifications/test-notification",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:notifications*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/notifications/test-notification.ts"
        },
        "tags": ["notifications"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "To many requests",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "RATE_LIMIT_EXCEEDED": {
                    "value": {
                      "error": {
                        "message": "Rate limit exceeded. Please try again later.",
                        "code": "RATE_LIMIT_EXCEEDED",
                        "id": "d5826d14-3982-4d2e-8011-b9e9f02499ef"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/page-push": {
      "post": {
        "operationId": "page-push",
        "summary": "page-push",
        "description": "No description provided.\n\n**Internal Endpoint**: This endpoint is an API for the misskey mainframe and is not intended for use by third parties.\n**Credential required**: *Yes*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/page-push.ts"
        },
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageId": { "type": "string", "format": "misskey:id" },
                  "event": { "type": "string" },
                  "var": {}
                },
                "required": ["pageId", "event"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_PAGE": {
                    "value": {
                      "error": {
                        "message": "No such page.",
                        "code": "NO_SUCH_PAGE",
                        "id": "4a13ad31-6729-46b4-b9af-e86b265c2e74"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/pages/create": {
      "post": {
        "operationId": "pages___create",
        "summary": "pages/create",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:pages*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/pages/create.ts"
        },
        "tags": ["pages"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "name": { "type": "string", "minLength": 1 },
                  "summary": { "type": ["string", "null"] },
                  "content": {
                    "type": "array",
                    "items": { "type": "object", "additionalProperties": true }
                  },
                  "variables": {
                    "type": "array",
                    "items": { "type": "object", "additionalProperties": true }
                  },
                  "script": { "type": "string" },
                  "eyeCatchingImageId": {
                    "type": ["string", "null"],
                    "format": "misskey:id"
                  },
                  "font": {
                    "type": "string",
                    "enum": ["serif", "sans-serif"],
                    "default": "sans-serif"
                  },
                  "alignCenter": { "type": "boolean", "default": false },
                  "hideTitleWhenPinned": { "type": "boolean", "default": false }
                },
                "required": ["title", "name", "content", "variables", "script"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Page"
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_FILE": {
                    "value": {
                      "error": {
                        "message": "No such file.",
                        "code": "NO_SUCH_FILE",
                        "id": "b7b97489-0f66-4b12-a5ff-b21bd63f6e1c"
                      }
                    }
                  },
                  "NAME_ALREADY_EXISTS": {
                    "value": {
                      "error": {
                        "message": "Specified name already exists.",
                        "code": "NAME_ALREADY_EXISTS",
                        "id": "4650348e-301c-499a-83c9-6aa988c66bc1"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "To many requests",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "RATE_LIMIT_EXCEEDED": {
                    "value": {
                      "error": {
                        "message": "Rate limit exceeded. Please try again later.",
                        "code": "RATE_LIMIT_EXCEEDED",
                        "id": "d5826d14-3982-4d2e-8011-b9e9f02499ef"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/pages/delete": {
      "post": {
        "operationId": "pages___delete",
        "summary": "pages/delete",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:pages*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/pages/delete.ts"
        },
        "tags": ["pages"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["pageId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_PAGE": {
                    "value": {
                      "error": {
                        "message": "No such page.",
                        "code": "NO_SUCH_PAGE",
                        "id": "eb0c6e1d-d519-4764-9486-52a7e1c6392a"
                      }
                    }
                  },
                  "ACCESS_DENIED": {
                    "value": {
                      "error": {
                        "message": "Access denied.",
                        "code": "ACCESS_DENIED",
                        "id": "8b741b3e-2c22-44b3-a15f-29949aa1601e"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/pages/featured": {
      "post": {
        "operationId": "pages___featured",
        "summary": "pages/featured",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/pages/featured.ts"
        },
        "tags": ["pages"],
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/Page"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/pages/like": {
      "post": {
        "operationId": "pages___like",
        "summary": "pages/like",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:page-likes*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/pages/like.ts"
        },
        "tags": ["pages"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["pageId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_PAGE": {
                    "value": {
                      "error": {
                        "message": "No such page.",
                        "code": "NO_SUCH_PAGE",
                        "id": "cc98a8a2-0dc3-4123-b198-62c71df18ed3"
                      }
                    }
                  },
                  "YOUR_PAGE": {
                    "value": {
                      "error": {
                        "message": "You cannot like your page.",
                        "code": "YOUR_PAGE",
                        "id": "28800466-e6db-40f2-8fae-bf9e82aa92b8"
                      }
                    }
                  },
                  "ALREADY_LIKED": {
                    "value": {
                      "error": {
                        "message": "The page has already been liked.",
                        "code": "ALREADY_LIKED",
                        "id": "d4c1edbe-7da2-4eae-8714-1acfd2d63941"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/pages/show": {
      "post": {
        "operationId": "pages___show",
        "summary": "pages/show",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/pages/show.ts"
        },
        "tags": ["pages"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageId": { "type": "string", "format": "misskey:id" },
                  "name": { "type": "string" },
                  "username": { "type": "string" }
                },
                "anyOf": [
                  { "required": ["pageId"] },
                  { "required": ["name", "username"] }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Page"
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_PAGE": {
                    "value": {
                      "error": {
                        "message": "No such page.",
                        "code": "NO_SUCH_PAGE",
                        "id": "222120c0-3ead-4528-811b-b96f233388d7"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/pages/unlike": {
      "post": {
        "operationId": "pages___unlike",
        "summary": "pages/unlike",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:page-likes*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/pages/unlike.ts"
        },
        "tags": ["pages"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["pageId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_PAGE": {
                    "value": {
                      "error": {
                        "message": "No such page.",
                        "code": "NO_SUCH_PAGE",
                        "id": "a0d41e20-1993-40bd-890e-f6e560ae648e"
                      }
                    }
                  },
                  "NOT_LIKED": {
                    "value": {
                      "error": {
                        "message": "You have not liked that page.",
                        "code": "NOT_LIKED",
                        "id": "f5e586b0-ce93-4050-b0e3-7f31af5259ee"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/pages/update": {
      "post": {
        "operationId": "pages___update",
        "summary": "pages/update",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:pages*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/pages/update.ts"
        },
        "tags": ["pages"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageId": { "type": "string", "format": "misskey:id" },
                  "title": { "type": "string" },
                  "name": { "type": "string", "minLength": 1 },
                  "summary": { "type": ["string", "null"] },
                  "content": {
                    "type": "array",
                    "items": { "type": "object", "additionalProperties": true }
                  },
                  "variables": {
                    "type": "array",
                    "items": { "type": "object", "additionalProperties": true }
                  },
                  "script": { "type": "string" },
                  "eyeCatchingImageId": {
                    "type": ["string", "null"],
                    "format": "misskey:id"
                  },
                  "font": { "type": "string", "enum": ["serif", "sans-serif"] },
                  "alignCenter": { "type": "boolean" },
                  "hideTitleWhenPinned": { "type": "boolean" }
                },
                "required": ["pageId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_PAGE": {
                    "value": {
                      "error": {
                        "message": "No such page.",
                        "code": "NO_SUCH_PAGE",
                        "id": "21149b9e-3616-4778-9592-c4ce89f5a864"
                      }
                    }
                  },
                  "ACCESS_DENIED": {
                    "value": {
                      "error": {
                        "message": "Access denied.",
                        "code": "ACCESS_DENIED",
                        "id": "3c15cd52-3b4b-4274-967d-6456fc4f792b"
                      }
                    }
                  },
                  "NO_SUCH_FILE": {
                    "value": {
                      "error": {
                        "message": "No such file.",
                        "code": "NO_SUCH_FILE",
                        "id": "cfc23c7c-3887-490e-af30-0ed576703c82"
                      }
                    }
                  },
                  "NAME_ALREADY_EXISTS": {
                    "value": {
                      "error": {
                        "message": "Specified name already exists.",
                        "code": "NAME_ALREADY_EXISTS",
                        "id": "2298a392-d4a1-44c5-9ebb-ac1aeaa5a9ab"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "To many requests",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "RATE_LIMIT_EXCEEDED": {
                    "value": {
                      "error": {
                        "message": "Rate limit exceeded. Please try again later.",
                        "code": "RATE_LIMIT_EXCEEDED",
                        "id": "d5826d14-3982-4d2e-8011-b9e9f02499ef"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/flash/create": {
      "post": {
        "operationId": "flash___create",
        "summary": "flash/create",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:flash*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/flash/create.ts"
        },
        "tags": ["flash"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "summary": { "type": "string" },
                  "script": { "type": "string" },
                  "permissions": {
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "visibility": {
                    "type": "string",
                    "enum": ["public", "private"],
                    "default": "public"
                  }
                },
                "required": ["title", "summary", "script", "permissions"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Flash"
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "To many requests",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "RATE_LIMIT_EXCEEDED": {
                    "value": {
                      "error": {
                        "message": "Rate limit exceeded. Please try again later.",
                        "code": "RATE_LIMIT_EXCEEDED",
                        "id": "d5826d14-3982-4d2e-8011-b9e9f02499ef"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/flash/delete": {
      "post": {
        "operationId": "flash___delete",
        "summary": "flash/delete",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:flash*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/flash/delete.ts"
        },
        "tags": ["flashs"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "flashId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["flashId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_FLASH": {
                    "value": {
                      "error": {
                        "message": "No such flash.",
                        "code": "NO_SUCH_FLASH",
                        "id": "de1623ef-bbb3-4289-a71e-14cfa83d9740"
                      }
                    }
                  },
                  "ACCESS_DENIED": {
                    "value": {
                      "error": {
                        "message": "Access denied.",
                        "code": "ACCESS_DENIED",
                        "id": "1036ad7b-9f92-4fff-89c3-0e50dc941704"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/flash/featured": {
      "post": {
        "operationId": "flash___featured",
        "summary": "flash/featured",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/flash/featured.ts"
        },
        "tags": ["flash"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "offset": { "type": "integer", "minimum": 0, "default": 0 },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/Flash"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/flash/like": {
      "post": {
        "operationId": "flash___like",
        "summary": "flash/like",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:flash-likes*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/flash/like.ts"
        },
        "tags": ["flash"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "flashId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["flashId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_FLASH": {
                    "value": {
                      "error": {
                        "message": "No such flash.",
                        "code": "NO_SUCH_FLASH",
                        "id": "c07c1491-9161-4c5c-9d75-01906f911f73"
                      }
                    }
                  },
                  "YOUR_FLASH": {
                    "value": {
                      "error": {
                        "message": "You cannot like your flash.",
                        "code": "YOUR_FLASH",
                        "id": "3fd8a0e7-5955-4ba9-85bb-bf3e0c30e13b"
                      }
                    }
                  },
                  "ALREADY_LIKED": {
                    "value": {
                      "error": {
                        "message": "The flash has already been liked.",
                        "code": "ALREADY_LIKED",
                        "id": "010065cf-ad43-40df-8067-abff9f4686e3"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/flash/show": {
      "post": {
        "operationId": "flash___show",
        "summary": "flash/show",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/flash/show.ts"
        },
        "tags": ["flashs"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "flashId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["flashId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Flash"
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_FLASH": {
                    "value": {
                      "error": {
                        "message": "No such flash.",
                        "code": "NO_SUCH_FLASH",
                        "id": "f0d34a1a-d29a-401d-90ba-1982122b5630"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/flash/unlike": {
      "post": {
        "operationId": "flash___unlike",
        "summary": "flash/unlike",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:flash-likes*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/flash/unlike.ts"
        },
        "tags": ["flash"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "flashId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["flashId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_FLASH": {
                    "value": {
                      "error": {
                        "message": "No such flash.",
                        "code": "NO_SUCH_FLASH",
                        "id": "afe8424a-a69e-432d-a5f2-2f0740c62410"
                      }
                    }
                  },
                  "NOT_LIKED": {
                    "value": {
                      "error": {
                        "message": "You have not liked that flash.",
                        "code": "NOT_LIKED",
                        "id": "755f25a7-9871-4f65-9f34-51eaad9ae0ac"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/flash/update": {
      "post": {
        "operationId": "flash___update",
        "summary": "flash/update",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:flash*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/flash/update.ts"
        },
        "tags": ["flash"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "flashId": { "type": "string", "format": "misskey:id" },
                  "title": { "type": "string" },
                  "summary": { "type": "string" },
                  "script": { "type": "string" },
                  "permissions": {
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "visibility": {
                    "type": "string",
                    "enum": ["public", "private"]
                  }
                },
                "required": ["flashId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_FLASH": {
                    "value": {
                      "error": {
                        "message": "No such flash.",
                        "code": "NO_SUCH_FLASH",
                        "id": "611e13d2-309e-419a-a5e4-e0422da39b02"
                      }
                    }
                  },
                  "ACCESS_DENIED": {
                    "value": {
                      "error": {
                        "message": "Access denied.",
                        "code": "ACCESS_DENIED",
                        "id": "08e60c88-5948-478e-a132-02ec701d67b2"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "To many requests",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "RATE_LIMIT_EXCEEDED": {
                    "value": {
                      "error": {
                        "message": "Rate limit exceeded. Please try again later.",
                        "code": "RATE_LIMIT_EXCEEDED",
                        "id": "d5826d14-3982-4d2e-8011-b9e9f02499ef"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/flash/my": {
      "post": {
        "operationId": "flash___my",
        "summary": "flash/my",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:flash*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/flash/my.ts"
        },
        "tags": ["account"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "sinceId": { "type": "string", "format": "misskey:id" },
                  "untilId": { "type": "string", "format": "misskey:id" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/Flash"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/flash/my-likes": {
      "post": {
        "operationId": "flash___my-likes",
        "summary": "flash/my-likes",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:flash-likes*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/flash/my-likes.ts"
        },
        "tags": ["account"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "sinceId": { "type": "string", "format": "misskey:id" },
                  "untilId": { "type": "string", "format": "misskey:id" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "string", "format": "id" },
                      "flash": {
                        "type": "object",
                        "$ref": "#/components/schemas/Flash"
                      }
                    },
                    "required": ["id", "flash"]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/ping": {
      "post": {
        "operationId": "ping",
        "summary": "ping",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/ping.ts"
        },
        "tags": ["meta"],
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "pong": { "type": "number" } },
                  "required": ["pong"]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/pinned-users": {
      "post": {
        "operationId": "pinned-users",
        "summary": "pinned-users",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/pinned-users.ts"
        },
        "tags": ["users"],
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/UserDetailed"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/promo/read": {
      "post": {
        "operationId": "promo___read",
        "summary": "promo/read",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/promo/read.ts"
        },
        "tags": ["notes"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "noteId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["noteId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_NOTE": {
                    "value": {
                      "error": {
                        "message": "No such note.",
                        "code": "NO_SUCH_NOTE",
                        "id": "d785b897-fcd3-4fe9-8fc3-b85c26e6c932"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/roles/list": {
      "post": {
        "operationId": "roles___list",
        "summary": "roles/list",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/roles/list.ts"
        },
        "tags": ["role"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/Role"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/roles/show": {
      "post": {
        "operationId": "roles___show",
        "summary": "roles/show",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/roles/show.ts"
        },
        "tags": ["role"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "roleId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["roleId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_ROLE": {
                    "value": {
                      "error": {
                        "message": "No such role.",
                        "code": "NO_SUCH_ROLE",
                        "id": "de5502bf-009a-4639-86c1-fec349e46dcb"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/roles/users": {
      "post": {
        "operationId": "roles___users",
        "summary": "roles/users",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/roles/users.ts"
        },
        "tags": ["role"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "roleId": { "type": "string", "format": "misskey:id" },
                  "sinceId": { "type": "string", "format": "misskey:id" },
                  "untilId": { "type": "string", "format": "misskey:id" },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  }
                },
                "required": ["roleId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "string", "format": "misskey:id" },
                      "user": {
                        "type": "object",
                        "$ref": "#/components/schemas/UserDetailed"
                      }
                    },
                    "required": ["id", "user"]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_ROLE": {
                    "value": {
                      "error": {
                        "message": "No such role.",
                        "code": "NO_SUCH_ROLE",
                        "id": "30aaaee3-4792-48dc-ab0d-cf501a575ac5"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/roles/notes": {
      "post": {
        "operationId": "roles___notes",
        "summary": "roles/notes",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/roles/notes.ts"
        },
        "tags": ["role"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "roleId": { "type": "string", "format": "misskey:id" },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "sinceId": { "type": "string", "format": "misskey:id" },
                  "untilId": { "type": "string", "format": "misskey:id" },
                  "sinceDate": { "type": "integer" },
                  "untilDate": { "type": "integer" }
                },
                "required": ["roleId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/Note"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_ROLE": {
                    "value": {
                      "error": {
                        "message": "No such role.",
                        "code": "NO_SUCH_ROLE",
                        "id": "eb70323a-df61-4dd4-ad90-89c83c7cf26e"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/request-reset-password": {
      "post": {
        "operationId": "request-reset-password",
        "summary": "request-reset-password",
        "description": "Request a users password to be reset.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/request-reset-password.ts"
        },
        "tags": ["reset password"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": { "type": "string" },
                  "email": { "type": "string" }
                },
                "required": ["username", "email"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "To many requests",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "RATE_LIMIT_EXCEEDED": {
                    "value": {
                      "error": {
                        "message": "Rate limit exceeded. Please try again later.",
                        "code": "RATE_LIMIT_EXCEEDED",
                        "id": "d5826d14-3982-4d2e-8011-b9e9f02499ef"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reset-db": {
      "post": {
        "operationId": "reset-db",
        "summary": "reset-db",
        "description": "Only available when running with <code>NODE_ENV=testing</code>. Reset the database and flush Redis.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/reset-db.ts"
        },
        "tags": ["non-productive"],
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reset-password": {
      "post": {
        "operationId": "reset-password",
        "summary": "reset-password",
        "description": "Complete the password reset that was previously requested.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/reset-password.ts"
        },
        "tags": ["reset password"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": { "type": "string" },
                  "password": { "type": "string" }
                },
                "required": ["token", "password"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/server-info": {
      "get": {
        "operationId": "server-info",
        "summary": "server-info",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/server-info.ts"
        },
        "tags": ["meta"],
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "machine": { "type": "string" },
                    "cpu": {
                      "type": "object",
                      "properties": {
                        "model": { "type": "string" },
                        "cores": { "type": "number" }
                      },
                      "required": ["model", "cores"]
                    },
                    "mem": {
                      "type": "object",
                      "properties": { "total": { "type": "number" } },
                      "required": ["total"]
                    },
                    "fs": {
                      "type": "object",
                      "properties": {
                        "total": { "type": "number" },
                        "used": { "type": "number" }
                      },
                      "required": ["total", "used"]
                    }
                  },
                  "required": ["machine", "cpu", "mem", "fs"]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "server-info",
        "summary": "server-info",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/server-info.ts"
        },
        "tags": ["meta"],
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "machine": { "type": "string" },
                    "cpu": {
                      "type": "object",
                      "properties": {
                        "model": { "type": "string" },
                        "cores": { "type": "number" }
                      },
                      "required": ["model", "cores"]
                    },
                    "mem": {
                      "type": "object",
                      "properties": { "total": { "type": "number" } },
                      "required": ["total"]
                    },
                    "fs": {
                      "type": "object",
                      "properties": {
                        "total": { "type": "number" },
                        "used": { "type": "number" }
                      },
                      "required": ["total", "used"]
                    }
                  },
                  "required": ["machine", "cpu", "mem", "fs"]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/stats": {
      "post": {
        "operationId": "stats",
        "summary": "stats",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/stats.ts"
        },
        "tags": ["meta"],
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "notesCount": { "type": "number" },
                    "originalNotesCount": { "type": "number" },
                    "usersCount": { "type": "number" },
                    "originalUsersCount": { "type": "number" },
                    "instances": { "type": "number" },
                    "driveUsageLocal": { "type": "number" },
                    "driveUsageRemote": { "type": "number" }
                  },
                  "required": [
                    "notesCount",
                    "originalNotesCount",
                    "usersCount",
                    "originalUsersCount",
                    "instances",
                    "driveUsageLocal",
                    "driveUsageRemote"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sw/show-registration": {
      "post": {
        "operationId": "sw___show-registration",
        "summary": "sw/show-registration",
        "description": "Check push notification registration exists.\n\n**Internal Endpoint**: This endpoint is an API for the misskey mainframe and is not intended for use by third parties.\n**Credential required**: *Yes*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/sw/show-registration.ts"
        },
        "tags": ["account"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": { "endpoint": { "type": "string" } },
                "required": ["endpoint"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": ["object", "null"],
                  "properties": {
                    "userId": { "type": "string" },
                    "endpoint": { "type": "string" },
                    "sendReadMessage": { "type": "boolean" }
                  },
                  "required": ["userId", "endpoint", "sendReadMessage"]
                }
              }
            }
          },
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sw/update-registration": {
      "post": {
        "operationId": "sw___update-registration",
        "summary": "sw/update-registration",
        "description": "Update push notification registration.\n\n**Internal Endpoint**: This endpoint is an API for the misskey mainframe and is not intended for use by third parties.\n**Credential required**: *Yes*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/sw/update-registration.ts"
        },
        "tags": ["account"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "endpoint": { "type": "string" },
                  "sendReadMessage": { "type": "boolean" }
                },
                "required": ["endpoint"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "userId": { "type": "string" },
                    "endpoint": { "type": "string" },
                    "sendReadMessage": { "type": "boolean" }
                  },
                  "required": ["userId", "endpoint", "sendReadMessage"]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_REGISTRATION": {
                    "value": {
                      "error": {
                        "message": "No such registration.",
                        "code": "NO_SUCH_REGISTRATION",
                        "id": " b09d8066-8064-5613-efb6-0e963b21d012"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sw/register": {
      "post": {
        "operationId": "sw___register",
        "summary": "sw/register",
        "description": "Register to receive push notifications.\n\n**Internal Endpoint**: This endpoint is an API for the misskey mainframe and is not intended for use by third parties.\n**Credential required**: *Yes*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/sw/register.ts"
        },
        "tags": ["account"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "endpoint": { "type": "string" },
                  "auth": { "type": "string" },
                  "publickey": { "type": "string" },
                  "sendReadMessage": { "type": "boolean", "default": false }
                },
                "required": ["endpoint", "auth", "publickey"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "state": {
                      "type": "string",
                      "enum": ["already-subscribed", "subscribed"]
                    },
                    "key": { "type": ["string", "null"] },
                    "userId": { "type": "string" },
                    "endpoint": { "type": "string" },
                    "sendReadMessage": { "type": "boolean" }
                  },
                  "required": ["key", "userId", "endpoint", "sendReadMessage"]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sw/unregister": {
      "post": {
        "operationId": "sw___unregister",
        "summary": "sw/unregister",
        "description": "Unregister from receiving push notifications.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/sw/unregister.ts"
        },
        "tags": ["account"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": { "endpoint": { "type": "string" } },
                "required": ["endpoint"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/test": {
      "post": {
        "operationId": "test",
        "summary": "test",
        "description": "Endpoint for testing input validation.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/test.ts"
        },
        "tags": ["non-productive"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "required": { "type": "boolean" },
                  "string": { "type": "string" },
                  "default": { "type": "string", "default": "hello" },
                  "nullableDefault": {
                    "type": ["string", "null"],
                    "default": "hello"
                  },
                  "id": { "type": "string", "format": "misskey:id" }
                },
                "required": ["required"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string", "format": "misskey:id" },
                    "required": { "type": "boolean" },
                    "string": { "type": "string" },
                    "default": { "type": "string" },
                    "nullableDefault": {
                      "type": ["string", "null"],
                      "default": "hello"
                    }
                  },
                  "required": ["required"]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/username/available": {
      "post": {
        "operationId": "username___available",
        "summary": "username/available",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/username/available.ts"
        },
        "tags": ["users"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": { "type": "string", "pattern": "^\\w{1,20}$" }
                },
                "required": ["username"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "available": { "type": "boolean" } },
                  "required": ["available"]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "post": {
        "operationId": "users",
        "summary": "users",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/users.ts"
        },
        "tags": ["users"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "offset": { "type": "integer", "default": 0 },
                  "sort": {
                    "type": "string",
                    "enum": [
                      "+follower",
                      "-follower",
                      "+createdAt",
                      "-createdAt",
                      "+updatedAt",
                      "-updatedAt"
                    ]
                  },
                  "state": {
                    "type": "string",
                    "enum": ["all", "alive"],
                    "default": "all"
                  },
                  "origin": {
                    "type": "string",
                    "enum": ["combined", "local", "remote"],
                    "default": "local"
                  },
                  "hostname": {
                    "type": ["string", "null"],
                    "default": null,
                    "description": "The local host is represented with `null`."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/UserDetailed"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/clips": {
      "post": {
        "operationId": "users___clips",
        "summary": "users/clips",
        "description": "Show all clips this user owns.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/users/clips.ts"
        },
        "tags": ["users"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": { "type": "string", "format": "misskey:id" },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "sinceId": { "type": "string", "format": "misskey:id" },
                  "untilId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["userId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/Clip"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/followers": {
      "post": {
        "operationId": "users___followers",
        "summary": "users/followers",
        "description": "Show everyone that follows this user.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/users/followers.ts"
        },
        "tags": ["users"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "sinceId": { "type": "string", "format": "misskey:id" },
                  "untilId": { "type": "string", "format": "misskey:id" },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "userId": { "type": "string", "format": "misskey:id" },
                  "username": { "type": "string" },
                  "host": {
                    "type": ["string", "null"],
                    "description": "The local host is represented with `null`."
                  }
                },
                "anyOf": [
                  { "required": ["userId"] },
                  { "required": ["username", "host"] }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/Following"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_USER": {
                    "value": {
                      "error": {
                        "message": "No such user.",
                        "code": "NO_SUCH_USER",
                        "id": "27fa5435-88ab-43de-9360-387de88727cd"
                      }
                    }
                  },
                  "FORBIDDEN": {
                    "value": {
                      "error": {
                        "message": "Forbidden.",
                        "code": "FORBIDDEN",
                        "id": "3c6a84db-d619-26af-ca14-06232a21df8a"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/following": {
      "post": {
        "operationId": "users___following",
        "summary": "users/following",
        "description": "Show everyone that this user is following.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/users/following.ts"
        },
        "tags": ["users"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "sinceId": { "type": "string", "format": "misskey:id" },
                  "untilId": { "type": "string", "format": "misskey:id" },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "userId": { "type": "string", "format": "misskey:id" },
                  "username": { "type": "string" },
                  "host": {
                    "type": ["string", "null"],
                    "description": "The local host is represented with `null`."
                  },
                  "birthday": {
                    "type": ["string", "null"],
                    "pattern": "^([0-9]{4})-([0-9]{2})-([0-9]{2})$"
                  }
                },
                "anyOf": [
                  { "required": ["userId"] },
                  { "required": ["username", "host"] }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/Following"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_USER": {
                    "value": {
                      "error": {
                        "message": "No such user.",
                        "code": "NO_SUCH_USER",
                        "id": "63e4aba4-4156-4e53-be25-c9559e42d71b"
                      }
                    }
                  },
                  "FORBIDDEN": {
                    "value": {
                      "error": {
                        "message": "Forbidden.",
                        "code": "FORBIDDEN",
                        "id": "f6cdb0df-c19f-ec5c-7dbb-0ba84a1f92ba"
                      }
                    }
                  },
                  "BIRTHDAY_DATE_FORMAT_INVALID": {
                    "value": {
                      "error": {
                        "message": "Birthday date format is invalid.",
                        "code": "BIRTHDAY_DATE_FORMAT_INVALID",
                        "id": "a2b007b9-4782-4eba-abd3-93b05ed4130d"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/gallery/posts": {
      "post": {
        "operationId": "users___gallery___posts",
        "summary": "users/gallery/posts",
        "description": "Show all gallery posts by the given user.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/users/gallery/posts.ts"
        },
        "tags": ["users"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": { "type": "string", "format": "misskey:id" },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "sinceId": { "type": "string", "format": "misskey:id" },
                  "untilId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["userId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/GalleryPost"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/get-frequently-replied-users": {
      "post": {
        "operationId": "users___get-frequently-replied-users",
        "summary": "users/get-frequently-replied-users",
        "description": "Get a list of other users that the specified user frequently replies to.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/users/get-frequently-replied-users.ts"
        },
        "tags": ["users"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": { "type": "string", "format": "misskey:id" },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  }
                },
                "required": ["userId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "user": {
                        "type": "object",
                        "$ref": "#/components/schemas/UserDetailed"
                      },
                      "weight": { "type": "number" }
                    },
                    "required": ["user", "weight"]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_USER": {
                    "value": {
                      "error": {
                        "message": "No such user.",
                        "code": "NO_SUCH_USER",
                        "id": "e6965129-7b2a-40a4-bae2-cd84cd434822"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/featured-notes": {
      "get": {
        "operationId": "users___featured-notes",
        "summary": "users/featured-notes",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/users/featured-notes.ts"
        },
        "tags": ["notes"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "untilId": { "type": "string", "format": "misskey:id" },
                  "userId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["userId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/Note"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "users___featured-notes",
        "summary": "users/featured-notes",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/users/featured-notes.ts"
        },
        "tags": ["notes"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "untilId": { "type": "string", "format": "misskey:id" },
                  "userId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["userId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/Note"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/lists/create": {
      "post": {
        "operationId": "users___lists___create",
        "summary": "users/lists/create",
        "description": "Create a new list of users.\n\n**Credential required**: *Yes* / **Permission**: *write:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/users/lists/create.ts"
        },
        "tags": ["lists"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string", "minLength": 1, "maxLength": 100 }
                },
                "required": ["name"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/UserList"
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "TOO_MANY_USERLISTS": {
                    "value": {
                      "error": {
                        "message": "You cannot create user list any more.",
                        "code": "TOO_MANY_USERLISTS",
                        "id": "0cf21a28-7715-4f39-a20d-777bfdb8d138"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/lists/delete": {
      "post": {
        "operationId": "users___lists___delete",
        "summary": "users/lists/delete",
        "description": "Delete an existing list of users.\n\n**Credential required**: *Yes* / **Permission**: *write:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/users/lists/delete.ts"
        },
        "tags": ["lists"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "listId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["listId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_LIST": {
                    "value": {
                      "error": {
                        "message": "No such list.",
                        "code": "NO_SUCH_LIST",
                        "id": "78436795-db79-42f5-b1e2-55ea2cf19166"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/lists/list": {
      "post": {
        "operationId": "users___lists___list",
        "summary": "users/lists/list",
        "description": "Show all lists that the authenticated user has created.\n\n**Credential required**: *No* / **Permission**: *read:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/users/lists/list.ts"
        },
        "tags": ["lists"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": { "type": "string", "format": "misskey:id" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/UserList"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_USER": {
                    "value": {
                      "error": {
                        "message": "No such user.",
                        "code": "NO_SUCH_USER",
                        "id": "a8af4a82-0980-4cc4-a6af-8b0ffd54465e"
                      }
                    }
                  },
                  "REMOTE_USER_NOT_ALLOWED": {
                    "value": {
                      "error": {
                        "message": "Not allowed to load the remote user's list",
                        "code": "REMOTE_USER_NOT_ALLOWED",
                        "id": "53858f1b-3315-4a01-81b7-db9b48d4b79a"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/lists/pull": {
      "post": {
        "operationId": "users___lists___pull",
        "summary": "users/lists/pull",
        "description": "Remove a user from a list.\n\n**Credential required**: *Yes* / **Permission**: *write:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/users/lists/pull.ts"
        },
        "tags": ["lists"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "listId": { "type": "string", "format": "misskey:id" },
                  "userId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["listId", "userId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_LIST": {
                    "value": {
                      "error": {
                        "message": "No such list.",
                        "code": "NO_SUCH_LIST",
                        "id": "7f44670e-ab16-43b8-b4c1-ccd2ee89cc02"
                      }
                    }
                  },
                  "NO_SUCH_USER": {
                    "value": {
                      "error": {
                        "message": "No such user.",
                        "code": "NO_SUCH_USER",
                        "id": "588e7f72-c744-4a61-b180-d354e912bda2"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/lists/push": {
      "post": {
        "operationId": "users___lists___push",
        "summary": "users/lists/push",
        "description": "Add a user to an existing list.\n\n**Credential required**: *Yes* / **Permission**: *write:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/users/lists/push.ts"
        },
        "tags": ["lists"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "listId": { "type": "string", "format": "misskey:id" },
                  "userId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["listId", "userId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_LIST": {
                    "value": {
                      "error": {
                        "message": "No such list.",
                        "code": "NO_SUCH_LIST",
                        "id": "2214501d-ac96-4049-b717-91e42272a711"
                      }
                    }
                  },
                  "NO_SUCH_USER": {
                    "value": {
                      "error": {
                        "message": "No such user.",
                        "code": "NO_SUCH_USER",
                        "id": "a89abd3d-f0bc-4cce-beb1-2f446f4f1e6a"
                      }
                    }
                  },
                  "ALREADY_ADDED": {
                    "value": {
                      "error": {
                        "message": "That user has already been added to that list.",
                        "code": "ALREADY_ADDED",
                        "id": "1de7c884-1595-49e9-857e-61f12f4d4fc5"
                      }
                    }
                  },
                  "YOU_HAVE_BEEN_BLOCKED": {
                    "value": {
                      "error": {
                        "message": "You cannot push this user because you have been blocked by this user.",
                        "code": "YOU_HAVE_BEEN_BLOCKED",
                        "id": "990232c5-3f9d-4d83-9f3f-ef27b6332a4b"
                      }
                    }
                  },
                  "TOO_MANY_USERS": {
                    "value": {
                      "error": {
                        "message": "You can not push users any more.",
                        "code": "TOO_MANY_USERS",
                        "id": "2dd9752e-a338-413d-8eec-41814430989b"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "To many requests",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "RATE_LIMIT_EXCEEDED": {
                    "value": {
                      "error": {
                        "message": "Rate limit exceeded. Please try again later.",
                        "code": "RATE_LIMIT_EXCEEDED",
                        "id": "d5826d14-3982-4d2e-8011-b9e9f02499ef"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/lists/show": {
      "post": {
        "operationId": "users___lists___show",
        "summary": "users/lists/show",
        "description": "Show the properties of a list.\n\n**Credential required**: *No* / **Permission**: *read:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/users/lists/show.ts"
        },
        "tags": ["lists"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "listId": { "type": "string", "format": "misskey:id" },
                  "forPublic": { "type": "boolean", "default": false }
                },
                "required": ["listId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/UserList"
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_LIST": {
                    "value": {
                      "error": {
                        "message": "No such list.",
                        "code": "NO_SUCH_LIST",
                        "id": "7bc05c21-1d7a-41ae-88f1-66820f4dc686"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/lists/favorite": {
      "post": {
        "operationId": "users___lists___favorite",
        "summary": "users/lists/favorite",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/users/lists/favorite.ts"
        },
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "listId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["listId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_USER_LIST": {
                    "value": {
                      "error": {
                        "message": "No such user list.",
                        "code": "NO_SUCH_USER_LIST",
                        "id": "7dbaf3cf-7b42-4b8f-b431-b3919e580dbe"
                      }
                    }
                  },
                  "ALREADY_FAVORITED": {
                    "value": {
                      "error": {
                        "message": "The list has already been favorited.",
                        "code": "ALREADY_FAVORITED",
                        "id": "6425bba0-985b-461e-af1b-518070e72081"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/lists/unfavorite": {
      "post": {
        "operationId": "users___lists___unfavorite",
        "summary": "users/lists/unfavorite",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/users/lists/unfavorite.ts"
        },
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "listId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["listId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_USER_LIST": {
                    "value": {
                      "error": {
                        "message": "No such user list.",
                        "code": "NO_SUCH_USER_LIST",
                        "id": "baedb33e-76b8-4b0c-86a8-9375c0a7b94b"
                      }
                    }
                  },
                  "ALREADY_FAVORITED": {
                    "value": {
                      "error": {
                        "message": "You have not favorited the list.",
                        "code": "ALREADY_FAVORITED",
                        "id": "835c4b27-463d-4cfa-969b-a9058678d465"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/lists/update": {
      "post": {
        "operationId": "users___lists___update",
        "summary": "users/lists/update",
        "description": "Update the properties of a list.\n\n**Credential required**: *Yes* / **Permission**: *write:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/users/lists/update.ts"
        },
        "tags": ["lists"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "listId": { "type": "string", "format": "misskey:id" },
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "isPublic": { "type": "boolean" }
                },
                "required": ["listId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/UserList"
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_LIST": {
                    "value": {
                      "error": {
                        "message": "No such list.",
                        "code": "NO_SUCH_LIST",
                        "id": "796666fe-3dff-4d39-becb-8a5932c1d5b7"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/lists/create-from-public": {
      "post": {
        "operationId": "users___lists___create-from-public",
        "summary": "users/lists/create-from-public",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/users/lists/create-from-public.ts"
        },
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "listId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["name", "listId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/UserList"
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "TOO_MANY_USERLISTS": {
                    "value": {
                      "error": {
                        "message": "You cannot create user list any more.",
                        "code": "TOO_MANY_USERLISTS",
                        "id": "e9c105b2-c595-47de-97fb-7f7c2c33e92f"
                      }
                    }
                  },
                  "NO_SUCH_LIST": {
                    "value": {
                      "error": {
                        "message": "No such list.",
                        "code": "NO_SUCH_LIST",
                        "id": "9292f798-6175-4f7d-93f4-b6742279667d"
                      }
                    }
                  },
                  "NO_SUCH_USER": {
                    "value": {
                      "error": {
                        "message": "No such user.",
                        "code": "NO_SUCH_USER",
                        "id": "13c457db-a8cb-4d88-b70a-211ceeeabb5f"
                      }
                    }
                  },
                  "ALREADY_ADDED": {
                    "value": {
                      "error": {
                        "message": "That user has already been added to that list.",
                        "code": "ALREADY_ADDED",
                        "id": "c3ad6fdb-692b-47ee-a455-7bd12c7af615"
                      }
                    }
                  },
                  "YOU_HAVE_BEEN_BLOCKED": {
                    "value": {
                      "error": {
                        "message": "You cannot push this user because you have been blocked by this user.",
                        "code": "YOU_HAVE_BEEN_BLOCKED",
                        "id": "a2497f2a-2389-439c-8626-5298540530f4"
                      }
                    }
                  },
                  "TOO_MANY_USERS": {
                    "value": {
                      "error": {
                        "message": "You can not push users any more.",
                        "code": "TOO_MANY_USERS",
                        "id": "1845ea77-38d1-426e-8e4e-8b83b24f5bd7"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/lists/update-membership": {
      "post": {
        "operationId": "users___lists___update-membership",
        "summary": "users/lists/update-membership",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/users/lists/update-membership.ts"
        },
        "tags": ["lists"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "listId": { "type": "string", "format": "misskey:id" },
                  "userId": { "type": "string", "format": "misskey:id" },
                  "withReplies": { "type": "boolean" }
                },
                "required": ["listId", "userId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_LIST": {
                    "value": {
                      "error": {
                        "message": "No such list.",
                        "code": "NO_SUCH_LIST",
                        "id": "7f44670e-ab16-43b8-b4c1-ccd2ee89cc02"
                      }
                    }
                  },
                  "NO_SUCH_USER": {
                    "value": {
                      "error": {
                        "message": "No such user.",
                        "code": "NO_SUCH_USER",
                        "id": "588e7f72-c744-4a61-b180-d354e912bda2"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/lists/get-memberships": {
      "post": {
        "operationId": "users___lists___get-memberships",
        "summary": "users/lists/get-memberships",
        "description": "No description provided.\n\n**Credential required**: *No* / **Permission**: *read:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/users/lists/get-memberships.ts"
        },
        "tags": ["lists"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "listId": { "type": "string", "format": "misskey:id" },
                  "forPublic": { "type": "boolean", "default": false },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 30
                  },
                  "sinceId": { "type": "string", "format": "misskey:id" },
                  "untilId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["listId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "string", "format": "misskey:id" },
                      "createdAt": { "type": "string", "format": "date-time" },
                      "userId": { "type": "string", "format": "misskey:id" },
                      "user": {
                        "type": "object",
                        "$ref": "#/components/schemas/UserLite"
                      },
                      "withReplies": { "type": "boolean" }
                    },
                    "required": [
                      "id",
                      "createdAt",
                      "userId",
                      "user",
                      "withReplies"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_LIST": {
                    "value": {
                      "error": {
                        "message": "No such list.",
                        "code": "NO_SUCH_LIST",
                        "id": "7bc05c21-1d7a-41ae-88f1-66820f4dc686"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/notes": {
      "post": {
        "operationId": "users___notes",
        "summary": "users/notes",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/users/notes.ts"
        },
        "tags": ["users"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": { "type": "string", "format": "misskey:id" },
                  "withReplies": { "type": "boolean", "default": false },
                  "withRenotes": { "type": "boolean", "default": true },
                  "withChannelNotes": { "type": "boolean", "default": false },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "sinceId": { "type": "string", "format": "misskey:id" },
                  "untilId": { "type": "string", "format": "misskey:id" },
                  "sinceDate": { "type": "integer" },
                  "untilDate": { "type": "integer" },
                  "allowPartial": { "type": "boolean", "default": false },
                  "withFiles": { "type": "boolean", "default": false }
                },
                "required": ["userId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/Note"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_USER": {
                    "value": {
                      "error": {
                        "message": "No such user.",
                        "code": "NO_SUCH_USER",
                        "id": "27e494ba-2ac2-48e8-893b-10d4d8c2387b"
                      }
                    }
                  },
                  "BOTH_WITH_REPLIES_AND_WITH_FILES": {
                    "value": {
                      "error": {
                        "message": "Specifying both withReplies and withFiles is not supported",
                        "code": "BOTH_WITH_REPLIES_AND_WITH_FILES",
                        "id": "91c8cb9f-36ed-46e7-9ca2-7df96ed6e222"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/pages": {
      "post": {
        "operationId": "users___pages",
        "summary": "users/pages",
        "description": "Show all pages this user created.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/users/pages.ts"
        },
        "tags": ["users"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": { "type": "string", "format": "misskey:id" },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "sinceId": { "type": "string", "format": "misskey:id" },
                  "untilId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["userId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/Page"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/flashs": {
      "post": {
        "operationId": "users___flashs",
        "summary": "users/flashs",
        "description": "Show all flashs this user created.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/users/flashs.ts"
        },
        "tags": ["users"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": { "type": "string", "format": "misskey:id" },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "sinceId": { "type": "string", "format": "misskey:id" },
                  "untilId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["userId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/Flash"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/reactions": {
      "post": {
        "operationId": "users___reactions",
        "summary": "users/reactions",
        "description": "Show all reactions this user made.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/users/reactions.ts"
        },
        "tags": ["users"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": { "type": "string", "format": "misskey:id" },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "sinceId": { "type": "string", "format": "misskey:id" },
                  "untilId": { "type": "string", "format": "misskey:id" },
                  "sinceDate": { "type": "integer" },
                  "untilDate": { "type": "integer" }
                },
                "required": ["userId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/NoteReaction"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "REACTIONS_NOT_PUBLIC": {
                    "value": {
                      "error": {
                        "message": "Reactions of the user is not public.",
                        "code": "REACTIONS_NOT_PUBLIC",
                        "id": "673a7dd2-6924-1093-e0c0-e68456ceae5c"
                      }
                    }
                  },
                  "IS_REMOTE_USER": {
                    "value": {
                      "error": {
                        "message": "Currently unavailable to display reactions of remote users. See https://github.com/misskey-dev/misskey/issues/12964",
                        "code": "IS_REMOTE_USER",
                        "id": "6b95fa98-8cf9-2350-e284-f0ffdb54a805"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/recommendation": {
      "post": {
        "operationId": "users___recommendation",
        "summary": "users/recommendation",
        "description": "Show users that the authenticated user might be interested to follow.\n\n**Credential required**: *Yes* / **Permission**: *read:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/users/recommendation.ts"
        },
        "tags": ["users"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "offset": { "type": "integer", "default": 0 }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/UserDetailed"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/relation": {
      "post": {
        "operationId": "users___relation",
        "summary": "users/relation",
        "description": "Show the different kinds of relations between the authenticated user and the specified user(s).\n\n**Credential required**: *Yes* / **Permission**: *read:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/users/relation.ts"
        },
        "tags": ["users"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "anyOf": [
                      { "type": "string", "format": "misskey:id" },
                      {
                        "type": "array",
                        "items": { "type": "string", "format": "misskey:id" }
                      }
                    ]
                  }
                },
                "required": ["userId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string", "format": "id" },
                        "isFollowing": { "type": "boolean" },
                        "hasPendingFollowRequestFromYou": { "type": "boolean" },
                        "hasPendingFollowRequestToYou": { "type": "boolean" },
                        "isFollowed": { "type": "boolean" },
                        "isBlocking": { "type": "boolean" },
                        "isBlocked": { "type": "boolean" },
                        "isMuted": { "type": "boolean" },
                        "isRenoteMuted": { "type": "boolean" }
                      },
                      "required": [
                        "id",
                        "isFollowing",
                        "hasPendingFollowRequestFromYou",
                        "hasPendingFollowRequestToYou",
                        "isFollowed",
                        "isBlocking",
                        "isBlocked",
                        "isMuted",
                        "isRenoteMuted"
                      ]
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "string", "format": "id" },
                          "isFollowing": { "type": "boolean" },
                          "hasPendingFollowRequestFromYou": {
                            "type": "boolean"
                          },
                          "hasPendingFollowRequestToYou": { "type": "boolean" },
                          "isFollowed": { "type": "boolean" },
                          "isBlocking": { "type": "boolean" },
                          "isBlocked": { "type": "boolean" },
                          "isMuted": { "type": "boolean" },
                          "isRenoteMuted": { "type": "boolean" }
                        },
                        "required": [
                          "id",
                          "isFollowing",
                          "hasPendingFollowRequestFromYou",
                          "hasPendingFollowRequestToYou",
                          "isFollowed",
                          "isBlocking",
                          "isBlocked",
                          "isMuted",
                          "isRenoteMuted"
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/report-abuse": {
      "post": {
        "operationId": "users___report-abuse",
        "summary": "users/report-abuse",
        "description": "File a report.\n\n**Credential required**: *Yes* / **Permission**: *write:report-abuse*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/users/report-abuse.ts"
        },
        "tags": ["users"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": { "type": "string", "format": "misskey:id" },
                  "comment": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 2048
                  }
                },
                "required": ["userId", "comment"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_USER": {
                    "value": {
                      "error": {
                        "message": "No such user.",
                        "code": "NO_SUCH_USER",
                        "id": "1acefcb5-0959-43fd-9685-b48305736cb5"
                      }
                    }
                  },
                  "CANNOT_REPORT_YOURSELF": {
                    "value": {
                      "error": {
                        "message": "Cannot report yourself.",
                        "code": "CANNOT_REPORT_YOURSELF",
                        "id": "1e13149e-b1e8-43cf-902e-c01dbfcb202f"
                      }
                    }
                  },
                  "CANNOT_REPORT_THE_ADMIN": {
                    "value": {
                      "error": {
                        "message": "Cannot report the admin.",
                        "code": "CANNOT_REPORT_THE_ADMIN",
                        "id": "35e166f5-05fb-4f87-a2d5-adb42676d48f"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/search-by-username-and-host": {
      "post": {
        "operationId": "users___search-by-username-and-host",
        "summary": "users/search-by-username-and-host",
        "description": "Search for a user by username and/or host.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/users/search-by-username-and-host.ts"
        },
        "tags": ["users"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "detail": { "type": "boolean", "default": true },
                  "username": { "type": ["string", "null"] },
                  "host": { "type": ["string", "null"] }
                },
                "anyOf": [
                  { "required": ["username"] },
                  { "required": ["host"] }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/search": {
      "post": {
        "operationId": "users___search",
        "summary": "users/search",
        "description": "Search for users.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/users/search.ts"
        },
        "tags": ["users"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "query": { "type": "string" },
                  "offset": { "type": "integer", "default": 0 },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "origin": {
                    "type": "string",
                    "enum": ["local", "remote", "combined"],
                    "default": "combined"
                  },
                  "detail": { "type": "boolean", "default": true }
                },
                "required": ["query"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/show": {
      "post": {
        "operationId": "users___show",
        "summary": "users/show",
        "description": "Show the properties of a user.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/users/show.ts"
        },
        "tags": ["users"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": { "type": "string", "format": "misskey:id" },
                  "userIds": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": { "type": "string", "format": "misskey:id" }
                  },
                  "username": { "type": "string" },
                  "host": {
                    "type": ["string", "null"],
                    "description": "The local host is represented with `null`."
                  }
                },
                "anyOf": [
                  { "required": ["userId"] },
                  { "required": ["userIds"] },
                  { "required": ["username"] }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "$ref": "#/components/schemas/UserDetailed"
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "$ref": "#/components/schemas/UserDetailed"
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "FAILED_TO_RESOLVE_REMOTE_USER": {
                    "value": {
                      "error": {
                        "message": "Failed to resolve remote user.",
                        "code": "FAILED_TO_RESOLVE_REMOTE_USER",
                        "id": "ef7b9be4-9cba-4e6f-ab41-90ed171c7d3c",
                        "kind": "server"
                      }
                    }
                  },
                  "NO_SUCH_USER": {
                    "value": {
                      "error": {
                        "message": "No such user.",
                        "code": "NO_SUCH_USER",
                        "id": "4362f8dc-731f-4ad8-a694-be5a88922a24",
                        "httpStatusCode": 404
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/achievements": {
      "post": {
        "operationId": "users___achievements",
        "summary": "users/achievements",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/users/achievements.ts"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["userId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": { "type": "string" },
                      "unlockedAt": { "type": "number" }
                    },
                    "required": ["name", "unlockedAt"]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/update-memo": {
      "post": {
        "operationId": "users___update-memo",
        "summary": "users/update-memo",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/users/update-memo.ts"
        },
        "tags": ["account"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": { "type": "string", "format": "misskey:id" },
                  "memo": {
                    "type": ["string", "null"],
                    "description": "A personal memo for the target user. If null or empty, delete the memo."
                  }
                },
                "required": ["userId", "memo"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_USER": {
                    "value": {
                      "error": {
                        "message": "No such user.",
                        "code": "NO_SUCH_USER",
                        "id": "6fef56f3-e765-4957-88e5-c6f65329b8a5"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fetch-rss": {
      "get": {
        "operationId": "fetch-rss",
        "summary": "fetch-rss",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/fetch-rss.ts"
        },
        "tags": ["meta"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": { "url": { "type": "string" } },
                "required": ["url"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "image": {
                      "type": "object",
                      "properties": {
                        "link": { "type": "string" },
                        "url": { "type": "string" },
                        "title": { "type": "string" }
                      },
                      "required": ["url"]
                    },
                    "paginationLinks": {
                      "type": "object",
                      "properties": {
                        "self": { "type": "string" },
                        "first": { "type": "string" },
                        "next": { "type": "string" },
                        "last": { "type": "string" },
                        "prev": { "type": "string" }
                      }
                    },
                    "link": { "type": "string" },
                    "title": { "type": "string" },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "link": { "type": "string" },
                          "guid": { "type": "string" },
                          "title": { "type": "string" },
                          "pubDate": { "type": "string" },
                          "creator": { "type": "string" },
                          "summary": { "type": "string" },
                          "content": { "type": "string" },
                          "isoDate": { "type": "string" },
                          "categories": {
                            "type": "array",
                            "items": { "type": "string" }
                          },
                          "contentSnippet": { "type": "string" },
                          "enclosure": {
                            "type": "object",
                            "properties": {
                              "url": { "type": "string" },
                              "length": { "type": "number" },
                              "type": { "type": "string" }
                            },
                            "required": ["url"]
                          }
                        }
                      }
                    },
                    "feedUrl": { "type": "string" },
                    "description": { "type": "string" },
                    "itunes": {
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {
                        "image": { "type": "string" },
                        "owner": {
                          "type": "object",
                          "properties": {
                            "name": { "type": "string" },
                            "email": { "type": "string" }
                          }
                        },
                        "author": { "type": "string" },
                        "summary": { "type": "string" },
                        "explicit": { "type": "string" },
                        "categories": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "keywords": {
                          "type": "array",
                          "items": { "type": "string" }
                        }
                      }
                    }
                  },
                  "required": ["items"]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "fetch-rss",
        "summary": "fetch-rss",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/fetch-rss.ts"
        },
        "tags": ["meta"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": { "url": { "type": "string" } },
                "required": ["url"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "image": {
                      "type": "object",
                      "properties": {
                        "link": { "type": "string" },
                        "url": { "type": "string" },
                        "title": { "type": "string" }
                      },
                      "required": ["url"]
                    },
                    "paginationLinks": {
                      "type": "object",
                      "properties": {
                        "self": { "type": "string" },
                        "first": { "type": "string" },
                        "next": { "type": "string" },
                        "last": { "type": "string" },
                        "prev": { "type": "string" }
                      }
                    },
                    "link": { "type": "string" },
                    "title": { "type": "string" },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "link": { "type": "string" },
                          "guid": { "type": "string" },
                          "title": { "type": "string" },
                          "pubDate": { "type": "string" },
                          "creator": { "type": "string" },
                          "summary": { "type": "string" },
                          "content": { "type": "string" },
                          "isoDate": { "type": "string" },
                          "categories": {
                            "type": "array",
                            "items": { "type": "string" }
                          },
                          "contentSnippet": { "type": "string" },
                          "enclosure": {
                            "type": "object",
                            "properties": {
                              "url": { "type": "string" },
                              "length": { "type": "number" },
                              "type": { "type": "string" }
                            },
                            "required": ["url"]
                          }
                        }
                      }
                    },
                    "feedUrl": { "type": "string" },
                    "description": { "type": "string" },
                    "itunes": {
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {
                        "image": { "type": "string" },
                        "owner": {
                          "type": "object",
                          "properties": {
                            "name": { "type": "string" },
                            "email": { "type": "string" }
                          }
                        },
                        "author": { "type": "string" },
                        "summary": { "type": "string" },
                        "explicit": { "type": "string" },
                        "categories": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "keywords": {
                          "type": "array",
                          "items": { "type": "string" }
                        }
                      }
                    }
                  },
                  "required": ["items"]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fetch-external-resources": {
      "post": {
        "operationId": "fetch-external-resources",
        "summary": "fetch-external-resources",
        "description": "No description provided.\n\n**Internal Endpoint**: This endpoint is an API for the misskey mainframe and is not intended for use by third parties.\n**Credential required**: *Yes*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/fetch-external-resources.ts"
        },
        "tags": ["meta"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "url": { "type": "string" },
                  "hash": { "type": "string" }
                },
                "required": ["url", "hash"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": { "type": "string" },
                    "data": { "type": "string" }
                  },
                  "required": ["type", "data"]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "EXT_RESOURCE_RETURNED_INVALID_SCHEMA": {
                    "value": {
                      "error": {
                        "message": "External resource returned invalid schema.",
                        "code": "EXT_RESOURCE_RETURNED_INVALID_SCHEMA",
                        "id": "bb774091-7a15-4a70-9dc5-6ac8cf125856"
                      }
                    }
                  },
                  "EXT_RESOURCE_HASH_DIDNT_MATCH": {
                    "value": {
                      "error": {
                        "message": "Hash did not match.",
                        "code": "EXT_RESOURCE_HASH_DIDNT_MATCH",
                        "id": "693ba8ba-b486-40df-a174-72f8279b56a4"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "To many requests",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "RATE_LIMIT_EXCEEDED": {
                    "value": {
                      "error": {
                        "message": "Rate limit exceeded. Please try again later.",
                        "code": "RATE_LIMIT_EXCEEDED",
                        "id": "d5826d14-3982-4d2e-8011-b9e9f02499ef"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/retention": {
      "get": {
        "operationId": "retention",
        "summary": "retention",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/retention.ts"
        },
        "tags": ["users"],
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "createdAt": { "type": "string", "format": "date-time" },
                      "users": { "type": "number" },
                      "data": {
                        "type": "object",
                        "additionalProperties": {
                          "anyOf": [{ "type": "number" }]
                        }
                      }
                    },
                    "required": ["createdAt", "users", "data"]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "retention",
        "summary": "retention",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/retention.ts"
        },
        "tags": ["users"],
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "createdAt": { "type": "string", "format": "date-time" },
                      "users": { "type": "number" },
                      "data": {
                        "type": "object",
                        "additionalProperties": {
                          "anyOf": [{ "type": "number" }]
                        }
                      }
                    },
                    "required": ["createdAt", "users", "data"]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/bubble-game/register": {
      "post": {
        "operationId": "bubble-game___register",
        "summary": "bubble-game/register",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/bubble-game/register.ts"
        },
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "score": { "type": "integer", "minimum": 0 },
                  "seed": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 1024
                  },
                  "logs": {
                    "type": "array",
                    "items": { "type": "array", "items": { "type": "number" } }
                  },
                  "gameMode": { "type": "string" },
                  "gameVersion": { "type": "integer" }
                },
                "required": ["score", "seed", "logs", "gameMode", "gameVersion"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_SEED": {
                    "value": {
                      "error": {
                        "message": "Provided seed is invalid.",
                        "code": "INVALID_SEED",
                        "id": "eb627bc7-574b-4a52-a860-3c3eae772b88"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "To many requests",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "RATE_LIMIT_EXCEEDED": {
                    "value": {
                      "error": {
                        "message": "Rate limit exceeded. Please try again later.",
                        "code": "RATE_LIMIT_EXCEEDED",
                        "id": "d5826d14-3982-4d2e-8011-b9e9f02499ef"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/bubble-game/ranking": {
      "get": {
        "operationId": "bubble-game___ranking",
        "summary": "bubble-game/ranking",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/bubble-game/ranking.ts"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": { "gameMode": { "type": "string" } },
                "required": ["gameMode"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "string", "format": "misskey:id" },
                      "score": { "type": "integer" },
                      "user": {
                        "type": "object",
                        "allOf": [{ "$ref": "#/components/schemas/UserLite" }]
                      }
                    },
                    "required": ["id", "score"]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "bubble-game___ranking",
        "summary": "bubble-game/ranking",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/bubble-game/ranking.ts"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": { "gameMode": { "type": "string" } },
                "required": ["gameMode"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "string", "format": "misskey:id" },
                      "score": { "type": "integer" },
                      "user": {
                        "type": "object",
                        "allOf": [{ "$ref": "#/components/schemas/UserLite" }]
                      }
                    },
                    "required": ["id", "score"]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reversi/cancel-match": {
      "post": {
        "operationId": "reversi___cancel-match",
        "summary": "reversi/cancel-match",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/reversi/cancel-match.ts"
        },
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": ["string", "null"],
                    "format": "misskey:id"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reversi/games": {
      "post": {
        "operationId": "reversi___games",
        "summary": "reversi/games",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/reversi/games.ts"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "sinceId": { "type": "string", "format": "misskey:id" },
                  "untilId": { "type": "string", "format": "misskey:id" },
                  "my": { "type": "boolean", "default": false }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/ReversiGameLite" }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reversi/match": {
      "post": {
        "operationId": "reversi___match",
        "summary": "reversi/match",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/reversi/match.ts"
        },
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": ["string", "null"],
                    "format": "misskey:id"
                  },
                  "noIrregularRules": { "type": "boolean", "default": false },
                  "multiple": { "type": "boolean", "default": false }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    { "$ref": "#/components/schemas/ReversiGameDetailed" }
                  ]
                }
              }
            }
          },
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_USER": {
                    "value": {
                      "error": {
                        "message": "No such user.",
                        "code": "NO_SUCH_USER",
                        "id": "0b4f0559-b484-4e31-9581-3f73cee89b28"
                      }
                    }
                  },
                  "TARGET_IS_YOURSELF": {
                    "value": {
                      "error": {
                        "message": "Target user is yourself.",
                        "code": "TARGET_IS_YOURSELF",
                        "id": "96fd7bd6-d2bc-426c-a865-d055dcd2828e"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reversi/invitations": {
      "post": {
        "operationId": "reversi___invitations",
        "summary": "reversi/invitations",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *read:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/reversi/invitations.ts"
        },
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/UserLite" }
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reversi/show-game": {
      "post": {
        "operationId": "reversi___show-game",
        "summary": "reversi/show-game",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/reversi/show-game.ts"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "gameId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["gameId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/ReversiGameDetailed"
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_GAME": {
                    "value": {
                      "error": {
                        "message": "No such game.",
                        "code": "NO_SUCH_GAME",
                        "id": "f13a03db-fae1-46c9-87f3-43c8165419e1"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reversi/surrender": {
      "post": {
        "operationId": "reversi___surrender",
        "summary": "reversi/surrender",
        "description": "No description provided.\n\n**Credential required**: *Yes* / **Permission**: *write:account*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/reversi/surrender.ts"
        },
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "gameId": { "type": "string", "format": "misskey:id" }
                },
                "required": ["gameId"]
              }
            }
          }
        },
        "responses": {
          "204": { "description": "OK (without any results)" },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_GAME": {
                    "value": {
                      "error": {
                        "message": "No such game.",
                        "code": "NO_SUCH_GAME",
                        "id": "ace0b11f-e0a6-4076-a30d-e8284c81b2df"
                      }
                    }
                  },
                  "ALREADY_ENDED": {
                    "value": {
                      "error": {
                        "message": "That game has already ended.",
                        "code": "ALREADY_ENDED",
                        "id": "6c2ad4a6-cbf1-4a5b-b187-b772826cfc6d"
                      }
                    }
                  },
                  "ACCESS_DENIED": {
                    "value": {
                      "error": {
                        "message": "Access denied.",
                        "code": "ACCESS_DENIED",
                        "id": "6e04164b-a992-4c93-8489-2123069973e1"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reversi/verify": {
      "post": {
        "operationId": "reversi___verify",
        "summary": "reversi/verify",
        "description": "No description provided.\n\n**Credential required**: *No*",
        "externalDocs": {
          "description": "Source code",
          "url": "https://github.com/misskey-dev/misskey/blob/develop/packages/backend/src/server/api/endpoints/reversi/verify.ts"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "gameId": { "type": "string", "format": "misskey:id" },
                  "crc32": { "type": "string" }
                },
                "required": ["gameId", "crc32"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK (with results)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "desynced": { "type": "boolean" },
                    "game": {
                      "type": ["object", "null"],
                      "allOf": [
                        { "$ref": "#/components/schemas/ReversiGameDetailed" }
                      ]
                    }
                  },
                  "required": ["desynced"]
                }
              }
            }
          },
          "400": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "NO_SUCH_GAME": {
                    "value": {
                      "error": {
                        "message": "No such game.",
                        "code": "NO_SUCH_GAME",
                        "id": "8fb05624-b525-43dd-90f7-511852bdfeee"
                      }
                    }
                  },
                  "INVALID_PARAM": {
                    "value": {
                      "error": {
                        "message": "Invalid param.",
                        "code": "INVALID_PARAM",
                        "id": "3d81ceae-475f-4600-b2a8-2bc116157532"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "CREDENTIAL_REQUIRED": {
                    "value": {
                      "error": {
                        "message": "Credential required.",
                        "code": "CREDENTIAL_REQUIRED",
                        "id": "1384574d-a912-4b81-8601-c7b1c4085df1"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "AUTHENTICATION_FAILED": {
                    "value": {
                      "error": {
                        "message": "Authentication failed. Please ensure your token is correct.",
                        "code": "AUTHENTICATION_FAILED",
                        "id": "b0a7f5f8-dc2f-4171-b91f-de88ad238e14"
                      }
                    }
                  }
                }
              }
            }
          },
          "418": {
            "description": "I'm Ai",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "I_AM_AI": {
                    "value": {
                      "error": {
                        "message": "You sent a request to Ai-chan, Misskey's showgirl, instead of the server.",
                        "code": "I_AM_AI",
                        "id": "60c46cd1-f23a-46b1-bebe-5d2b73951a84"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "INTERNAL_ERROR": {
                    "value": {
                      "error": {
                        "message": "Internal error occurred. Please contact us if the error persists.",
                        "code": "INTERNAL_ERROR",
                        "id": "5d37dbcb-891e-41ca-a3d6-e690c97775ac"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "description": "An error object.",
            "properties": {
              "code": {
                "type": "string",
                "description": "An error code. Unique within the endpoint."
              },
              "message": {
                "type": "string",
                "description": "An error message."
              },
              "id": {
                "type": "string",
                "format": "uuid",
                "description": "An error ID. This ID is static."
              }
            },
            "required": ["code", "id", "message"]
          }
        },
        "required": ["error"]
      },
      "UserLite": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "id", "example": "xxxxxxxxxx" },
          "name": { "type": ["string", "null"], "example": "藍" },
          "username": { "type": "string", "example": "ai" },
          "host": {
            "type": ["string", "null"],
            "example": "misskey.example.com",
            "description": "The local host is represented with `null`."
          },
          "avatarUrl": { "type": ["string", "null"], "format": "url" },
          "avatarBlurhash": { "type": ["string", "null"] },
          "avatarDecorations": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": { "type": "string", "format": "id" },
                "angle": { "type": "number" },
                "flipH": { "type": "boolean" },
                "url": { "type": "string", "format": "url" },
                "offsetX": { "type": "number" },
                "offsetY": { "type": "number" }
              },
              "required": ["id", "angle", "flipH", "url", "offsetX", "offsetY"]
            }
          },
          "isBot": { "type": "boolean" },
          "isCat": { "type": "boolean" },
          "instance": {
            "type": "object",
            "properties": {
              "name": { "type": ["string", "null"] },
              "softwareName": { "type": ["string", "null"] },
              "softwareVersion": { "type": ["string", "null"] },
              "iconUrl": { "type": ["string", "null"] },
              "faviconUrl": { "type": ["string", "null"] },
              "themeColor": { "type": ["string", "null"] }
            },
            "required": [
              "name",
              "softwareName",
              "softwareVersion",
              "iconUrl",
              "faviconUrl",
              "themeColor"
            ]
          },
          "emojis": {
            "type": "object",
            "additionalProperties": { "type": "string" }
          },
          "onlineStatus": {
            "type": "string",
            "enum": ["unknown", "online", "active", "offline"]
          },
          "badgeRoles": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": { "type": "string" },
                "iconUrl": { "type": ["string", "null"] },
                "displayOrder": { "type": "number" }
              },
              "required": ["name", "iconUrl", "displayOrder"]
            }
          }
        },
        "required": [
          "id",
          "name",
          "username",
          "host",
          "avatarUrl",
          "avatarBlurhash",
          "avatarDecorations",
          "isBot",
          "isCat",
          "instance",
          "emojis",
          "onlineStatus",
          "badgeRoles"
        ]
      },
      "UserDetailedNotMeOnly": {
        "type": "object",
        "properties": {
          "url": { "type": ["string", "null"], "format": "url" },
          "uri": { "type": ["string", "null"], "format": "uri" },
          "movedTo": { "type": ["string", "null"], "format": "uri" },
          "alsoKnownAs": {
            "type": ["array", "null"],
            "items": { "type": "string", "format": "id" }
          },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": ["string", "null"], "format": "date-time" },
          "lastFetchedAt": {
            "type": ["string", "null"],
            "format": "date-time"
          },
          "bannerUrl": { "type": ["string", "null"], "format": "url" },
          "bannerBlurhash": { "type": ["string", "null"] },
          "isLocked": { "type": "boolean" },
          "isSilenced": { "type": "boolean" },
          "isSuspended": { "type": "boolean", "example": false },
          "description": {
            "type": ["string", "null"],
            "example": "Hi masters, I am Ai!"
          },
          "location": { "type": ["string", "null"] },
          "birthday": { "type": ["string", "null"], "example": "2018-03-12" },
          "lang": { "type": ["string", "null"], "example": "ja-JP" },
          "fields": {
            "type": "array",
            "maxItems": 16,
            "items": {
              "type": "object",
              "properties": {
                "name": { "type": "string" },
                "value": { "type": "string" }
              },
              "required": ["name", "value"]
            }
          },
          "verifiedLinks": {
            "type": "array",
            "items": { "type": "string", "format": "url" }
          },
          "followersCount": { "type": "number" },
          "followingCount": { "type": "number" },
          "notesCount": { "type": "number" },
          "pinnedNoteIds": {
            "type": "array",
            "items": { "type": "string", "format": "id" }
          },
          "pinnedNotes": {
            "type": "array",
            "items": { "type": "object", "$ref": "#/components/schemas/Note" }
          },
          "pinnedPageId": { "type": ["string", "null"] },
          "pinnedPage": {
            "type": ["object", "null"],
            "allOf": [{ "$ref": "#/components/schemas/Page" }]
          },
          "publicReactions": { "type": "boolean" },
          "followingVisibility": {
            "type": "string",
            "enum": ["public", "followers", "private"]
          },
          "followersVisibility": {
            "type": "string",
            "enum": ["public", "followers", "private"]
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/RoleLite"
            }
          },
          "followedMessage": { "type": ["string", "null"] },
          "memo": { "type": ["string", "null"] },
          "moderationNote": { "type": "string" },
          "twoFactorEnabled": { "type": "boolean" },
          "usePasswordLessLogin": { "type": "boolean" },
          "securityKeys": { "type": "boolean" },
          "isFollowing": { "type": "boolean" },
          "isFollowed": { "type": "boolean" },
          "hasPendingFollowRequestFromYou": { "type": "boolean" },
          "hasPendingFollowRequestToYou": { "type": "boolean" },
          "isBlocking": { "type": "boolean" },
          "isBlocked": { "type": "boolean" },
          "isMuted": { "type": "boolean" },
          "isRenoteMuted": { "type": "boolean" },
          "notify": { "type": "string", "enum": ["normal", "none"] },
          "withReplies": { "type": "boolean" }
        },
        "required": [
          "url",
          "uri",
          "movedTo",
          "alsoKnownAs",
          "createdAt",
          "updatedAt",
          "lastFetchedAt",
          "bannerUrl",
          "bannerBlurhash",
          "isLocked",
          "isSilenced",
          "isSuspended",
          "description",
          "location",
          "birthday",
          "lang",
          "fields",
          "verifiedLinks",
          "followersCount",
          "followingCount",
          "notesCount",
          "pinnedNoteIds",
          "pinnedNotes",
          "pinnedPageId",
          "pinnedPage",
          "publicReactions",
          "followingVisibility",
          "followersVisibility",
          "roles",
          "followedMessage",
          "memo",
          "moderationNote",
          "twoFactorEnabled",
          "usePasswordLessLogin",
          "securityKeys",
          "isFollowing",
          "isFollowed",
          "hasPendingFollowRequestFromYou",
          "hasPendingFollowRequestToYou",
          "isBlocking",
          "isBlocked",
          "isMuted",
          "isRenoteMuted",
          "notify",
          "withReplies"
        ]
      },
      "MeDetailedOnly": {
        "type": "object",
        "properties": {
          "avatarId": { "type": ["string", "null"], "format": "id" },
          "bannerId": { "type": ["string", "null"], "format": "id" },
          "followedMessage": { "type": ["string", "null"] },
          "isModerator": { "type": ["boolean", "null"] },
          "isAdmin": { "type": ["boolean", "null"] },
          "injectFeaturedNote": { "type": "boolean" },
          "receiveAnnouncementEmail": { "type": "boolean" },
          "alwaysMarkNsfw": { "type": "boolean" },
          "autoSensitive": { "type": "boolean" },
          "carefulBot": { "type": "boolean" },
          "autoAcceptFollowed": { "type": "boolean" },
          "noCrawle": { "type": "boolean" },
          "preventAiLearning": { "type": "boolean" },
          "isExplorable": { "type": "boolean" },
          "isDeleted": { "type": "boolean" },
          "twoFactorBackupCodesStock": {
            "type": "string",
            "enum": ["full", "partial", "none"]
          },
          "hideOnlineStatus": { "type": "boolean" },
          "hasUnreadSpecifiedNotes": { "type": "boolean" },
          "hasUnreadMentions": { "type": "boolean" },
          "hasUnreadAnnouncement": { "type": "boolean" },
          "unreadAnnouncements": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/Announcement"
            }
          },
          "hasUnreadAntenna": { "type": "boolean" },
          "hasUnreadChannel": { "type": "boolean" },
          "hasUnreadNotification": { "type": "boolean" },
          "hasPendingReceivedFollowRequest": { "type": "boolean" },
          "unreadNotificationsCount": { "type": "number" },
          "mutedWords": {
            "type": "array",
            "items": { "type": "array", "items": { "type": "string" } }
          },
          "hardMutedWords": {
            "type": "array",
            "items": { "type": "array", "items": { "type": "string" } }
          },
          "mutedInstances": {
            "type": ["array", "null"],
            "items": { "type": "string" }
          },
          "notificationRecieveConfig": {
            "type": "object",
            "properties": {
              "note": {
                "type": "object",
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "all",
                          "following",
                          "follower",
                          "mutualFollow",
                          "followingOrFollower",
                          "never"
                        ]
                      }
                    },
                    "required": ["type"]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": { "type": "string", "enum": ["list"] },
                      "userListId": { "type": "string", "format": "misskey:id" }
                    },
                    "required": ["type", "userListId"]
                  }
                ]
              },
              "follow": {
                "type": "object",
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "all",
                          "following",
                          "follower",
                          "mutualFollow",
                          "followingOrFollower",
                          "never"
                        ]
                      }
                    },
                    "required": ["type"]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": { "type": "string", "enum": ["list"] },
                      "userListId": { "type": "string", "format": "misskey:id" }
                    },
                    "required": ["type", "userListId"]
                  }
                ]
              },
              "mention": {
                "type": "object",
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "all",
                          "following",
                          "follower",
                          "mutualFollow",
                          "followingOrFollower",
                          "never"
                        ]
                      }
                    },
                    "required": ["type"]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": { "type": "string", "enum": ["list"] },
                      "userListId": { "type": "string", "format": "misskey:id" }
                    },
                    "required": ["type", "userListId"]
                  }
                ]
              },
              "reply": {
                "type": "object",
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "all",
                          "following",
                          "follower",
                          "mutualFollow",
                          "followingOrFollower",
                          "never"
                        ]
                      }
                    },
                    "required": ["type"]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": { "type": "string", "enum": ["list"] },
                      "userListId": { "type": "string", "format": "misskey:id" }
                    },
                    "required": ["type", "userListId"]
                  }
                ]
              },
              "renote": {
                "type": "object",
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "all",
                          "following",
                          "follower",
                          "mutualFollow",
                          "followingOrFollower",
                          "never"
                        ]
                      }
                    },
                    "required": ["type"]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": { "type": "string", "enum": ["list"] },
                      "userListId": { "type": "string", "format": "misskey:id" }
                    },
                    "required": ["type", "userListId"]
                  }
                ]
              },
              "quote": {
                "type": "object",
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "all",
                          "following",
                          "follower",
                          "mutualFollow",
                          "followingOrFollower",
                          "never"
                        ]
                      }
                    },
                    "required": ["type"]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": { "type": "string", "enum": ["list"] },
                      "userListId": { "type": "string", "format": "misskey:id" }
                    },
                    "required": ["type", "userListId"]
                  }
                ]
              },
              "reaction": {
                "type": "object",
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "all",
                          "following",
                          "follower",
                          "mutualFollow",
                          "followingOrFollower",
                          "never"
                        ]
                      }
                    },
                    "required": ["type"]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": { "type": "string", "enum": ["list"] },
                      "userListId": { "type": "string", "format": "misskey:id" }
                    },
                    "required": ["type", "userListId"]
                  }
                ]
              },
              "pollEnded": {
                "type": "object",
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "all",
                          "following",
                          "follower",
                          "mutualFollow",
                          "followingOrFollower",
                          "never"
                        ]
                      }
                    },
                    "required": ["type"]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": { "type": "string", "enum": ["list"] },
                      "userListId": { "type": "string", "format": "misskey:id" }
                    },
                    "required": ["type", "userListId"]
                  }
                ]
              },
              "receiveFollowRequest": {
                "type": "object",
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "all",
                          "following",
                          "follower",
                          "mutualFollow",
                          "followingOrFollower",
                          "never"
                        ]
                      }
                    },
                    "required": ["type"]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": { "type": "string", "enum": ["list"] },
                      "userListId": { "type": "string", "format": "misskey:id" }
                    },
                    "required": ["type", "userListId"]
                  }
                ]
              },
              "followRequestAccepted": {
                "type": "object",
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "all",
                          "following",
                          "follower",
                          "mutualFollow",
                          "followingOrFollower",
                          "never"
                        ]
                      }
                    },
                    "required": ["type"]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": { "type": "string", "enum": ["list"] },
                      "userListId": { "type": "string", "format": "misskey:id" }
                    },
                    "required": ["type", "userListId"]
                  }
                ]
              },
              "roleAssigned": {
                "type": "object",
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "all",
                          "following",
                          "follower",
                          "mutualFollow",
                          "followingOrFollower",
                          "never"
                        ]
                      }
                    },
                    "required": ["type"]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": { "type": "string", "enum": ["list"] },
                      "userListId": { "type": "string", "format": "misskey:id" }
                    },
                    "required": ["type", "userListId"]
                  }
                ]
              },
              "achievementEarned": {
                "type": "object",
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "all",
                          "following",
                          "follower",
                          "mutualFollow",
                          "followingOrFollower",
                          "never"
                        ]
                      }
                    },
                    "required": ["type"]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": { "type": "string", "enum": ["list"] },
                      "userListId": { "type": "string", "format": "misskey:id" }
                    },
                    "required": ["type", "userListId"]
                  }
                ]
              },
              "app": {
                "type": "object",
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "all",
                          "following",
                          "follower",
                          "mutualFollow",
                          "followingOrFollower",
                          "never"
                        ]
                      }
                    },
                    "required": ["type"]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": { "type": "string", "enum": ["list"] },
                      "userListId": { "type": "string", "format": "misskey:id" }
                    },
                    "required": ["type", "userListId"]
                  }
                ]
              },
              "test": {
                "type": "object",
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "all",
                          "following",
                          "follower",
                          "mutualFollow",
                          "followingOrFollower",
                          "never"
                        ]
                      }
                    },
                    "required": ["type"]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": { "type": "string", "enum": ["list"] },
                      "userListId": { "type": "string", "format": "misskey:id" }
                    },
                    "required": ["type", "userListId"]
                  }
                ]
              }
            },
            "required": [
              "note",
              "follow",
              "mention",
              "reply",
              "renote",
              "quote",
              "reaction",
              "pollEnded",
              "receiveFollowRequest",
              "followRequestAccepted",
              "roleAssigned",
              "achievementEarned",
              "app",
              "test"
            ]
          },
          "emailNotificationTypes": {
            "type": "array",
            "items": { "type": "string" }
          },
          "achievements": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": { "type": "string" },
                "unlockedAt": { "type": "number" }
              },
              "required": ["name", "unlockedAt"]
            }
          },
          "loggedInDays": { "type": "number" },
          "policies": {
            "type": "object",
            "$ref": "#/components/schemas/RolePolicies"
          },
          "twoFactorEnabled": { "type": "boolean", "default": false },
          "usePasswordLessLogin": { "type": "boolean", "default": false },
          "securityKeys": { "type": "boolean", "default": false },
          "email": { "type": ["string", "null"] },
          "emailVerified": { "type": ["boolean", "null"] },
          "securityKeysList": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "id",
                  "example": "xxxxxxxxxx"
                },
                "name": { "type": "string" },
                "lastUsed": { "type": "string", "format": "date-time" }
              },
              "required": ["id", "name", "lastUsed"]
            }
          }
        },
        "required": [
          "avatarId",
          "bannerId",
          "followedMessage",
          "isModerator",
          "isAdmin",
          "injectFeaturedNote",
          "receiveAnnouncementEmail",
          "alwaysMarkNsfw",
          "autoSensitive",
          "carefulBot",
          "autoAcceptFollowed",
          "noCrawle",
          "preventAiLearning",
          "isExplorable",
          "isDeleted",
          "twoFactorBackupCodesStock",
          "hideOnlineStatus",
          "hasUnreadSpecifiedNotes",
          "hasUnreadMentions",
          "hasUnreadAnnouncement",
          "unreadAnnouncements",
          "hasUnreadAntenna",
          "hasUnreadChannel",
          "hasUnreadNotification",
          "hasPendingReceivedFollowRequest",
          "unreadNotificationsCount",
          "mutedWords",
          "hardMutedWords",
          "mutedInstances",
          "notificationRecieveConfig",
          "emailNotificationTypes",
          "achievements",
          "loggedInDays",
          "policies",
          "twoFactorEnabled",
          "usePasswordLessLogin",
          "securityKeys",
          "email",
          "emailVerified",
          "securityKeysList"
        ]
      },
      "UserDetailedNotMe": {
        "type": "object",
        "allOf": [
          { "type": "object", "$ref": "#/components/schemas/UserLite" },
          {
            "type": "object",
            "$ref": "#/components/schemas/UserDetailedNotMeOnly"
          }
        ]
      },
      "MeDetailed": {
        "type": "object",
        "allOf": [
          { "type": "object", "$ref": "#/components/schemas/UserLite" },
          {
            "type": "object",
            "$ref": "#/components/schemas/UserDetailedNotMeOnly"
          },
          { "type": "object", "$ref": "#/components/schemas/MeDetailedOnly" }
        ]
      },
      "UserDetailed": {
        "oneOf": [
          {
            "type": "object",
            "$ref": "#/components/schemas/UserDetailedNotMe"
          },
          { "type": "object", "$ref": "#/components/schemas/MeDetailed" }
        ]
      },
      "User": {
        "oneOf": [
          { "type": "object", "$ref": "#/components/schemas/UserLite" },
          { "type": "object", "$ref": "#/components/schemas/UserDetailed" }
        ]
      },
      "UserList": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "id", "example": "xxxxxxxxxx" },
          "createdAt": { "type": "string", "format": "date-time" },
          "name": { "type": "string" },
          "userIds": {
            "type": "array",
            "items": { "type": "string", "format": "id" }
          },
          "isPublic": { "type": "boolean" }
        },
        "required": ["id", "createdAt", "name", "userIds", "isPublic"]
      },
      "Ad": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "id", "example": "xxxxxxxxxx" },
          "expiresAt": { "type": "string", "format": "date-time" },
          "startsAt": { "type": "string", "format": "date-time" },
          "place": { "type": "string" },
          "priority": { "type": "string" },
          "ratio": { "type": "number" },
          "url": { "type": "string" },
          "imageUrl": { "type": "string" },
          "memo": { "type": "string" },
          "dayOfWeek": { "type": "integer" }
        },
        "required": [
          "id",
          "expiresAt",
          "startsAt",
          "place",
          "priority",
          "ratio",
          "url",
          "imageUrl",
          "memo",
          "dayOfWeek"
        ]
      },
      "Announcement": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "id", "example": "xxxxxxxxxx" },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": ["string", "null"], "format": "date-time" },
          "text": { "type": "string" },
          "title": { "type": "string" },
          "imageUrl": { "type": ["string", "null"] },
          "icon": {
            "type": "string",
            "enum": ["info", "warning", "error", "success"]
          },
          "display": {
            "type": "string",
            "enum": ["dialog", "normal", "banner"]
          },
          "needConfirmationToRead": { "type": "boolean" },
          "silence": { "type": "boolean" },
          "forYou": { "type": "boolean" },
          "isRead": { "type": "boolean" }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "text",
          "title",
          "imageUrl",
          "icon",
          "display",
          "needConfirmationToRead",
          "silence",
          "forYou",
          "isRead"
        ]
      },
      "App": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "name": { "type": "string" },
          "callbackUrl": { "type": ["string", "null"] },
          "permission": { "type": "array", "items": { "type": "string" } },
          "secret": { "type": "string" },
          "isAuthorized": { "type": "boolean" }
        },
        "required": [
          "id",
          "name",
          "callbackUrl",
          "permission",
          "secret",
          "isAuthorized"
        ]
      },
      "Note": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "id", "example": "xxxxxxxxxx" },
          "createdAt": { "type": "string", "format": "date-time" },
          "deletedAt": { "type": ["string", "null"], "format": "date-time" },
          "text": { "type": ["string", "null"] },
          "cw": { "type": ["string", "null"] },
          "userId": { "type": "string", "format": "id" },
          "user": { "type": "object", "$ref": "#/components/schemas/UserLite" },
          "replyId": {
            "type": ["string", "null"],
            "format": "id",
            "example": "xxxxxxxxxx"
          },
          "renoteId": {
            "type": ["string", "null"],
            "format": "id",
            "example": "xxxxxxxxxx"
          },
          "reply": {
            "type": ["object", "null"],
            "allOf": [{ "$ref": "#/components/schemas/Note" }]
          },
          "renote": {
            "type": ["object", "null"],
            "allOf": [{ "$ref": "#/components/schemas/Note" }]
          },
          "isHidden": { "type": "boolean" },
          "visibility": {
            "type": "string",
            "enum": ["public", "home", "followers", "specified"]
          },
          "mentions": {
            "type": "array",
            "items": { "type": "string", "format": "id" }
          },
          "visibleUserIds": {
            "type": "array",
            "items": { "type": "string", "format": "id" }
          },
          "fileIds": {
            "type": "array",
            "items": { "type": "string", "format": "id" }
          },
          "files": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/DriveFile"
            }
          },
          "tags": { "type": "array", "items": { "type": "string" } },
          "poll": {
            "type": ["object", "null"],
            "properties": {
              "expiresAt": {
                "type": ["string", "null"],
                "format": "date-time"
              },
              "multiple": { "type": "boolean" },
              "choices": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "isVoted": { "type": "boolean" },
                    "text": { "type": "string" },
                    "votes": { "type": "number" }
                  },
                  "required": ["isVoted", "text", "votes"]
                }
              }
            },
            "required": ["multiple", "choices"]
          },
          "emojis": {
            "type": "object",
            "additionalProperties": { "anyOf": [{ "type": "string" }] }
          },
          "channelId": {
            "type": ["string", "null"],
            "format": "id",
            "example": "xxxxxxxxxx"
          },
          "channel": {
            "type": ["object", "null"],
            "properties": {
              "id": { "type": "string" },
              "name": { "type": "string" },
              "color": { "type": "string" },
              "isSensitive": { "type": "boolean" },
              "allowRenoteToExternal": { "type": "boolean" },
              "userId": { "type": ["string", "null"] }
            },
            "required": [
              "id",
              "name",
              "color",
              "isSensitive",
              "allowRenoteToExternal",
              "userId"
            ]
          },
          "localOnly": { "type": "boolean" },
          "reactionAcceptance": {
            "type": ["string", "null"],
            "enum": [
              "likeOnly",
              "likeOnlyForRemote",
              "nonSensitiveOnly",
              "nonSensitiveOnlyForLocalLikeOnlyForRemote",
              null
            ]
          },
          "reactionEmojis": {
            "type": "object",
            "additionalProperties": { "anyOf": [{ "type": "string" }] }
          },
          "reactions": {
            "type": "object",
            "additionalProperties": { "anyOf": [{ "type": "number" }] }
          },
          "reactionCount": { "type": "number" },
          "renoteCount": { "type": "number" },
          "repliesCount": { "type": "number" },
          "uri": { "type": "string" },
          "url": { "type": "string" },
          "reactionAndUserPairCache": {
            "type": "array",
            "items": { "type": "string" }
          },
          "clippedCount": { "type": "number" },
          "myReaction": { "type": ["string", "null"] }
        },
        "required": [
          "id",
          "createdAt",
          "deletedAt",
          "text",
          "cw",
          "userId",
          "user",
          "replyId",
          "renoteId",
          "reply",
          "renote",
          "isHidden",
          "visibility",
          "mentions",
          "visibleUserIds",
          "fileIds",
          "files",
          "tags",
          "poll",
          "emojis",
          "channelId",
          "channel",
          "localOnly",
          "reactionAcceptance",
          "reactionEmojis",
          "reactions",
          "reactionCount",
          "renoteCount",
          "repliesCount",
          "uri",
          "url",
          "reactionAndUserPairCache",
          "clippedCount",
          "myReaction"
        ]
      },
      "NoteReaction": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "id", "example": "xxxxxxxxxx" },
          "createdAt": { "type": "string", "format": "date-time" },
          "user": { "type": "object", "$ref": "#/components/schemas/UserLite" },
          "type": { "type": "string" }
        },
        "required": ["id", "createdAt", "user", "type"]
      },
      "NoteFavorite": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "id", "example": "xxxxxxxxxx" },
          "createdAt": { "type": "string", "format": "date-time" },
          "note": { "type": "object", "$ref": "#/components/schemas/Note" },
          "noteId": { "type": "string", "format": "id" }
        },
        "required": ["id", "createdAt", "note", "noteId"]
      },
      "Notification": {
        "type": "object",
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "id": { "type": "string", "format": "id" },
              "createdAt": { "type": "string", "format": "date-time" },
              "type": { "type": "string", "enum": ["note"] },
              "user": {
                "type": "object",
                "$ref": "#/components/schemas/UserLite"
              },
              "userId": { "type": "string", "format": "id" },
              "note": { "type": "object", "$ref": "#/components/schemas/Note" }
            },
            "required": ["id", "createdAt", "type", "user", "userId", "note"]
          },
          {
            "type": "object",
            "properties": {
              "id": { "type": "string", "format": "id" },
              "createdAt": { "type": "string", "format": "date-time" },
              "type": { "type": "string", "enum": ["mention"] },
              "user": {
                "type": "object",
                "$ref": "#/components/schemas/UserLite"
              },
              "userId": { "type": "string", "format": "id" },
              "note": { "type": "object", "$ref": "#/components/schemas/Note" }
            },
            "required": ["id", "createdAt", "type", "user", "userId", "note"]
          },
          {
            "type": "object",
            "properties": {
              "id": { "type": "string", "format": "id" },
              "createdAt": { "type": "string", "format": "date-time" },
              "type": { "type": "string", "enum": ["reply"] },
              "user": {
                "type": "object",
                "$ref": "#/components/schemas/UserLite"
              },
              "userId": { "type": "string", "format": "id" },
              "note": { "type": "object", "$ref": "#/components/schemas/Note" }
            },
            "required": ["id", "createdAt", "type", "user", "userId", "note"]
          },
          {
            "type": "object",
            "properties": {
              "id": { "type": "string", "format": "id" },
              "createdAt": { "type": "string", "format": "date-time" },
              "type": { "type": "string", "enum": ["renote"] },
              "user": {
                "type": "object",
                "$ref": "#/components/schemas/UserLite"
              },
              "userId": { "type": "string", "format": "id" },
              "note": { "type": "object", "$ref": "#/components/schemas/Note" }
            },
            "required": ["id", "createdAt", "type", "user", "userId", "note"]
          },
          {
            "type": "object",
            "properties": {
              "id": { "type": "string", "format": "id" },
              "createdAt": { "type": "string", "format": "date-time" },
              "type": { "type": "string", "enum": ["quote"] },
              "user": {
                "type": "object",
                "$ref": "#/components/schemas/UserLite"
              },
              "userId": { "type": "string", "format": "id" },
              "note": { "type": "object", "$ref": "#/components/schemas/Note" }
            },
            "required": ["id", "createdAt", "type", "user", "userId", "note"]
          },
          {
            "type": "object",
            "properties": {
              "id": { "type": "string", "format": "id" },
              "createdAt": { "type": "string", "format": "date-time" },
              "type": { "type": "string", "enum": ["reaction"] },
              "user": {
                "type": "object",
                "$ref": "#/components/schemas/UserLite"
              },
              "userId": { "type": "string", "format": "id" },
              "note": { "type": "object", "$ref": "#/components/schemas/Note" },
              "reaction": { "type": "string" }
            },
            "required": [
              "id",
              "createdAt",
              "type",
              "user",
              "userId",
              "note",
              "reaction"
            ]
          },
          {
            "type": "object",
            "properties": {
              "id": { "type": "string", "format": "id" },
              "createdAt": { "type": "string", "format": "date-time" },
              "type": { "type": "string", "enum": ["pollEnded"] },
              "user": {
                "type": "object",
                "$ref": "#/components/schemas/UserLite"
              },
              "userId": { "type": "string", "format": "id" },
              "note": { "type": "object", "$ref": "#/components/schemas/Note" }
            },
            "required": ["id", "createdAt", "type", "user", "userId", "note"]
          },
          {
            "type": "object",
            "properties": {
              "id": { "type": "string", "format": "id" },
              "createdAt": { "type": "string", "format": "date-time" },
              "type": { "type": "string", "enum": ["follow"] },
              "user": {
                "type": "object",
                "$ref": "#/components/schemas/UserLite"
              },
              "userId": { "type": "string", "format": "id" }
            },
            "required": ["id", "createdAt", "type", "user", "userId"]
          },
          {
            "type": "object",
            "properties": {
              "id": { "type": "string", "format": "id" },
              "createdAt": { "type": "string", "format": "date-time" },
              "type": { "type": "string", "enum": ["receiveFollowRequest"] },
              "user": {
                "type": "object",
                "$ref": "#/components/schemas/UserLite"
              },
              "userId": { "type": "string", "format": "id" }
            },
            "required": ["id", "createdAt", "type", "user", "userId"]
          },
          {
            "type": "object",
            "properties": {
              "id": { "type": "string", "format": "id" },
              "createdAt": { "type": "string", "format": "date-time" },
              "type": { "type": "string", "enum": ["followRequestAccepted"] },
              "user": {
                "type": "object",
                "$ref": "#/components/schemas/UserLite"
              },
              "userId": { "type": "string", "format": "id" },
              "message": { "type": ["string", "null"] }
            },
            "required": ["id", "createdAt", "type", "user", "userId", "message"]
          },
          {
            "type": "object",
            "properties": {
              "id": { "type": "string", "format": "id" },
              "createdAt": { "type": "string", "format": "date-time" },
              "type": { "type": "string", "enum": ["roleAssigned"] },
              "role": { "type": "object", "$ref": "#/components/schemas/Role" }
            },
            "required": ["id", "createdAt", "type", "role"]
          },
          {
            "type": "object",
            "properties": {
              "id": { "type": "string", "format": "id" },
              "createdAt": { "type": "string", "format": "date-time" },
              "type": { "type": "string", "enum": ["achievementEarned"] },
              "achievement": {
                "type": "string",
                "enum": [
                  "notes1",
                  "notes10",
                  "notes100",
                  "notes500",
                  "notes1000",
                  "notes5000",
                  "notes10000",
                  "notes20000",
                  "notes30000",
                  "notes40000",
                  "notes50000",
                  "notes60000",
                  "notes70000",
                  "notes80000",
                  "notes90000",
                  "notes100000",
                  "login3",
                  "login7",
                  "login15",
                  "login30",
                  "login60",
                  "login100",
                  "login200",
                  "login300",
                  "login400",
                  "login500",
                  "login600",
                  "login700",
                  "login800",
                  "login900",
                  "login1000",
                  "passedSinceAccountCreated1",
                  "passedSinceAccountCreated2",
                  "passedSinceAccountCreated3",
                  "loggedInOnBirthday",
                  "loggedInOnNewYearsDay",
                  "noteClipped1",
                  "noteFavorited1",
                  "myNoteFavorited1",
                  "profileFilled",
                  "markedAsCat",
                  "following1",
                  "following10",
                  "following50",
                  "following100",
                  "following300",
                  "followers1",
                  "followers10",
                  "followers50",
                  "followers100",
                  "followers300",
                  "followers500",
                  "followers1000",
                  "collectAchievements30",
                  "viewAchievements3min",
                  "iLoveMisskey",
                  "foundTreasure",
                  "client30min",
                  "client60min",
                  "noteDeletedWithin1min",
                  "postedAtLateNight",
                  "postedAt0min0sec",
                  "selfQuote",
                  "htl20npm",
                  "viewInstanceChart",
                  "outputHelloWorldOnScratchpad",
                  "open3windows",
                  "driveFolderCircularReference",
                  "reactWithoutRead",
                  "clickedClickHere",
                  "justPlainLucky",
                  "setNameToSyuilo",
                  "cookieClicked",
                  "brainDiver",
                  "smashTestNotificationButton",
                  "tutorialCompleted",
                  "bubbleGameExplodingHead",
                  "bubbleGameDoubleExplodingHead"
                ]
              }
            },
            "required": ["id", "createdAt", "type", "achievement"]
          },
          {
            "type": "object",
            "properties": {
              "id": { "type": "string", "format": "id" },
              "createdAt": { "type": "string", "format": "date-time" },
              "type": { "type": "string", "enum": ["exportCompleted"] },
              "exportedEntity": {
                "type": "string",
                "enum": [
                  "antenna",
                  "blocking",
                  "clip",
                  "customEmoji",
                  "favorite",
                  "following",
                  "muting",
                  "note",
                  "userList"
                ]
              },
              "fileId": { "type": "string", "format": "id" }
            },
            "required": ["id", "createdAt", "type", "exportedEntity", "fileId"]
          },
          {
            "type": "object",
            "properties": {
              "id": { "type": "string", "format": "id" },
              "createdAt": { "type": "string", "format": "date-time" },
              "type": { "type": "string", "enum": ["login"] }
            },
            "required": ["id", "createdAt", "type"]
          },
          {
            "type": "object",
            "properties": {
              "id": { "type": "string", "format": "id" },
              "createdAt": { "type": "string", "format": "date-time" },
              "type": { "type": "string", "enum": ["app"] },
              "body": { "type": "string" },
              "header": { "type": ["string", "null"] },
              "icon": { "type": ["string", "null"] }
            },
            "required": ["id", "createdAt", "type", "body", "header", "icon"]
          },
          {
            "type": "object",
            "properties": {
              "id": { "type": "string", "format": "id" },
              "createdAt": { "type": "string", "format": "date-time" },
              "type": { "type": "string", "enum": ["reaction:grouped"] },
              "note": { "type": "object", "$ref": "#/components/schemas/Note" },
              "reactions": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "$ref": "#/components/schemas/UserLite"
                    },
                    "reaction": { "type": "string" }
                  },
                  "required": ["user", "reaction"]
                }
              }
            },
            "required": ["id", "createdAt", "type", "note", "reactions"]
          },
          {
            "type": "object",
            "properties": {
              "id": { "type": "string", "format": "id" },
              "createdAt": { "type": "string", "format": "date-time" },
              "type": { "type": "string", "enum": ["renote:grouped"] },
              "note": { "type": "object", "$ref": "#/components/schemas/Note" },
              "users": {
                "type": "array",
                "items": {
                  "type": "object",
                  "$ref": "#/components/schemas/UserLite"
                }
              }
            },
            "required": ["id", "createdAt", "type", "note", "users"]
          },
          {
            "type": "object",
            "properties": {
              "id": { "type": "string", "format": "id" },
              "createdAt": { "type": "string", "format": "date-time" },
              "type": { "type": "string", "enum": ["test"] }
            },
            "required": ["id", "createdAt", "type"]
          }
        ]
      },
      "DriveFile": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "id", "example": "xxxxxxxxxx" },
          "createdAt": { "type": "string", "format": "date-time" },
          "name": { "type": "string", "example": "192.jpg" },
          "type": { "type": "string", "example": "image/jpeg" },
          "md5": {
            "type": "string",
            "format": "md5",
            "example": "15eca7fba0480996e2245f5185bf39f2"
          },
          "size": { "type": "number", "example": 51469 },
          "isSensitive": { "type": "boolean" },
          "blurhash": { "type": ["string", "null"] },
          "properties": {
            "type": "object",
            "properties": {
              "width": { "type": "number", "example": 1280 },
              "height": { "type": "number", "example": 720 },
              "orientation": { "type": "number", "example": 8 },
              "avgColor": { "type": "string", "example": "rgb(40,65,87)" }
            },
            "required": ["width", "height", "orientation", "avgColor"]
          },
          "url": { "type": "string", "format": "url" },
          "thumbnailUrl": { "type": ["string", "null"], "format": "url" },
          "comment": { "type": ["string", "null"] },
          "folderId": {
            "type": ["string", "null"],
            "format": "id",
            "example": "xxxxxxxxxx"
          },
          "folder": {
            "type": ["object", "null"],
            "allOf": [{ "$ref": "#/components/schemas/DriveFolder" }]
          },
          "userId": {
            "type": ["string", "null"],
            "format": "id",
            "example": "xxxxxxxxxx"
          },
          "user": {
            "type": ["object", "null"],
            "allOf": [{ "$ref": "#/components/schemas/UserLite" }]
          }
        },
        "required": [
          "id",
          "createdAt",
          "name",
          "type",
          "md5",
          "size",
          "isSensitive",
          "blurhash",
          "properties",
          "url",
          "thumbnailUrl",
          "comment",
          "folderId",
          "folder",
          "userId",
          "user"
        ]
      },
      "DriveFolder": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "id", "example": "xxxxxxxxxx" },
          "createdAt": { "type": "string", "format": "date-time" },
          "name": { "type": "string" },
          "parentId": {
            "type": ["string", "null"],
            "format": "id",
            "example": "xxxxxxxxxx"
          },
          "foldersCount": { "type": "number" },
          "filesCount": { "type": "number" },
          "parent": {
            "type": ["object", "null"],
            "allOf": [{ "$ref": "#/components/schemas/DriveFolder" }]
          }
        },
        "required": [
          "id",
          "createdAt",
          "name",
          "parentId",
          "foldersCount",
          "filesCount",
          "parent"
        ]
      },
      "Following": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "id", "example": "xxxxxxxxxx" },
          "createdAt": { "type": "string", "format": "date-time" },
          "followeeId": { "type": "string", "format": "id" },
          "followerId": { "type": "string", "format": "id" },
          "followee": {
            "type": "object",
            "allOf": [{ "$ref": "#/components/schemas/UserDetailedNotMe" }]
          },
          "follower": {
            "type": "object",
            "allOf": [{ "$ref": "#/components/schemas/UserDetailedNotMe" }]
          }
        },
        "required": [
          "id",
          "createdAt",
          "followeeId",
          "followerId",
          "followee",
          "follower"
        ]
      },
      "Muting": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "id", "example": "xxxxxxxxxx" },
          "createdAt": { "type": "string", "format": "date-time" },
          "expiresAt": { "type": ["string", "null"], "format": "date-time" },
          "muteeId": { "type": "string", "format": "id" },
          "mutee": {
            "type": "object",
            "$ref": "#/components/schemas/UserDetailedNotMe"
          }
        },
        "required": ["id", "createdAt", "expiresAt", "muteeId", "mutee"]
      },
      "RenoteMuting": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "id", "example": "xxxxxxxxxx" },
          "createdAt": { "type": "string", "format": "date-time" },
          "muteeId": { "type": "string", "format": "id" },
          "mutee": {
            "type": "object",
            "$ref": "#/components/schemas/UserDetailedNotMe"
          }
        },
        "required": ["id", "createdAt", "muteeId", "mutee"]
      },
      "Blocking": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "id", "example": "xxxxxxxxxx" },
          "createdAt": { "type": "string", "format": "date-time" },
          "blockeeId": { "type": "string", "format": "id" },
          "blockee": {
            "type": "object",
            "$ref": "#/components/schemas/UserDetailedNotMe"
          }
        },
        "required": ["id", "createdAt", "blockeeId", "blockee"]
      },
      "Hashtag": {
        "type": "object",
        "properties": {
          "tag": { "type": "string", "example": "misskey" },
          "mentionedUsersCount": { "type": "number" },
          "mentionedLocalUsersCount": { "type": "number" },
          "mentionedRemoteUsersCount": { "type": "number" },
          "attachedUsersCount": { "type": "number" },
          "attachedLocalUsersCount": { "type": "number" },
          "attachedRemoteUsersCount": { "type": "number" }
        },
        "required": [
          "tag",
          "mentionedUsersCount",
          "mentionedLocalUsersCount",
          "mentionedRemoteUsersCount",
          "attachedUsersCount",
          "attachedLocalUsersCount",
          "attachedRemoteUsersCount"
        ]
      },
      "InviteCode": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "id", "example": "xxxxxxxxxx" },
          "code": { "type": "string", "example": "GR6S02ERUA5VR" },
          "expiresAt": { "type": ["string", "null"], "format": "date-time" },
          "createdAt": { "type": "string", "format": "date-time" },
          "createdBy": {
            "type": ["object", "null"],
            "allOf": [{ "$ref": "#/components/schemas/UserLite" }]
          },
          "usedBy": {
            "type": ["object", "null"],
            "allOf": [{ "$ref": "#/components/schemas/UserLite" }]
          },
          "usedAt": { "type": ["string", "null"], "format": "date-time" },
          "used": { "type": "boolean" }
        },
        "required": [
          "id",
          "code",
          "expiresAt",
          "createdAt",
          "createdBy",
          "usedBy",
          "usedAt",
          "used"
        ]
      },
      "Page": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "id", "example": "xxxxxxxxxx" },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" },
          "userId": { "type": "string", "format": "id" },
          "user": { "type": "object", "$ref": "#/components/schemas/UserLite" },
          "content": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/PageBlock"
            }
          },
          "variables": { "type": "array", "items": { "type": "object" } },
          "title": { "type": "string" },
          "name": { "type": "string" },
          "summary": { "type": ["string", "null"] },
          "hideTitleWhenPinned": { "type": "boolean" },
          "alignCenter": { "type": "boolean" },
          "font": { "type": "string" },
          "script": { "type": "string" },
          "eyeCatchingImageId": { "type": ["string", "null"] },
          "eyeCatchingImage": {
            "type": ["object", "null"],
            "allOf": [{ "$ref": "#/components/schemas/DriveFile" }]
          },
          "attachedFiles": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/DriveFile"
            }
          },
          "likedCount": { "type": "number" },
          "isLiked": { "type": "boolean" }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "userId",
          "user",
          "content",
          "variables",
          "title",
          "name",
          "summary",
          "hideTitleWhenPinned",
          "alignCenter",
          "font",
          "script",
          "eyeCatchingImageId",
          "eyeCatchingImage",
          "attachedFiles",
          "likedCount",
          "isLiked"
        ]
      },
      "PageBlock": {
        "type": "object",
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "id": { "type": "string" },
              "type": { "type": "string", "enum": ["text"] },
              "text": { "type": "string" }
            },
            "required": ["id", "type", "text"]
          },
          {
            "type": "object",
            "properties": {
              "id": { "type": "string" },
              "type": { "type": "string", "enum": ["section"] },
              "title": { "type": "string" },
              "children": { "type": "array", "items": { "type": "object" } }
            },
            "required": ["id", "type", "title", "children"]
          },
          {
            "type": "object",
            "properties": {
              "id": { "type": "string" },
              "type": { "type": "string", "enum": ["image"] },
              "fileId": { "type": ["string", "null"] }
            },
            "required": ["id", "type", "fileId"]
          },
          {
            "type": "object",
            "properties": {
              "id": { "type": "string" },
              "type": { "type": "string", "enum": ["note"] },
              "detailed": { "type": "boolean" },
              "note": { "type": ["string", "null"] }
            },
            "required": ["id", "type", "detailed", "note"]
          }
        ]
      },
      "Channel": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "id", "example": "xxxxxxxxxx" },
          "createdAt": { "type": "string", "format": "date-time" },
          "lastNotedAt": { "type": ["string", "null"], "format": "date-time" },
          "name": { "type": "string" },
          "description": { "type": ["string", "null"] },
          "userId": { "type": ["string", "null"], "format": "id" },
          "bannerUrl": { "type": ["string", "null"], "format": "url" },
          "pinnedNoteIds": {
            "type": "array",
            "items": { "type": "string", "format": "id" }
          },
          "color": { "type": "string" },
          "isArchived": { "type": "boolean" },
          "usersCount": { "type": "number" },
          "notesCount": { "type": "number" },
          "isSensitive": { "type": "boolean" },
          "allowRenoteToExternal": { "type": "boolean" },
          "isFollowing": { "type": "boolean" },
          "isFavorited": { "type": "boolean" },
          "pinnedNotes": {
            "type": "array",
            "items": { "type": "object", "$ref": "#/components/schemas/Note" }
          }
        },
        "required": [
          "id",
          "createdAt",
          "lastNotedAt",
          "name",
          "description",
          "userId",
          "bannerUrl",
          "pinnedNoteIds",
          "color",
          "isArchived",
          "usersCount",
          "notesCount",
          "isSensitive",
          "allowRenoteToExternal",
          "isFollowing",
          "isFavorited",
          "pinnedNotes"
        ]
      },
      "QueueCount": {
        "type": "object",
        "properties": {
          "waiting": { "type": "number" },
          "active": { "type": "number" },
          "completed": { "type": "number" },
          "failed": { "type": "number" },
          "delayed": { "type": "number" }
        },
        "required": ["waiting", "active", "completed", "failed", "delayed"]
      },
      "Antenna": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "id" },
          "createdAt": { "type": "string", "format": "date-time" },
          "name": { "type": "string" },
          "keywords": {
            "type": "array",
            "items": { "type": "array", "items": { "type": "string" } }
          },
          "excludeKeywords": {
            "type": "array",
            "items": { "type": "array", "items": { "type": "string" } }
          },
          "src": {
            "type": "string",
            "enum": ["home", "all", "users", "list", "users_blacklist"]
          },
          "userListId": { "type": ["string", "null"], "format": "id" },
          "users": { "type": "array", "items": { "type": "string" } },
          "caseSensitive": { "type": "boolean", "default": false },
          "localOnly": { "type": "boolean", "default": false },
          "excludeBots": { "type": "boolean", "default": false },
          "withReplies": { "type": "boolean", "default": false },
          "withFile": { "type": "boolean" },
          "isActive": { "type": "boolean" },
          "hasUnreadNote": { "type": "boolean", "default": false },
          "notify": { "type": "boolean", "default": false }
        },
        "required": [
          "id",
          "createdAt",
          "name",
          "keywords",
          "excludeKeywords",
          "src",
          "userListId",
          "users",
          "caseSensitive",
          "localOnly",
          "excludeBots",
          "withReplies",
          "withFile",
          "isActive",
          "hasUnreadNote",
          "notify"
        ]
      },
      "Clip": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "id", "example": "xxxxxxxxxx" },
          "createdAt": { "type": "string", "format": "date-time" },
          "lastClippedAt": {
            "type": ["string", "null"],
            "format": "date-time"
          },
          "userId": { "type": "string", "format": "id" },
          "user": { "type": "object", "$ref": "#/components/schemas/UserLite" },
          "name": { "type": "string" },
          "description": { "type": ["string", "null"] },
          "isPublic": { "type": "boolean" },
          "favoritedCount": { "type": "number" },
          "isFavorited": { "type": "boolean" },
          "notesCount": { "type": "integer" }
        },
        "required": [
          "id",
          "createdAt",
          "lastClippedAt",
          "userId",
          "user",
          "name",
          "description",
          "isPublic",
          "favoritedCount",
          "isFavorited",
          "notesCount"
        ]
      },
      "FederationInstance": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "id" },
          "firstRetrievedAt": { "type": "string", "format": "date-time" },
          "host": { "type": "string", "example": "misskey.example.com" },
          "usersCount": { "type": "number" },
          "notesCount": { "type": "number" },
          "followingCount": { "type": "number" },
          "followersCount": { "type": "number" },
          "isNotResponding": { "type": "boolean" },
          "isSuspended": { "type": "boolean" },
          "suspensionState": {
            "type": "string",
            "enum": [
              "none",
              "manuallySuspended",
              "goneSuspended",
              "autoSuspendedForNotResponding"
            ]
          },
          "isBlocked": { "type": "boolean" },
          "softwareName": { "type": ["string", "null"], "example": "misskey" },
          "softwareVersion": { "type": ["string", "null"] },
          "openRegistrations": { "type": ["boolean", "null"], "example": true },
          "name": { "type": ["string", "null"] },
          "description": { "type": ["string", "null"] },
          "maintainerName": { "type": ["string", "null"] },
          "maintainerEmail": { "type": ["string", "null"] },
          "isSilenced": { "type": "boolean" },
          "isMediaSilenced": { "type": "boolean" },
          "iconUrl": { "type": ["string", "null"], "format": "url" },
          "faviconUrl": { "type": ["string", "null"], "format": "url" },
          "themeColor": { "type": ["string", "null"] },
          "infoUpdatedAt": {
            "type": ["string", "null"],
            "format": "date-time"
          },
          "latestRequestReceivedAt": {
            "type": ["string", "null"],
            "format": "date-time"
          },
          "moderationNote": { "type": ["string", "null"] }
        },
        "required": [
          "id",
          "firstRetrievedAt",
          "host",
          "usersCount",
          "notesCount",
          "followingCount",
          "followersCount",
          "isNotResponding",
          "isSuspended",
          "suspensionState",
          "isBlocked",
          "softwareName",
          "softwareVersion",
          "openRegistrations",
          "name",
          "description",
          "maintainerName",
          "maintainerEmail",
          "isSilenced",
          "isMediaSilenced",
          "iconUrl",
          "faviconUrl",
          "themeColor",
          "infoUpdatedAt",
          "latestRequestReceivedAt",
          "moderationNote"
        ]
      },
      "GalleryPost": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "id", "example": "xxxxxxxxxx" },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" },
          "userId": { "type": "string", "format": "id" },
          "user": { "type": "object", "$ref": "#/components/schemas/UserLite" },
          "title": { "type": "string" },
          "description": { "type": ["string", "null"] },
          "fileIds": {
            "type": "array",
            "items": { "type": "string", "format": "id" }
          },
          "files": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/DriveFile"
            }
          },
          "tags": { "type": "array", "items": { "type": "string" } },
          "isSensitive": { "type": "boolean" },
          "likedCount": { "type": "number" },
          "isLiked": { "type": "boolean" }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "userId",
          "user",
          "title",
          "description",
          "fileIds",
          "files",
          "tags",
          "isSensitive",
          "likedCount",
          "isLiked"
        ]
      },
      "EmojiSimple": {
        "type": "object",
        "properties": {
          "aliases": {
            "type": "array",
            "items": { "type": "string", "format": "id" }
          },
          "name": { "type": "string" },
          "category": { "type": ["string", "null"] },
          "url": { "type": "string" },
          "localOnly": { "type": "boolean" },
          "isSensitive": { "type": "boolean" },
          "roleIdsThatCanBeUsedThisEmojiAsReaction": {
            "type": "array",
            "items": { "type": "string", "format": "id" }
          }
        },
        "required": [
          "aliases",
          "name",
          "category",
          "url",
          "localOnly",
          "isSensitive",
          "roleIdsThatCanBeUsedThisEmojiAsReaction"
        ]
      },
      "EmojiDetailed": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "id" },
          "aliases": {
            "type": "array",
            "items": { "type": "string", "format": "id" }
          },
          "name": { "type": "string" },
          "category": { "type": ["string", "null"] },
          "host": {
            "type": ["string", "null"],
            "description": "The local host is represented with `null`."
          },
          "url": { "type": "string" },
          "license": { "type": ["string", "null"] },
          "isSensitive": { "type": "boolean" },
          "localOnly": { "type": "boolean" },
          "roleIdsThatCanBeUsedThisEmojiAsReaction": {
            "type": "array",
            "items": { "type": "string", "format": "id" }
          }
        },
        "required": [
          "id",
          "aliases",
          "name",
          "category",
          "host",
          "url",
          "license",
          "isSensitive",
          "localOnly",
          "roleIdsThatCanBeUsedThisEmojiAsReaction"
        ]
      },
      "Flash": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "id", "example": "xxxxxxxxxx" },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" },
          "userId": { "type": "string", "format": "id" },
          "user": { "type": "object", "$ref": "#/components/schemas/UserLite" },
          "title": { "type": "string" },
          "summary": { "type": "string" },
          "script": { "type": "string" },
          "visibility": { "type": "string", "enum": ["private", "public"] },
          "likedCount": { "type": ["number", "null"] },
          "isLiked": { "type": "boolean" }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "userId",
          "user",
          "title",
          "summary",
          "script",
          "visibility",
          "likedCount",
          "isLiked"
        ]
      },
      "Signin": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "createdAt": { "type": "string", "format": "date-time" },
          "ip": { "type": "string" },
          "headers": { "type": "object" },
          "success": { "type": "boolean" }
        },
        "required": ["id", "createdAt", "ip", "headers", "success"]
      },
      "RoleCondFormulaLogics": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "type": { "type": "string", "enum": ["and", "or"] },
          "values": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/RoleCondFormulaValue" }
          }
        },
        "required": ["id", "type", "values"]
      },
      "RoleCondFormulaValueNot": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "type": { "type": "string", "enum": ["not"] },
          "value": {
            "type": "object",
            "$ref": "#/components/schemas/RoleCondFormulaValue"
          }
        },
        "required": ["id", "type", "value"]
      },
      "RoleCondFormulaValueIsLocalOrRemote": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "type": { "type": "string", "enum": ["isLocal", "isRemote"] }
        },
        "required": ["id", "type"]
      },
      "RoleCondFormulaValueUserSettingBooleanSchema": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "type": {
            "type": "string",
            "enum": [
              "isSuspended",
              "isLocked",
              "isBot",
              "isCat",
              "isExplorable"
            ]
          }
        },
        "required": ["id", "type"]
      },
      "RoleCondFormulaValueAssignedRole": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "type": { "type": "string", "enum": ["roleAssignedTo"] },
          "roleId": {
            "type": "string",
            "format": "id",
            "example": "xxxxxxxxxx"
          }
        },
        "required": ["id", "type", "roleId"]
      },
      "RoleCondFormulaValueCreated": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "type": {
            "type": "string",
            "enum": ["createdLessThan", "createdMoreThan"]
          },
          "sec": { "type": "number" }
        },
        "required": ["id", "type", "sec"]
      },
      "RoleCondFormulaFollowersOrFollowingOrNotes": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "type": {
            "type": "string",
            "enum": [
              "followersLessThanOrEq",
              "followersMoreThanOrEq",
              "followingLessThanOrEq",
              "followingMoreThanOrEq",
              "notesLessThanOrEq",
              "notesMoreThanOrEq"
            ]
          },
          "value": { "type": "number" }
        },
        "required": ["id", "type", "value"]
      },
      "RoleCondFormulaValue": {
        "type": "object",
        "oneOf": [
          { "$ref": "#/components/schemas/RoleCondFormulaLogics" },
          { "$ref": "#/components/schemas/RoleCondFormulaValueNot" },
          {
            "$ref": "#/components/schemas/RoleCondFormulaValueIsLocalOrRemote"
          },
          {
            "$ref": "#/components/schemas/RoleCondFormulaValueUserSettingBooleanSchema"
          },
          { "$ref": "#/components/schemas/RoleCondFormulaValueAssignedRole" },
          { "$ref": "#/components/schemas/RoleCondFormulaValueCreated" },
          {
            "$ref": "#/components/schemas/RoleCondFormulaFollowersOrFollowingOrNotes"
          }
        ]
      },
      "RoleLite": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "id", "example": "xxxxxxxxxx" },
          "name": { "type": "string", "example": "New Role" },
          "color": { "type": ["string", "null"], "example": "#000000" },
          "iconUrl": { "type": ["string", "null"] },
          "description": { "type": "string" },
          "isModerator": { "type": "boolean", "example": false },
          "isAdministrator": { "type": "boolean", "example": false },
          "displayOrder": { "type": "integer", "example": 0 }
        },
        "required": [
          "id",
          "name",
          "color",
          "iconUrl",
          "description",
          "isModerator",
          "isAdministrator",
          "displayOrder"
        ]
      },
      "Role": {
        "type": "object",
        "allOf": [
          { "type": "object", "$ref": "#/components/schemas/RoleLite" },
          {
            "type": "object",
            "properties": {
              "createdAt": { "type": "string", "format": "date-time" },
              "updatedAt": { "type": "string", "format": "date-time" },
              "target": { "type": "string", "enum": ["manual", "conditional"] },
              "condFormula": {
                "type": "object",
                "$ref": "#/components/schemas/RoleCondFormulaValue"
              },
              "isPublic": { "type": "boolean", "example": false },
              "isExplorable": { "type": "boolean", "example": false },
              "asBadge": { "type": "boolean", "example": false },
              "canEditMembersByModerator": {
                "type": "boolean",
                "example": false
              },
              "policies": {
                "type": "object",
                "additionalProperties": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "value": {
                          "oneOf": [
                            { "type": "integer" },
                            { "type": "boolean" }
                          ]
                        },
                        "priority": { "type": "integer" },
                        "useDefault": { "type": "boolean" }
                      }
                    }
                  ]
                }
              },
              "usersCount": { "type": "integer" }
            },
            "required": [
              "createdAt",
              "updatedAt",
              "target",
              "condFormula",
              "isPublic",
              "isExplorable",
              "asBadge",
              "canEditMembersByModerator",
              "policies",
              "usersCount"
            ]
          }
        ]
      },
      "RolePolicies": {
        "type": "object",
        "properties": {
          "gtlAvailable": { "type": "boolean" },
          "ltlAvailable": { "type": "boolean" },
          "canPublicNote": { "type": "boolean" },
          "mentionLimit": { "type": "integer" },
          "canInvite": { "type": "boolean" },
          "inviteLimit": { "type": "integer" },
          "inviteLimitCycle": { "type": "integer" },
          "inviteExpirationTime": { "type": "integer" },
          "canManageCustomEmojis": { "type": "boolean" },
          "canManageAvatarDecorations": { "type": "boolean" },
          "canSearchNotes": { "type": "boolean" },
          "canUseTranslator": { "type": "boolean" },
          "canHideAds": { "type": "boolean" },
          "driveCapacityMb": { "type": "integer" },
          "alwaysMarkNsfw": { "type": "boolean" },
          "canUpdateBioMedia": { "type": "boolean" },
          "pinLimit": { "type": "integer" },
          "antennaLimit": { "type": "integer" },
          "wordMuteLimit": { "type": "integer" },
          "webhookLimit": { "type": "integer" },
          "clipLimit": { "type": "integer" },
          "noteEachClipsLimit": { "type": "integer" },
          "userListLimit": { "type": "integer" },
          "userEachUserListsLimit": { "type": "integer" },
          "rateLimitFactor": { "type": "integer" },
          "avatarDecorationLimit": { "type": "integer" },
          "canImportAntennas": { "type": "boolean" },
          "canImportBlocking": { "type": "boolean" },
          "canImportFollowing": { "type": "boolean" },
          "canImportMuting": { "type": "boolean" },
          "canImportUserLists": { "type": "boolean" }
        },
        "required": [
          "gtlAvailable",
          "ltlAvailable",
          "canPublicNote",
          "mentionLimit",
          "canInvite",
          "inviteLimit",
          "inviteLimitCycle",
          "inviteExpirationTime",
          "canManageCustomEmojis",
          "canManageAvatarDecorations",
          "canSearchNotes",
          "canUseTranslator",
          "canHideAds",
          "driveCapacityMb",
          "alwaysMarkNsfw",
          "canUpdateBioMedia",
          "pinLimit",
          "antennaLimit",
          "wordMuteLimit",
          "webhookLimit",
          "clipLimit",
          "noteEachClipsLimit",
          "userListLimit",
          "userEachUserListsLimit",
          "rateLimitFactor",
          "avatarDecorationLimit",
          "canImportAntennas",
          "canImportBlocking",
          "canImportFollowing",
          "canImportMuting",
          "canImportUserLists"
        ]
      },
      "ReversiGameLite": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "id" },
          "createdAt": { "type": "string", "format": "date-time" },
          "startedAt": { "type": ["string", "null"], "format": "date-time" },
          "endedAt": { "type": ["string", "null"], "format": "date-time" },
          "isStarted": { "type": "boolean" },
          "isEnded": { "type": "boolean" },
          "user1Id": { "type": "string", "format": "id" },
          "user2Id": { "type": "string", "format": "id" },
          "user1": {
            "type": "object",
            "$ref": "#/components/schemas/UserLite"
          },
          "user2": {
            "type": "object",
            "$ref": "#/components/schemas/UserLite"
          },
          "winnerId": { "type": ["string", "null"], "format": "id" },
          "winner": {
            "type": ["object", "null"],
            "allOf": [{ "$ref": "#/components/schemas/UserLite" }]
          },
          "surrenderedUserId": { "type": ["string", "null"], "format": "id" },
          "timeoutUserId": { "type": ["string", "null"], "format": "id" },
          "black": { "type": ["number", "null"] },
          "bw": { "type": "string" },
          "noIrregularRules": { "type": "boolean" },
          "isLlotheo": { "type": "boolean" },
          "canPutEverywhere": { "type": "boolean" },
          "loopedBoard": { "type": "boolean" },
          "timeLimitForEachTurn": { "type": "number" }
        },
        "required": [
          "id",
          "createdAt",
          "startedAt",
          "endedAt",
          "isStarted",
          "isEnded",
          "user1Id",
          "user2Id",
          "user1",
          "user2",
          "winnerId",
          "winner",
          "surrenderedUserId",
          "timeoutUserId",
          "black",
          "bw",
          "noIrregularRules",
          "isLlotheo",
          "canPutEverywhere",
          "loopedBoard",
          "timeLimitForEachTurn"
        ]
      },
      "ReversiGameDetailed": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "id" },
          "createdAt": { "type": "string", "format": "date-time" },
          "startedAt": { "type": ["string", "null"], "format": "date-time" },
          "endedAt": { "type": ["string", "null"], "format": "date-time" },
          "isStarted": { "type": "boolean" },
          "isEnded": { "type": "boolean" },
          "form1": { "type": ["object", "null"] },
          "form2": { "type": ["object", "null"] },
          "user1Ready": { "type": "boolean" },
          "user2Ready": { "type": "boolean" },
          "user1Id": { "type": "string", "format": "id" },
          "user2Id": { "type": "string", "format": "id" },
          "user1": {
            "type": "object",
            "$ref": "#/components/schemas/UserLite"
          },
          "user2": {
            "type": "object",
            "$ref": "#/components/schemas/UserLite"
          },
          "winnerId": { "type": ["string", "null"], "format": "id" },
          "winner": {
            "type": ["object", "null"],
            "allOf": [{ "$ref": "#/components/schemas/UserLite" }]
          },
          "surrenderedUserId": { "type": ["string", "null"], "format": "id" },
          "timeoutUserId": { "type": ["string", "null"], "format": "id" },
          "black": { "type": ["number", "null"] },
          "bw": { "type": "string" },
          "noIrregularRules": { "type": "boolean" },
          "isLlotheo": { "type": "boolean" },
          "canPutEverywhere": { "type": "boolean" },
          "loopedBoard": { "type": "boolean" },
          "timeLimitForEachTurn": { "type": "number" },
          "logs": {
            "type": "array",
            "items": { "type": "array", "items": { "type": "number" } }
          },
          "map": { "type": "array", "items": { "type": "string" } }
        },
        "required": [
          "id",
          "createdAt",
          "startedAt",
          "endedAt",
          "isStarted",
          "isEnded",
          "form1",
          "form2",
          "user1Ready",
          "user2Ready",
          "user1Id",
          "user2Id",
          "user1",
          "user2",
          "winnerId",
          "winner",
          "surrenderedUserId",
          "timeoutUserId",
          "black",
          "bw",
          "noIrregularRules",
          "isLlotheo",
          "canPutEverywhere",
          "loopedBoard",
          "timeLimitForEachTurn",
          "logs",
          "map"
        ]
      },
      "MetaLite": {
        "type": "object",
        "properties": {
          "maintainerName": { "type": ["string", "null"] },
          "maintainerEmail": { "type": ["string", "null"] },
          "version": { "type": "string" },
          "providesTarball": { "type": "boolean" },
          "name": { "type": ["string", "null"] },
          "shortName": { "type": ["string", "null"] },
          "uri": {
            "type": "string",
            "format": "url",
            "example": "https://misskey.example.com"
          },
          "description": { "type": ["string", "null"] },
          "langs": { "type": "array", "items": { "type": "string" } },
          "tosUrl": { "type": ["string", "null"] },
          "repositoryUrl": {
            "type": ["string", "null"],
            "default": "https://github.com/misskey-dev/misskey"
          },
          "feedbackUrl": {
            "type": ["string", "null"],
            "default": "https://github.com/misskey-dev/misskey/issues/new"
          },
          "defaultDarkTheme": { "type": ["string", "null"] },
          "defaultLightTheme": { "type": ["string", "null"] },
          "disableRegistration": { "type": "boolean" },
          "emailRequiredForSignup": { "type": "boolean" },
          "enableHcaptcha": { "type": "boolean" },
          "hcaptchaSiteKey": { "type": ["string", "null"] },
          "enableMcaptcha": { "type": "boolean" },
          "mcaptchaSiteKey": { "type": ["string", "null"] },
          "mcaptchaInstanceUrl": { "type": ["string", "null"] },
          "enableRecaptcha": { "type": "boolean" },
          "recaptchaSiteKey": { "type": ["string", "null"] },
          "enableTurnstile": { "type": "boolean" },
          "turnstileSiteKey": { "type": ["string", "null"] },
          "swPublickey": { "type": ["string", "null"] },
          "mascotImageUrl": { "type": "string", "default": "/assets/ai.png" },
          "bannerUrl": { "type": ["string", "null"] },
          "serverErrorImageUrl": { "type": ["string", "null"] },
          "infoImageUrl": { "type": ["string", "null"] },
          "notFoundImageUrl": { "type": ["string", "null"] },
          "iconUrl": { "type": ["string", "null"] },
          "maxNoteTextLength": { "type": "number" },
          "ads": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "id",
                  "example": "xxxxxxxxxx"
                },
                "url": { "type": "string", "format": "url" },
                "place": { "type": "string" },
                "ratio": { "type": "number" },
                "imageUrl": { "type": "string", "format": "url" },
                "dayOfWeek": { "type": "integer" }
              },
              "required": [
                "id",
                "url",
                "place",
                "ratio",
                "imageUrl",
                "dayOfWeek"
              ]
            }
          },
          "trustedLinkUrlPatterns": {
            "type": "array",
            "items": { "type": "string" }
          },
          "notesPerOneAd": { "type": "number", "default": 0 },
          "enableEmail": { "type": "boolean" },
          "enableServiceWorker": { "type": "boolean" },
          "translatorAvailable": { "type": "boolean" },
          "mediaProxy": { "type": "string" },
          "enableUrlPreview": { "type": "boolean" },
          "backgroundImageUrl": { "type": ["string", "null"] },
          "impressumUrl": { "type": ["string", "null"] },
          "logoImageUrl": { "type": ["string", "null"] },
          "privacyPolicyUrl": { "type": ["string", "null"] },
          "inquiryUrl": { "type": ["string", "null"] },
          "serverRules": { "type": "array", "items": { "type": "string" } },
          "themeColor": { "type": ["string", "null"] },
          "policies": {
            "type": "object",
            "$ref": "#/components/schemas/RolePolicies"
          },
          "noteSearchableScope": {
            "type": "string",
            "enum": ["local", "global"],
            "default": "local"
          },
          "maxFileSize": { "type": "number" }
        },
        "required": [
          "maintainerName",
          "maintainerEmail",
          "version",
          "providesTarball",
          "name",
          "shortName",
          "uri",
          "description",
          "langs",
          "tosUrl",
          "repositoryUrl",
          "feedbackUrl",
          "defaultDarkTheme",
          "defaultLightTheme",
          "disableRegistration",
          "emailRequiredForSignup",
          "enableHcaptcha",
          "hcaptchaSiteKey",
          "enableMcaptcha",
          "mcaptchaSiteKey",
          "mcaptchaInstanceUrl",
          "enableRecaptcha",
          "recaptchaSiteKey",
          "enableTurnstile",
          "turnstileSiteKey",
          "swPublickey",
          "mascotImageUrl",
          "bannerUrl",
          "serverErrorImageUrl",
          "infoImageUrl",
          "notFoundImageUrl",
          "iconUrl",
          "maxNoteTextLength",
          "ads",
          "trustedLinkUrlPatterns",
          "notesPerOneAd",
          "enableEmail",
          "enableServiceWorker",
          "translatorAvailable",
          "mediaProxy",
          "enableUrlPreview",
          "backgroundImageUrl",
          "impressumUrl",
          "logoImageUrl",
          "privacyPolicyUrl",
          "inquiryUrl",
          "serverRules",
          "themeColor",
          "policies",
          "noteSearchableScope",
          "maxFileSize"
        ]
      },
      "MetaDetailedOnly": {
        "type": "object",
        "properties": {
          "features": {
            "type": "object",
            "properties": {
              "registration": { "type": "boolean" },
              "emailRequiredForSignup": { "type": "boolean" },
              "localTimeline": { "type": "boolean" },
              "globalTimeline": { "type": "boolean" },
              "hcaptcha": { "type": "boolean" },
              "turnstile": { "type": "boolean" },
              "recaptcha": { "type": "boolean" },
              "objectStorage": { "type": "boolean" },
              "serviceWorker": { "type": "boolean" },
              "miauth": { "type": "boolean", "default": true }
            },
            "required": [
              "registration",
              "emailRequiredForSignup",
              "localTimeline",
              "globalTimeline",
              "hcaptcha",
              "turnstile",
              "recaptcha",
              "objectStorage",
              "serviceWorker",
              "miauth"
            ]
          },
          "proxyAccountName": { "type": ["string", "null"] },
          "requireSetup": { "type": "boolean", "example": false },
          "cacheRemoteFiles": { "type": "boolean" },
          "cacheRemoteSensitiveFiles": { "type": "boolean" }
        },
        "required": [
          "features",
          "proxyAccountName",
          "requireSetup",
          "cacheRemoteFiles",
          "cacheRemoteSensitiveFiles"
        ]
      },
      "MetaDetailed": {
        "type": "object",
        "allOf": [
          { "type": "object", "$ref": "#/components/schemas/MetaLite" },
          { "type": "object", "$ref": "#/components/schemas/MetaDetailedOnly" }
        ]
      },
      "SystemWebhook": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "isActive": { "type": "boolean" },
          "updatedAt": { "type": "string", "format": "date-time" },
          "latestSentAt": { "type": ["string", "null"], "format": "date-time" },
          "latestStatus": { "type": ["number", "null"] },
          "name": { "type": "string" },
          "on": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["abuseReport", "abuseReportResolved", "userCreated"]
            }
          },
          "url": { "type": "string" },
          "secret": { "type": "string" }
        },
        "required": [
          "id",
          "isActive",
          "updatedAt",
          "latestSentAt",
          "latestStatus",
          "name",
          "on",
          "url",
          "secret"
        ]
      },
      "AbuseReportNotificationRecipient": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "isActive": { "type": "boolean" },
          "updatedAt": { "type": "string", "format": "date-time" },
          "name": { "type": "string" },
          "method": { "type": "string", "enum": ["email", "webhook"] },
          "userId": { "type": "string" },
          "user": {
            "type": "object",
            "allOf": [{ "$ref": "#/components/schemas/UserLite" }]
          },
          "systemWebhookId": { "type": "string" },
          "systemWebhook": {
            "type": "object",
            "allOf": [{ "$ref": "#/components/schemas/SystemWebhook" }]
          }
        },
        "required": [
          "id",
          "isActive",
          "updatedAt",
          "name",
          "method",
          "userId",
          "user",
          "systemWebhookId",
          "systemWebhook"
        ]
      }
    },
    "securitySchemes": { "bearerAuth": { "type": "http", "scheme": "bearer" } }
  }
}
